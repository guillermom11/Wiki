[
  {
    "id": "\\app\\api\\sentry-example-api\\route::GET",
    "language": "typescript",
    "label": "GET",
    "type": "function",
    "parent": "C:\\Users\\gmasc\\OneDrive\\Documentos\\CodeGPT\\danielavila.me-main\\app\\api\\sentry-example-api\\route",
    "totalTokens": 31,
    "inDegree": 1,
    "outDegree": 0,
    "code": "function GET() {\n  throw new Error(\"Sentry Example API Route Error\");\n  return NextResponse.json({ data: \"Testing Sentry Error...\" });\n}",
    "importStatements": [],
    "codeNoBody": "function GET() {\n       //...\n       }",
    "originFile": "\\app\\api\\sentry-example-api\\route.ts"
  },
  {
    "id": "\\app\\api\\sentry-example-api\\route::dynamic",
    "language": "typescript",
    "label": "dynamic",
    "type": "assignment",
    "parent": "C:\\Users\\gmasc\\OneDrive\\Documentos\\CodeGPT\\danielavila.me-main\\app\\api\\sentry-example-api\\route",
    "totalTokens": 9,
    "inDegree": 1,
    "outDegree": 0,
    "code": "export const dynamic = \"force-dynamic\";",
    "importStatements": [],
    "codeNoBody": "export const dynamic = \"force-dynamic\";",
    "originFile": "\\app\\api\\sentry-example-api\\route.ts"
  },
  {
    "id": "\\app\\api\\sentry-example-api\\route",
    "language": "typescript",
    "label": "C:\\Users\\gmasc\\OneDrive\\Documentos\\CodeGPT\\danielavila.me-main\\app\\api\\sentry-example-api\\route.ts",
    "type": "file",
    "totalTokens": 63,
    "inDegree": 0,
    "outDegree": 2,
    "code": "import { NextResponse } from \"next/server\";\n\nexport const dynamic = \"force-dynamic\";\n\n// A faulty API route to test Sentry's error monitoring\nexport function GET() {\n  throw new Error(\"Sentry Example API Route Error\");\n  return NextResponse.json({ data: \"Testing Sentry Error...\" });\n}\n",
    "importStatements": [
      "import { NextResponse } from \"next/server\";"
    ],
    "codeNoBody": "import { NextResponse } from \"next/server\";\nexport const dynamic = \"force-dynamic\";\n\n// A faulty API route to test Sentry's error monitoring\nexport function GET() {\n       //...\n       }",
    "originFile": "\\app\\api\\sentry-example-api\\route.ts"
  },
  {
    "id": "\\app\\global-error::GlobalError",
    "language": "tsx",
    "label": "GlobalError",
    "type": "function",
    "parent": "C:\\Users\\gmasc\\OneDrive\\Documentos\\CodeGPT\\danielavila.me-main\\app\\global-error",
    "totalTokens": 123,
    "inDegree": 1,
    "outDegree": 0,
    "code": "function GlobalError({ error }: { error: Error & { digest?: string } }) {\n  useEffect(() => {\n    Sentry.captureException(error);\n  }, [error]);\n\n  return (\n    <html>\n      <body>\n        {/* `NextError` is the default Next.js error page component. Its type\n        definition requires a `statusCode` prop. However, since the App Router\n        does not expose status codes for errors, we simply pass 0 to render a\n        generic error message. */}\n        <NextError statusCode={0} />\n      </body>\n    </html>\n  );\n}",
    "importStatements": [],
    "codeNoBody": "function GlobalError({ error }: { error: Error & { digest?: string } }) {\n               //...\n               }",
    "originFile": "\\app\\global-error.tsx"
  },
  {
    "id": "\\app\\global-error",
    "language": "tsx",
    "label": "C:\\Users\\gmasc\\OneDrive\\Documentos\\CodeGPT\\danielavila.me-main\\app\\global-error.tsx",
    "type": "file",
    "totalTokens": 156,
    "inDegree": 0,
    "outDegree": 1,
    "code": "\"use client\";\n\nimport * as Sentry from \"@sentry/nextjs\";\nimport NextError from \"next/error\";\nimport { useEffect } from \"react\";\n\nexport default function GlobalError({ error }: { error: Error & { digest?: string } }) {\n  useEffect(() => {\n    Sentry.captureException(error);\n  }, [error]);\n\n  return (\n    <html>\n      <body>\n        {/* `NextError` is the default Next.js error page component. Its type\n        definition requires a `statusCode` prop. However, since the App Router\n        does not expose status codes for errors, we simply pass 0 to render a\n        generic error message. */}\n        <NextError statusCode={0} />\n      </body>\n    </html>\n  );\n}",
    "importStatements": [
      "import * as Sentry from \"@sentry/nextjs\";",
      "import NextError from \"next/error\";",
      "import { useEffect } from \"react\";"
    ],
    "codeNoBody": "\"use client\";\nimport * as Sentry from \"@sentry/nextjs\";\nimport NextError from \"next/error\";\nimport { useEffect } from \"react\";\n\nexport default function GlobalError({ error }: { error: Error & { digest?: string } }) {\n               //...\n               }",
    "originFile": "\\app\\global-error.tsx"
  },
  {
    "id": "\\app\\layout::RootLayout",
    "language": "tsx",
    "label": "RootLayout",
    "type": "function",
    "parent": "C:\\Users\\gmasc\\OneDrive\\Documentos\\CodeGPT\\danielavila.me-main\\app\\layout",
    "totalTokens": 82,
    "inDegree": 1,
    "outDegree": 1,
    "code": "function RootLayout({\n  children,\n}: Readonly<{\n  children: React.ReactNode;\n}>) {\n  return (\n    <html lang=\"en\">\n      <body className={inter.className}>\n        <ThemeProvider\n            attribute=\"class\"\n            defaultTheme=\"dark\"\n            enableSystem\n            disableTransitionOnChange\n        >\n            {children}\n        </ThemeProvider>\n      </body>\n    </html>\n  );\n}",
    "importStatements": [],
    "codeNoBody": "function RootLayout({\n  children,\n}: Readonly<{\n  children: React.ReactNode;\n}>) {\n               //...\n               }",
    "originFile": "\\app\\layout.tsx"
  },
  {
    "id": "\\app\\layout::metadata",
    "language": "tsx",
    "label": "metadata",
    "type": "assignment",
    "parent": "C:\\Users\\gmasc\\OneDrive\\Documentos\\CodeGPT\\danielavila.me-main\\app\\layout",
    "totalTokens": 31,
    "inDegree": 1,
    "outDegree": 0,
    "code": "export const metadata: Metadata = {\n  title: \"Daniel Ávila Porfolio\",\n  description: \"Building IA Tools With LLMs\",\n};",
    "importStatements": [],
    "codeNoBody": "export const metadata: Metadata = {\n  title: \"Daniel Ávila Porfolio\",\n  description: \"Building IA Tools With LLMs\",\n};",
    "originFile": "\\app\\layout.tsx"
  },
  {
    "id": "\\app\\layout::inter",
    "language": "tsx",
    "label": "inter",
    "type": "assignment",
    "parent": "C:\\Users\\gmasc\\OneDrive\\Documentos\\CodeGPT\\danielavila.me-main\\app\\layout",
    "totalTokens": 11,
    "inDegree": 2,
    "outDegree": 0,
    "code": "const inter = Inter({ subsets: [\"latin\"] });",
    "importStatements": [],
    "codeNoBody": "const inter = Inter({ subsets: [\"latin\"] });",
    "originFile": "\\app\\layout.tsx"
  },
  {
    "id": "\\app\\layout",
    "language": "tsx",
    "label": "C:\\Users\\gmasc\\OneDrive\\Documentos\\CodeGPT\\danielavila.me-main\\app\\layout.tsx",
    "type": "file",
    "totalTokens": 161,
    "inDegree": 0,
    "outDegree": 3,
    "code": "import type { Metadata } from \"next\";\nimport { Inter } from \"next/font/google\";\nimport \"./globals.css\";\nimport { ThemeProvider } from \"next-themes\";\n\nconst inter = Inter({ subsets: [\"latin\"] });\n\nexport const metadata: Metadata = {\n  title: \"Daniel Ávila Porfolio\",\n  description: \"Building IA Tools With LLMs\",\n};\n\nexport default function RootLayout({\n  children,\n}: Readonly<{\n  children: React.ReactNode;\n}>) {\n  return (\n    <html lang=\"en\">\n      <body className={inter.className}>\n        <ThemeProvider\n            attribute=\"class\"\n            defaultTheme=\"dark\"\n            enableSystem\n            disableTransitionOnChange\n        >\n            {children}\n        </ThemeProvider>\n      </body>\n    </html>\n  );\n}\n",
    "importStatements": [
      "import type { Metadata } from \"next\";",
      "import { Inter } from \"next/font/google\";",
      "import \"./globals.css\";",
      "import { ThemeProvider } from \"next-themes\";"
    ],
    "codeNoBody": "import type { Metadata } from \"next\";\nimport { Inter } from \"next/font/google\";\nimport \"./globals.css\";\nimport { ThemeProvider } from \"next-themes\";\nconst inter = Inter({ subsets: [\"latin\"] });\n\nexport const metadata: Metadata = {\n  title: \"Daniel Ávila Porfolio\",\n  description: \"Building IA Tools With LLMs\",\n};\n\nexport default function RootLayout({\n  children,\n}: Readonly<{\n  children: React.ReactNode;\n}>) {\n               //...\n               }",
    "originFile": "\\app\\layout.tsx"
  },
  {
    "id": "\\app\\page::Home",
    "language": "tsx",
    "label": "Home",
    "type": "function",
    "parent": "C:\\Users\\gmasc\\OneDrive\\Documentos\\CodeGPT\\danielavila.me-main\\app\\page",
    "totalTokens": 102,
    "inDegree": 1,
    "outDegree": 0,
    "code": "function Home() {\n  return (\n    <main className=\"relative bg-black-100 flex justify-center items-center flex-col overflow-hidden mx-auto sm:px-10 px-5\">\n      <div className=\"max-w-7xl w-full\">\n        {/* <FloatingNav \n          navItems={navItems}\n        /> */}\n        <Hero />\n        <Grid />\n        <Scroll />\n        <RecentProjects />\n        <Footer />\n        <br />\n      </div>\n    </main>\n  );\n}",
    "importStatements": [],
    "codeNoBody": "function Home() {\n               //...\n               }",
    "originFile": "\\app\\page.tsx"
  },
  {
    "id": "\\app\\page",
    "language": "tsx",
    "label": "C:\\Users\\gmasc\\OneDrive\\Documentos\\CodeGPT\\danielavila.me-main\\app\\page.tsx",
    "type": "file",
    "totalTokens": 178,
    "inDegree": 0,
    "outDegree": 1,
    "code": "import Footer from \"@/components/Footer\";\nimport Grid from \"@/components/Grid\";\nimport Hero from \"@/components/Hero\";\nimport RecentProjects from \"@/components/RecentProjects\";\nimport Scroll from \"@/components/Scroll\";\nimport { FloatingNav } from \"@/components/ui/FloatingNav1\";\nimport { navItems } from \"@/data\";\nimport { FaHome } from \"react-icons/fa\";\n\nexport default function Home() {\n  return (\n    <main className=\"relative bg-black-100 flex justify-center items-center flex-col overflow-hidden mx-auto sm:px-10 px-5\">\n      <div className=\"max-w-7xl w-full\">\n        {/* <FloatingNav \n          navItems={navItems}\n        /> */}\n        <Hero />\n        <Grid />\n        <Scroll />\n        <RecentProjects />\n        <Footer />\n        <br />\n      </div>\n    </main>\n  );\n}\n",
    "importStatements": [
      "import Footer from \"@/components/Footer\";",
      "import Grid from \"@/components/Grid\";",
      "import Hero from \"@/components/Hero\";",
      "import RecentProjects from \"@/components/RecentProjects\";",
      "import Scroll from \"@/components/Scroll\";",
      "import { FloatingNav } from \"@/components/ui/FloatingNav1\";",
      "import { navItems } from \"@/data\";",
      "import { FaHome } from \"react-icons/fa\";"
    ],
    "codeNoBody": "import Footer from \"@/components/Footer\";\nimport Grid from \"@/components/Grid\";\nimport Hero from \"@/components/Hero\";\nimport RecentProjects from \"@/components/RecentProjects\";\nimport Scroll from \"@/components/Scroll\";\nimport { FloatingNav } from \"@/components/ui/FloatingNav1\";\nimport { navItems } from \"@/data\";\nimport { FaHome } from \"react-icons/fa\";\nexport default function Home() {\n               //...\n               }",
    "originFile": "\\app\\page.tsx"
  },
  {
    "id": "\\app\\provider::ThemeProvider",
    "language": "tsx",
    "label": "ThemeProvider",
    "type": "function",
    "parent": "C:\\Users\\gmasc\\OneDrive\\Documentos\\CodeGPT\\danielavila.me-main\\app\\provider",
    "totalTokens": 30,
    "inDegree": 1,
    "outDegree": 0,
    "code": "function ThemeProvider({ children, ...props }: ThemeProviderProps) {\n  return <NextThemesProvider {...props}>{children}</NextThemesProvider>\n}",
    "importStatements": [],
    "codeNoBody": "function ThemeProvider({ children, ...props }: ThemeProviderProps) {\n       //...\n       }",
    "originFile": "\\app\\provider.tsx"
  },
  {
    "id": "\\app\\provider",
    "language": "tsx",
    "label": "C:\\Users\\gmasc\\OneDrive\\Documentos\\CodeGPT\\danielavila.me-main\\app\\provider.tsx",
    "type": "file",
    "totalTokens": 72,
    "inDegree": 0,
    "outDegree": 1,
    "code": "\"use client\"\n\nimport * as React from \"react\"\nimport { ThemeProvider as NextThemesProvider } from \"next-themes\"\nimport { type ThemeProviderProps } from \"next-themes/dist/types\"\n\nexport function ThemeProvider({ children, ...props }: ThemeProviderProps) {\n  return <NextThemesProvider {...props}>{children}</NextThemesProvider>\n}\n",
    "importStatements": [
      "import * as React from \"react\"",
      "import { ThemeProvider as NextThemesProvider } from \"next-themes\"",
      "import { type ThemeProviderProps } from \"next-themes/dist/types\""
    ],
    "codeNoBody": "\"use client\"\nimport * as React from \"react\"\nimport { ThemeProvider as NextThemesProvider } from \"next-themes\"\nimport { type ThemeProviderProps } from \"next-themes/dist/types\"\n\nexport function ThemeProvider({ children, ...props }: ThemeProviderProps) {\n       //...\n       }",
    "originFile": "\\app\\provider.tsx"
  },
  {
    "id": "\\app\\sentry-example-page\\page::Page",
    "language": "tsx",
    "label": "Page",
    "type": "function",
    "parent": "C:\\Users\\gmasc\\OneDrive\\Documentos\\CodeGPT\\danielavila.me-main\\app\\sentry-example-page\\page",
    "totalTokens": 1485,
    "inDegree": 1,
    "outDegree": 0,
    "code": "function Page() {\n  return (\n    <div>\n      <Head>\n        <title>Sentry Onboarding</title>\n        <meta name=\"description\" content=\"Test Sentry for your Next.js app!\" />\n      </Head>\n\n      <main\n        style={{\n          minHeight: \"100vh\",\n          display: \"flex\",\n          flexDirection: \"column\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n        }}\n      >\n        <h1 style={{ fontSize: \"4rem\", margin: \"14px 0\" }}>\n          <svg\n            style={{\n              height: \"1em\",\n            }}\n            xmlns=\"http://www.w3.org/2000/svg\"\n            viewBox=\"0 0 200 44\"\n          >\n            <path\n              fill=\"currentColor\"\n              d=\"M124.32,28.28,109.56,9.22h-3.68V34.77h3.73V15.19l15.18,19.58h3.26V9.22h-3.73ZM87.15,23.54h13.23V20.22H87.14V12.53h14.93V9.21H83.34V34.77h18.92V31.45H87.14ZM71.59,20.3h0C66.44,19.06,65,18.08,65,15.7c0-2.14,1.89-3.59,4.71-3.59a12.06,12.06,0,0,1,7.07,2.55l2-2.83a14.1,14.1,0,0,0-9-3c-5.06,0-8.59,3-8.59,7.27,0,4.6,3,6.19,8.46,7.52C74.51,24.74,76,25.78,76,28.11s-2,3.77-5.09,3.77a12.34,12.34,0,0,1-8.3-3.26l-2.25,2.69a15.94,15.94,0,0,0,10.42,3.85c5.48,0,9-2.95,9-7.51C79.75,23.79,77.47,21.72,71.59,20.3ZM195.7,9.22l-7.69,12-7.64-12h-4.46L186,24.67V34.78h3.84V24.55L200,9.22Zm-64.63,3.46h8.37v22.1h3.84V12.68h8.37V9.22H131.08ZM169.41,24.8c3.86-1.07,6-3.77,6-7.63,0-4.91-3.59-8-9.38-8H154.67V34.76h3.8V25.58h6.45l6.48,9.2h4.44l-7-9.82Zm-10.95-2.5V12.6h7.17c3.74,0,5.88,1.77,5.88,4.84s-2.29,4.86-5.84,4.86Z M29,2.26a4.67,4.67,0,0,0-8,0L14.42,13.53A32.21,32.21,0,0,1,32.17,40.19H27.55A27.68,27.68,0,0,0,12.09,17.47L6,28a15.92,15.92,0,0,1,9.23,12.17H4.62A.76.76,0,0,1,4,39.06l2.94-5a10.74,10.74,0,0,0-3.36-1.9l-2.91,5a4.54,4.54,0,0,0,1.69,6.24A4.66,4.66,0,0,0,4.62,44H19.15a19.4,19.4,0,0,0-8-17.31l2.31-4A23.87,23.87,0,0,1,23.76,44H36.07a35.88,35.88,0,0,0-16.41-31.8l4.67-8a.77.77,0,0,1,1.05-.27c.53.29,20.29,34.77,20.66,35.17a.76.76,0,0,1-.68,1.13H40.6q.09,1.91,0,3.81h4.78A4.59,4.59,0,0,0,50,39.43a4.49,4.49,0,0,0-.62-2.28Z\"\n            ></path>\n          </svg>\n        </h1>\n\n        <p>Get started by sending us a sample error:</p>\n        <button\n          type=\"button\"\n          style={{\n            padding: \"12px\",\n            cursor: \"pointer\",\n            backgroundColor: \"#AD6CAA\",\n            borderRadius: \"4px\",\n            border: \"none\",\n            color: \"white\",\n            fontSize: \"14px\",\n            margin: \"18px\",\n          }}\n          onClick={async () => {\n            await Sentry.startSpan({\n              name: 'Example Frontend Span',\n              op: 'test'\n            }, async () => {\n              const res = await fetch(\"/api/sentry-example-api\");\n              if (!res.ok) {\n                throw new Error(\"Sentry Example Frontend Error\");\n              }\n            });\n          }}\n        >\n          Throw error!\n        </button>\n\n        <p>\n          Next, look for the error on the{\" \"}\n          <a href=\"https://daniel-avila.sentry.io/issues/?project=4507580984721408\">Issues Page</a>.\n        </p>\n        <p style={{ marginTop: \"24px\" }}>\n          For more information, see{\" \"}\n          <a href=\"https://docs.sentry.io/platforms/javascript/guides/nextjs/\">\n            https://docs.sentry.io/platforms/javascript/guides/nextjs/\n          </a>\n        </p>\n      </main>\n    </div>\n  );\n}",
    "importStatements": [],
    "codeNoBody": "function Page() {\n               //...\n               }",
    "originFile": "\\app\\sentry-example-page\\page.tsx"
  },
  {
    "id": "\\app\\sentry-example-page\\page",
    "language": "tsx",
    "label": "C:\\Users\\gmasc\\OneDrive\\Documentos\\CodeGPT\\danielavila.me-main\\app\\sentry-example-page\\page.tsx",
    "type": "file",
    "totalTokens": 1509,
    "inDegree": 0,
    "outDegree": 1,
    "code": "\"use client\";\n\nimport Head from \"next/head\";\nimport * as Sentry from \"@sentry/nextjs\";\n\nexport default function Page() {\n  return (\n    <div>\n      <Head>\n        <title>Sentry Onboarding</title>\n        <meta name=\"description\" content=\"Test Sentry for your Next.js app!\" />\n      </Head>\n\n      <main\n        style={{\n          minHeight: \"100vh\",\n          display: \"flex\",\n          flexDirection: \"column\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n        }}\n      >\n        <h1 style={{ fontSize: \"4rem\", margin: \"14px 0\" }}>\n          <svg\n            style={{\n              height: \"1em\",\n            }}\n            xmlns=\"http://www.w3.org/2000/svg\"\n            viewBox=\"0 0 200 44\"\n          >\n            <path\n              fill=\"currentColor\"\n              d=\"M124.32,28.28,109.56,9.22h-3.68V34.77h3.73V15.19l15.18,19.58h3.26V9.22h-3.73ZM87.15,23.54h13.23V20.22H87.14V12.53h14.93V9.21H83.34V34.77h18.92V31.45H87.14ZM71.59,20.3h0C66.44,19.06,65,18.08,65,15.7c0-2.14,1.89-3.59,4.71-3.59a12.06,12.06,0,0,1,7.07,2.55l2-2.83a14.1,14.1,0,0,0-9-3c-5.06,0-8.59,3-8.59,7.27,0,4.6,3,6.19,8.46,7.52C74.51,24.74,76,25.78,76,28.11s-2,3.77-5.09,3.77a12.34,12.34,0,0,1-8.3-3.26l-2.25,2.69a15.94,15.94,0,0,0,10.42,3.85c5.48,0,9-2.95,9-7.51C79.75,23.79,77.47,21.72,71.59,20.3ZM195.7,9.22l-7.69,12-7.64-12h-4.46L186,24.67V34.78h3.84V24.55L200,9.22Zm-64.63,3.46h8.37v22.1h3.84V12.68h8.37V9.22H131.08ZM169.41,24.8c3.86-1.07,6-3.77,6-7.63,0-4.91-3.59-8-9.38-8H154.67V34.76h3.8V25.58h6.45l6.48,9.2h4.44l-7-9.82Zm-10.95-2.5V12.6h7.17c3.74,0,5.88,1.77,5.88,4.84s-2.29,4.86-5.84,4.86Z M29,2.26a4.67,4.67,0,0,0-8,0L14.42,13.53A32.21,32.21,0,0,1,32.17,40.19H27.55A27.68,27.68,0,0,0,12.09,17.47L6,28a15.92,15.92,0,0,1,9.23,12.17H4.62A.76.76,0,0,1,4,39.06l2.94-5a10.74,10.74,0,0,0-3.36-1.9l-2.91,5a4.54,4.54,0,0,0,1.69,6.24A4.66,4.66,0,0,0,4.62,44H19.15a19.4,19.4,0,0,0-8-17.31l2.31-4A23.87,23.87,0,0,1,23.76,44H36.07a35.88,35.88,0,0,0-16.41-31.8l4.67-8a.77.77,0,0,1,1.05-.27c.53.29,20.29,34.77,20.66,35.17a.76.76,0,0,1-.68,1.13H40.6q.09,1.91,0,3.81h4.78A4.59,4.59,0,0,0,50,39.43a4.49,4.49,0,0,0-.62-2.28Z\"\n            ></path>\n          </svg>\n        </h1>\n\n        <p>Get started by sending us a sample error:</p>\n        <button\n          type=\"button\"\n          style={{\n            padding: \"12px\",\n            cursor: \"pointer\",\n            backgroundColor: \"#AD6CAA\",\n            borderRadius: \"4px\",\n            border: \"none\",\n            color: \"white\",\n            fontSize: \"14px\",\n            margin: \"18px\",\n          }}\n          onClick={async () => {\n            await Sentry.startSpan({\n              name: 'Example Frontend Span',\n              op: 'test'\n            }, async () => {\n              const res = await fetch(\"/api/sentry-example-api\");\n              if (!res.ok) {\n                throw new Error(\"Sentry Example Frontend Error\");\n              }\n            });\n          }}\n        >\n          Throw error!\n        </button>\n\n        <p>\n          Next, look for the error on the{\" \"}\n          <a href=\"https://daniel-avila.sentry.io/issues/?project=4507580984721408\">Issues Page</a>.\n        </p>\n        <p style={{ marginTop: \"24px\" }}>\n          For more information, see{\" \"}\n          <a href=\"https://docs.sentry.io/platforms/javascript/guides/nextjs/\">\n            https://docs.sentry.io/platforms/javascript/guides/nextjs/\n          </a>\n        </p>\n      </main>\n    </div>\n  );\n}\n",
    "importStatements": [
      "import Head from \"next/head\";",
      "import * as Sentry from \"@sentry/nextjs\";"
    ],
    "codeNoBody": "\"use client\";\nimport Head from \"next/head\";\nimport * as Sentry from \"@sentry/nextjs\";\n\nexport default function Page() {\n               //...\n               }",
    "originFile": "\\app\\sentry-example-page\\page.tsx"
  },
  {
    "id": "\\components\\Footer::Footer",
    "language": "tsx",
    "label": "Footer",
    "type": "function",
    "parent": "C:\\Users\\gmasc\\OneDrive\\Documentos\\CodeGPT\\danielavila.me-main\\components\\Footer",
    "totalTokens": 300,
    "inDegree": 1,
    "outDegree": 0,
    "code": "const Footer = () => {\n  return (\n    <footer className=\"w-full pt-20 pb-10\" id=\"contact\">\n      {/* background grid */}\n      <div className=\"w-full absolute left-0 -bottom-72 min-h-96\">\n        <img\n          src=\"/footer-grid.svg\"\n          alt=\"grid\"\n          className=\"w-full h-full opacity-50 \"\n        />\n      </div>\n\n      <div className=\"flex flex-col items-center\">\n        <LampDemo></LampDemo>\n      </div>\n      <div className=\"flex mt-16 md:flex-row flex-col justify-between items-center\">\n        <p className=\"md:text-base text-sm md:font-normal font-light\">\n          Copyright © 2024 Daniel San\n        </p>\n\n        {/* Social Media Icons */}\n        <div className=\"flex items-center md:gap-3 gap-6\">\n          {socialMedia.map(({id, img, link}) => (\n            <a key={id} target=\"_blank\">\n            <div\n              className=\"w-10 h-10 cursor-pointer flex justify-center items-center backdrop-filter backdrop-blur-lg saturate-180 bg-opacity-75 bg-black-200 rounded-lg border border-black-300\"\n            >\n              <img src={img} alt=\"icons\" width={20} height={20} />\n            </div>\n            </a>\n          ))}\n        </div>\n\n      </div>\n    </footer>\n  );\n};",
    "importStatements": [],
    "codeNoBody": "const Footer = () => {\n//...\n};",
    "originFile": "\\components\\Footer.tsx"
  },
  {
    "id": "\\components\\Footer",
    "language": "tsx",
    "label": "C:\\Users\\gmasc\\OneDrive\\Documentos\\CodeGPT\\danielavila.me-main\\components\\Footer.tsx",
    "type": "file",
    "totalTokens": 362,
    "inDegree": 0,
    "outDegree": 1,
    "code": "import { FaLocationArrow } from \"react-icons/fa6\";\n\nimport { socialMedia } from \"@/data\";\nimport MagicButton from \"./ui/MagicButton\";\nimport { SiCalendly } from \"react-icons/si\";\nimport { LampDemo } from \"./ui/LampEffect\";\n\nconst Footer = () => {\n  return (\n    <footer className=\"w-full pt-20 pb-10\" id=\"contact\">\n      {/* background grid */}\n      <div className=\"w-full absolute left-0 -bottom-72 min-h-96\">\n        <img\n          src=\"/footer-grid.svg\"\n          alt=\"grid\"\n          className=\"w-full h-full opacity-50 \"\n        />\n      </div>\n\n      <div className=\"flex flex-col items-center\">\n        <LampDemo></LampDemo>\n      </div>\n      <div className=\"flex mt-16 md:flex-row flex-col justify-between items-center\">\n        <p className=\"md:text-base text-sm md:font-normal font-light\">\n          Copyright © 2024 Daniel San\n        </p>\n\n        {/* Social Media Icons */}\n        <div className=\"flex items-center md:gap-3 gap-6\">\n          {socialMedia.map(({id, img, link}) => (\n            <a key={id} target=\"_blank\">\n            <div\n              className=\"w-10 h-10 cursor-pointer flex justify-center items-center backdrop-filter backdrop-blur-lg saturate-180 bg-opacity-75 bg-black-200 rounded-lg border border-black-300\"\n            >\n              <img src={img} alt=\"icons\" width={20} height={20} />\n            </div>\n            </a>\n          ))}\n        </div>\n\n      </div>\n    </footer>\n  );\n};\n\nexport default Footer;",
    "importStatements": [
      "import { FaLocationArrow } from \"react-icons/fa6\";",
      "import { socialMedia } from \"@/data\";",
      "import MagicButton from \"./ui/MagicButton\";",
      "import { SiCalendly } from \"react-icons/si\";",
      "import { LampDemo } from \"./ui/LampEffect\";"
    ],
    "codeNoBody": "import { FaLocationArrow } from \"react-icons/fa6\";\nimport { socialMedia } from \"@/data\";\nimport MagicButton from \"./ui/MagicButton\";\nimport { SiCalendly } from \"react-icons/si\";\nimport { LampDemo } from \"./ui/LampEffect\";\n\nconst Footer = () => {\n//...\n};\n\nexport default Footer;",
    "originFile": "\\components\\Footer.tsx"
  },
  {
    "id": "\\components\\Grid::Grid",
    "language": "tsx",
    "label": "Grid",
    "type": "function",
    "parent": "C:\\Users\\gmasc\\OneDrive\\Documentos\\CodeGPT\\danielavila.me-main\\components\\Grid",
    "totalTokens": 125,
    "inDegree": 1,
    "outDegree": 0,
    "code": "const Grid = () => {\n  return (\n    <section id=\"about\">\n        <BentoGrid>\n            {gridItems.map(({id, title, description, className, img, imgClassName, titleClassName, spareImg }) => (\n                <BentoGridItem \n                    id={id}\n                    key={id}\n                    title={title}\n                    description={description}\n                    className={className}\n                    img={img}\n                    imgClassName={imgClassName}\n                    titleClassName={titleClassName}\n                    spareImg={spareImg}\n                />\n            ))}\n        </BentoGrid>\n    </section>\n  )\n}",
    "importStatements": [],
    "codeNoBody": "const Grid = () => {\n//...\n}",
    "originFile": "\\components\\Grid.tsx"
  },
  {
    "id": "\\components\\Grid",
    "language": "tsx",
    "label": "C:\\Users\\gmasc\\OneDrive\\Documentos\\CodeGPT\\danielavila.me-main\\components\\Grid.tsx",
    "type": "file",
    "totalTokens": 161,
    "inDegree": 0,
    "outDegree": 1,
    "code": "import React from 'react'\nimport { BentoGrid, BentoGridItem } from './ui/BentoGrid'\nimport { gridItems } from '@/data'\n\nconst Grid = () => {\n  return (\n    <section id=\"about\">\n        <BentoGrid>\n            {gridItems.map(({id, title, description, className, img, imgClassName, titleClassName, spareImg }) => (\n                <BentoGridItem \n                    id={id}\n                    key={id}\n                    title={title}\n                    description={description}\n                    className={className}\n                    img={img}\n                    imgClassName={imgClassName}\n                    titleClassName={titleClassName}\n                    spareImg={spareImg}\n                />\n            ))}\n        </BentoGrid>\n    </section>\n  )\n}\n\nexport default Grid",
    "importStatements": [
      "import React from 'react'",
      "import { BentoGrid, BentoGridItem } from './ui/BentoGrid'",
      "import { gridItems } from '@/data'"
    ],
    "codeNoBody": "import React from 'react'\nimport { BentoGrid, BentoGridItem } from './ui/BentoGrid'\nimport { gridItems } from '@/data'\nconst Grid = () => {\n//...\n}\n\nexport default Grid",
    "originFile": "\\components\\Grid.tsx"
  },
  {
    "id": "\\components\\Hero::Hero",
    "language": "tsx",
    "label": "Hero",
    "type": "function",
    "parent": "C:\\Users\\gmasc\\OneDrive\\Documentos\\CodeGPT\\danielavila.me-main\\components\\Hero",
    "totalTokens": 536,
    "inDegree": 1,
    "outDegree": 0,
    "code": "const Hero = () => {\n  return (\n    <div className='pb-20 pt-36'>\n        <div>\n            <Spotlight className=\"-top-40 -left-10 md:-left-32 md:-top-20 h-screen\" fill=\"white\"/>  \n            <Spotlight className=\"-top-10 left-full h-[80vh] w-[50vw]\" fill=\"purple\"/>  \n            <Spotlight className=\"top-28 left-80 h-[80vh] w-[50vw]\" fill=\"blue\"/>  \n        </div>\n\n        <div className=\"h-screen w-full dark:bg-black-100 bg-white dark:bg-grid-white/[0.02] bg-grid-black/[0.2] flex items-center justify-center absolute top-0 left-0\">\n            <div className=\"absolute pointer-events-none inset-0 flex items-center justify-center dark:bg-black-100 bg-white [mask-image:radial-gradient(ellipse_at_center,transparent_20%,black)]\" />\n        </div>\n\n        <div className=\"flex justify-center relative my-20 z-10\">\n            <div className=\"max-w-[89vw] md:mx-w-2xl lg:max-w-[60vw] flex flex-col items-center justify-center\">\n                <h2 className='uppercase tracking-widest text-md md:text-lg lg:text-xl font-bold text-center text-blue-100 max-w-80'>\n                    Daniel Ávila Arias\n                </h2>\n\n                <TextGenerateEffect\n                    className='text-center text-[40px] md:text-5xl] lg:text-6xl'\n                    words='Building AI tools with LLMs'\n                />\n\n                <p className='text-center md:tracking-wider mb-4 text-sm md:text-lg lg:text-2xl'>\n                    Hi, I&apos;m Daniel San, a Chilean Developer based in Michigan.\n                </p>\n                <br />\n                <div className=\"flex items-center md:gap-3 gap-6\">\n                    {socialMedia.map(({id, img, link}) => (\n                        <a key={id} href={link} target=\"_blank\">\n                        <div\n                        className=\"w-10 h-10 cursor-pointer flex justify-center items-center backdrop-filter backdrop-blur-lg saturate-180 bg-opacity-75 bg-black-200 rounded-lg border border-black-300\"\n                        >\n                        <img src={img} alt=\"icons\" width={20} height={20} />\n                        </div>\n                        </a>\n                    ))}\n                </div>\n            </div>\n        </div>\n    </div>\n  )\n}",
    "importStatements": [],
    "codeNoBody": "const Hero = () => {\n//...\n}",
    "originFile": "\\components\\Hero.tsx"
  },
  {
    "id": "\\components\\Hero",
    "language": "tsx",
    "label": "C:\\Users\\gmasc\\OneDrive\\Documentos\\CodeGPT\\danielavila.me-main\\components\\Hero.tsx",
    "type": "file",
    "totalTokens": 600,
    "inDegree": 0,
    "outDegree": 1,
    "code": "import React from 'react'\nimport { Spotlight } from './ui/Spotlight'\nimport { TextGenerateEffect } from './ui/TextGenerateEffect'\nimport MagicButton from './ui/MagicButton'\nimport { FaGithub } from 'react-icons/fa'\nimport { socialMedia } from '@/data'\n\nconst Hero = () => {\n  return (\n    <div className='pb-20 pt-36'>\n        <div>\n            <Spotlight className=\"-top-40 -left-10 md:-left-32 md:-top-20 h-screen\" fill=\"white\"/>  \n            <Spotlight className=\"-top-10 left-full h-[80vh] w-[50vw]\" fill=\"purple\"/>  \n            <Spotlight className=\"top-28 left-80 h-[80vh] w-[50vw]\" fill=\"blue\"/>  \n        </div>\n\n        <div className=\"h-screen w-full dark:bg-black-100 bg-white dark:bg-grid-white/[0.02] bg-grid-black/[0.2] flex items-center justify-center absolute top-0 left-0\">\n            <div className=\"absolute pointer-events-none inset-0 flex items-center justify-center dark:bg-black-100 bg-white [mask-image:radial-gradient(ellipse_at_center,transparent_20%,black)]\" />\n        </div>\n\n        <div className=\"flex justify-center relative my-20 z-10\">\n            <div className=\"max-w-[89vw] md:mx-w-2xl lg:max-w-[60vw] flex flex-col items-center justify-center\">\n                <h2 className='uppercase tracking-widest text-md md:text-lg lg:text-xl font-bold text-center text-blue-100 max-w-80'>\n                    Daniel Ávila Arias\n                </h2>\n\n                <TextGenerateEffect\n                    className='text-center text-[40px] md:text-5xl] lg:text-6xl'\n                    words='Building AI tools with LLMs'\n                />\n\n                <p className='text-center md:tracking-wider mb-4 text-sm md:text-lg lg:text-2xl'>\n                    Hi, I&apos;m Daniel San, a Chilean Developer based in Michigan.\n                </p>\n                <br />\n                <div className=\"flex items-center md:gap-3 gap-6\">\n                    {socialMedia.map(({id, img, link}) => (\n                        <a key={id} href={link} target=\"_blank\">\n                        <div\n                        className=\"w-10 h-10 cursor-pointer flex justify-center items-center backdrop-filter backdrop-blur-lg saturate-180 bg-opacity-75 bg-black-200 rounded-lg border border-black-300\"\n                        >\n                        <img src={img} alt=\"icons\" width={20} height={20} />\n                        </div>\n                        </a>\n                    ))}\n                </div>\n            </div>\n        </div>\n    </div>\n  )\n}\n\nexport default Hero",
    "importStatements": [
      "import React from 'react'",
      "import { Spotlight } from './ui/Spotlight'",
      "import { TextGenerateEffect } from './ui/TextGenerateEffect'",
      "import MagicButton from './ui/MagicButton'",
      "import { FaGithub } from 'react-icons/fa'",
      "import { socialMedia } from '@/data'"
    ],
    "codeNoBody": "import React from 'react'\nimport { Spotlight } from './ui/Spotlight'\nimport { TextGenerateEffect } from './ui/TextGenerateEffect'\nimport MagicButton from './ui/MagicButton'\nimport { FaGithub } from 'react-icons/fa'\nimport { socialMedia } from '@/data'\nconst Hero = () => {\n//...\n}\n\nexport default Hero",
    "originFile": "\\components\\Hero.tsx"
  },
  {
    "id": "\\components\\RecentProjects::RecentProjects",
    "language": "tsx",
    "label": "RecentProjects",
    "type": "function",
    "parent": "C:\\Users\\gmasc\\OneDrive\\Documentos\\CodeGPT\\danielavila.me-main\\components\\RecentProjects",
    "totalTokens": 637,
    "inDegree": 1,
    "outDegree": 0,
    "code": "const RecentProjects = () => {\n  return (\n    <div className='py-20' id=\"projects\">\n      <h1 className='heading'>\n        A small selection of {' '}\n        <span className='text-purple'>my recent projects</span>\n      </h1>\n      <div className='flex flex-wrap items-center justify-center p-10 gap-x-24 gap-y-8 mt-10'>\n        {projects.map(({ id, title, des, img, iconLists, link}) => (\n          <div key={id} className='sm:h-[30rem] lg:min-h-[30rem] h-[25rem] flex items-center justify-center sm:w-96 w-[80vw]'>\n            <PinContainer \n            title={link} \n            href={link}>\n              <div className='relative flex items-center justify-center sm:w-96 w-[80vw] overflow-hidden h-[20vh] lg:h-[30vg] mb-10'>\n                <div className='relative w-full h-full overflow-hidden lg:rounded-3xl bg-[#13162d]'>\n                  <img src=\"/bg.png\" alt=\"bg-img\" />\n                </div>\n                <img \n                  src={img} \n                  alt={title} \n                  className='z-10 absolute bottom-0' \n                  />\n              </div>  \n              <h1 className='font-bold lg:text-2xl md:text-xl text-base line-clamp-1'>\n                {title}\n              </h1>\n              <p\n                className=\"lg:text-xl lg:font-normal font-light text-sm line-clamp-2\"\n                style={{\n                  color: \"#BEC1DD\",\n                  margin: \"1vh 0\",\n                }}\n              >\n                {des}\n              </p>\n              <div className=\"flex items-center justify-between mt-7 mb-3\">\n                \n                {/* \n                  This component renders a horizontal list of icons with a flexbox layout.\n                  Each icon is displayed in a circular container with a border and background color.\n                  The icons are positioned using a transform to create a staggered effect.\n                */}\n\n                <div className=\"flex items-center\">\n                  {/* Map through the iconLists array to create a div for each icon */}\n                  {iconLists.map((icon, index) => (\n                    <div\n                      key={index} // Unique key for each icon to help React identify which items have changed\n                      className=\"border border-white/[.2] rounded-full bg-black lg:w-10 lg:h-10 w-8 h-8 flex justify-center items-center\"\n                      style={{\n                        // Apply a horizontal translation based on the index to stagger the icons\n                        transform: `translateX(-${5 * index + 2}px)`,\n                      }}\n                    >\n                      {/* Render the icon image with padding */}\n                      <img src={icon} alt=\"icon5\" className=\"p-2\" />\n                    </div>\n                  ))}\n                </div>\n\n\n              </div>\n            </PinContainer>\n          </div>\n        ) )}\n      </div>\n    </div>\n  )\n}",
    "importStatements": [],
    "codeNoBody": "const RecentProjects = () => {\n//...\n}",
    "originFile": "\\components\\RecentProjects.tsx"
  },
  {
    "id": "\\components\\RecentProjects",
    "language": "tsx",
    "label": "C:\\Users\\gmasc\\OneDrive\\Documentos\\CodeGPT\\danielavila.me-main\\components\\RecentProjects.tsx",
    "type": "file",
    "totalTokens": 668,
    "inDegree": 0,
    "outDegree": 1,
    "code": "import { projects } from '@/data'\nimport React from 'react'\nimport { PinContainer } from './ui/3d-pin'\n\n\nconst RecentProjects = () => {\n  return (\n    <div className='py-20' id=\"projects\">\n      <h1 className='heading'>\n        A small selection of {' '}\n        <span className='text-purple'>my recent projects</span>\n      </h1>\n      <div className='flex flex-wrap items-center justify-center p-10 gap-x-24 gap-y-8 mt-10'>\n        {projects.map(({ id, title, des, img, iconLists, link}) => (\n          <div key={id} className='sm:h-[30rem] lg:min-h-[30rem] h-[25rem] flex items-center justify-center sm:w-96 w-[80vw]'>\n            <PinContainer \n            title={link} \n            href={link}>\n              <div className='relative flex items-center justify-center sm:w-96 w-[80vw] overflow-hidden h-[20vh] lg:h-[30vg] mb-10'>\n                <div className='relative w-full h-full overflow-hidden lg:rounded-3xl bg-[#13162d]'>\n                  <img src=\"/bg.png\" alt=\"bg-img\" />\n                </div>\n                <img \n                  src={img} \n                  alt={title} \n                  className='z-10 absolute bottom-0' \n                  />\n              </div>  \n              <h1 className='font-bold lg:text-2xl md:text-xl text-base line-clamp-1'>\n                {title}\n              </h1>\n              <p\n                className=\"lg:text-xl lg:font-normal font-light text-sm line-clamp-2\"\n                style={{\n                  color: \"#BEC1DD\",\n                  margin: \"1vh 0\",\n                }}\n              >\n                {des}\n              </p>\n              <div className=\"flex items-center justify-between mt-7 mb-3\">\n                \n                {/* \n                  This component renders a horizontal list of icons with a flexbox layout.\n                  Each icon is displayed in a circular container with a border and background color.\n                  The icons are positioned using a transform to create a staggered effect.\n                */}\n\n                <div className=\"flex items-center\">\n                  {/* Map through the iconLists array to create a div for each icon */}\n                  {iconLists.map((icon, index) => (\n                    <div\n                      key={index} // Unique key for each icon to help React identify which items have changed\n                      className=\"border border-white/[.2] rounded-full bg-black lg:w-10 lg:h-10 w-8 h-8 flex justify-center items-center\"\n                      style={{\n                        // Apply a horizontal translation based on the index to stagger the icons\n                        transform: `translateX(-${5 * index + 2}px)`,\n                      }}\n                    >\n                      {/* Render the icon image with padding */}\n                      <img src={icon} alt=\"icon5\" className=\"p-2\" />\n                    </div>\n                  ))}\n                </div>\n\n\n              </div>\n            </PinContainer>\n          </div>\n        ) )}\n      </div>\n    </div>\n  )\n}\n\nexport default RecentProjects",
    "importStatements": [
      "import { projects } from '@/data'",
      "import React from 'react'",
      "import { PinContainer } from './ui/3d-pin'"
    ],
    "codeNoBody": "import { projects } from '@/data'\nimport React from 'react'\nimport { PinContainer } from './ui/3d-pin'\nconst RecentProjects = () => {\n//...\n}\n\nexport default RecentProjects",
    "originFile": "\\components\\RecentProjects.tsx"
  },
  {
    "id": "\\components\\Scroll::Scroll",
    "language": "tsx",
    "label": "Scroll",
    "type": "function",
    "parent": "C:\\Users\\gmasc\\OneDrive\\Documentos\\CodeGPT\\danielavila.me-main\\components\\Scroll",
    "totalTokens": 442,
    "inDegree": 1,
    "outDegree": 1,
    "code": "const Scroll = () => {\n  return (\n    <div className='py-20' id='hobbies' >\n        {/* <MacbookScroll\n        showGradient={true}\n        title='Creating the Next Generation of Programming Tools'\n        src='/p1.svg'\n        /> */}\n        \n        <h1 className='heading pt-20'>\n        Not everything is about programming...{' '}\n          <span className='text-purple'>some of my hobbies</span>\n        </h1>\n        <br />\n        <br />\n        <TracingBeam className=\"px-6 pt-10\">\n      <div className=\"max-w-2xl mx-auto antialiased pt-4 relative\">\n        {dummyContent.map((item, index) => (\n          <div key={`content-${index}`} className=\"mb-10\">\n            <h2 className=\"bg-black text-white rounded-full text-sm w-fit px-4 py-1 mb-4\">\n            </h2>\n \n            <h1 className=\"text-3xl font-bold mb-4\">\n              {item.title}\n            </h1>\n \n            /**\n            * This component renders a styled container for a blog post item.\n            * It conditionally displays an image if it exists and shows the description.\n            */\n\n            <div className=\"text-sm border-collapse border border-slate-500 rounded-lg p-4 prose prose-sm dark:prose-invert\">\n              {/* Check if the item has an image before rendering the Image component */}\n              {item?.image && (\n                <Image\n                  src={item.image} // Source of the image\n                  alt=\"blog thumbnail\" // Alternative text for the image\n                  height=\"1000\" // Height of the image\n                  width=\"1000\" // Width of the image\n                  className=\"rounded-lg mb-10 object-cover\" // Styling for the image\n                />\n              )}\n              <div className='text-lg'>\n                {/* Display the description of the item */}\n                {item.description}\n              </div>\n            </div>\n\n          </div>\n        ))}\n      </div>\n    </TracingBeam>\n        \n    </div>\n  )\n}",
    "importStatements": [],
    "codeNoBody": "const Scroll = () => {\n//...\n}",
    "originFile": "\\components\\Scroll.tsx"
  },
  {
    "id": "\\components\\Scroll::dummyContent",
    "language": "tsx",
    "label": "dummyContent",
    "type": "assignment",
    "parent": "C:\\Users\\gmasc\\OneDrive\\Documentos\\CodeGPT\\danielavila.me-main\\components\\Scroll",
    "totalTokens": 683,
    "inDegree": 2,
    "outDegree": 0,
    "code": "const dummyContent = [\n  {\n    title: \"Technology Speaker\",\n    description: (\n      <>\n        <p>\n        I love teaching what I have learned in these years of working with technology. I have given talks at AWS, Google, and Microsoft. \n        <br />\n         <br />\n        Additionally, I have been invited to participate as a speaker in countries such as Chile, Peru, Spain, the United States, and South Korea.\n        </p>\n      </>\n    ),\n    image: \"/speaker.jpg\",\n  },\n  {\n    title: \"Running and cycling\",\n    description: (\n      <>\n        <p>\n        A great way to clear your mind from programming is by engaging in an activity that allows you to enter &quot;the zone&quot;, which is why I love running and cycling.\n        <br />\n        <br />\n        These activities not only provide a physical challenge but also offer a mental escape, allowing me to focus on the present and forget about any coding problems or concerns.\n        Additionally, they help me stay active and healthy, which is important for overall well-being.\n        </p>\n      </>\n    ),\n    \n    image:\n      \"/bike.png\",\n  },\n  {\n    title: \"I love drawing\",\n    description: (\n      <>\n        <p>\n        I have been drawing since I was a child and I have always enjoyed it as a hobby.\n        </p>\n        <br />\n        <p>\n        I have a natural talent for drawing, I believe that drawing enhances creativity and this goes very well with programming as it allows me to visualize concepts and ideas more easily.\n        Additionally, drawing can help me relax and de-stress, which is beneficial for both my mental and emotional well-being.\n        </p>\n        <br />\n        <p>\n        Overall, drawing is a valuable skill that complements my programming abilities and brings a unique perspective to my work.\n        </p>\n      </>\n    ),\n    image: \"/draw.jpg\",\n  },\n  {\n    title: \"Crossfit\",\n    description: (\n      <>\n        <p>\n          I have been practicing CrossFit for a few years now and I have found it to be a great way to stay fit and challenge myself physically.\n          <br />\n           <br />\n          CrossFit involves a variety of exercises that work on strength, endurance, and flexibility, which has helped me improve my overall fitness and athleticism.\n          Additionally, CrossFit workouts often involve high-intensity, functional movements that can help improve my performance in other areas of my life.\n          <br />\n          <br />\n          Overall, CrossFit has been a positive addition to my lifestyle and I enjoy the challenge and sense of community that it provides.\n        </p>\n      </>\n    ),\n    \n    image:\n      \"/crossfit.png\",\n  },\n  {\n    title: \"My Family ❤️\",\n    description: (\n      <>\n        <p>\n          My wife Kyle and my child Ayla are the most important people in my life.\n          <br />\n           <br />\n          I love spending time with them and I am grateful for the love and support they provide.\n          <br />\n          They are my inspiration and my motivation, and I am grateful to have them in my life.\n        </p>\n      </>\n    ),\n    \n    image:\n      \"/family.jpg\",\n  },\n];",
    "importStatements": [],
    "codeNoBody": "const dummyContent = [\n  {\n    title: \"Technology Speaker\",\n    description: (\n      <>\n        <p>\n        I love teaching what I have learned in these years of working with technology. I have given talks at AWS, Google, and Microsoft. \n        <br />\n         <br />\n        Additionally, I have been invited to participate as a speaker in countries such as Chile, Peru, Spain, the United States, and South Korea.\n        </p>\n      </>\n    ),\n    image: \"/speaker.jpg\",\n  },\n  {\n    title: \"Running and cycling\",\n    description: (\n      <>\n        <p>\n        A great way to clear your mind from programming is by engaging in an activity that allows you to enter &quot;the zone&quot;, which is why I love running and cycling.\n        <br />\n        <br />\n        These activities not only provide a physical challenge but also offer a mental escape, allowing me to focus on the present and forget about any coding problems or concerns.\n        Additionally, they help me stay active and healthy, which is important for overall well-being.\n        </p>\n      </>\n    ),\n    image:\n      \"/bike.png\",\n  },\n  {\n    title: \"I love drawing\",\n    description: (\n      <>\n        <p>\n        I have been drawing since I was a child and I have always enjoyed it as a hobby.\n        </p>\n        <br />\n        <p>\n        I have a natural talent for drawing, I believe that drawing enhances creativity and this goes very well with programming as it allows me to visualize concepts and ideas more easily.\n        Additionally, drawing can help me relax and de-stress, which is beneficial for both my mental and emotional well-being.\n        </p>\n        <br />\n        <p>\n        Overall, drawing is a valuable skill that complements my programming abilities and brings a unique perspective to my work.\n        </p>\n      </>\n    ),\n    image: \"/draw.jpg\",\n  },\n  {\n    title: \"Crossfit\",\n    description: (\n      <>\n        <p>\n          I have been practicing CrossFit for a few years now and I have found it to be a great way to stay fit and challenge myself physically.\n          <br />\n           <br />\n          CrossFit involves a variety of exercises that work on strength, endurance, and flexibility, which has helped me improve my overall fitness and athleticism.\n          Additionally, CrossFit workouts often involve high-intensity, functional movements that can help improve my performance in other areas of my life.\n          <br />\n          <br />\n          Overall, CrossFit has been a positive addition to my lifestyle and I enjoy the challenge and sense of community that it provides.\n        </p>\n      </>\n    ),\n    \n    image:\n      \"/crossfit.png\",\n  },\n  {\n    title: \"My Family ❤️\",\n    description: (\n      <>\n        <p>\n          My wife Kyle and my child Ayla are the most important people in my life.\n          <br />\n           <br />\n          I love spending time with them and I am grateful for the love and support they provide.\n          <br />\n          They are my inspiration and my motivation, and I am grateful to have them in my life.\n        </p>\n      </>\n    ),\n    \n    image:\n      \"/family.jpg\",\n  },\n];",
    "originFile": "\\components\\Scroll.tsx"
  },
  {
    "id": "\\components\\Scroll",
    "language": "tsx",
    "label": "C:\\Users\\gmasc\\OneDrive\\Documentos\\CodeGPT\\danielavila.me-main\\components\\Scroll.tsx",
    "type": "file",
    "totalTokens": 1207,
    "inDegree": 0,
    "outDegree": 2,
    "code": "import React from 'react'\nimport { MacbookScroll } from './ui/MacbookScroll'\nimport { LampDemo } from './ui/LampEffect'\nimport { StickyScroll } from './ui/StickyScrollReveal'\nimport { twMerge } from \"tailwind-merge\";\nimport Image from \"next/image\";\nimport { TracingBeam } from './ui/TracingBeam';\n\n\nconst dummyContent = [\n  {\n    title: \"Technology Speaker\",\n    description: (\n      <>\n        <p>\n        I love teaching what I have learned in these years of working with technology. I have given talks at AWS, Google, and Microsoft. \n        <br />\n         <br />\n        Additionally, I have been invited to participate as a speaker in countries such as Chile, Peru, Spain, the United States, and South Korea.\n        </p>\n      </>\n    ),\n    image: \"/speaker.jpg\",\n  },\n  {\n    title: \"Running and cycling\",\n    description: (\n      <>\n        <p>\n        A great way to clear your mind from programming is by engaging in an activity that allows you to enter &quot;the zone&quot;, which is why I love running and cycling.\n        <br />\n        <br />\n        These activities not only provide a physical challenge but also offer a mental escape, allowing me to focus on the present and forget about any coding problems or concerns.\n        Additionally, they help me stay active and healthy, which is important for overall well-being.\n        </p>\n      </>\n    ),\n    \n    image:\n      \"/bike.png\",\n  },\n  {\n    title: \"I love drawing\",\n    description: (\n      <>\n        <p>\n        I have been drawing since I was a child and I have always enjoyed it as a hobby.\n        </p>\n        <br />\n        <p>\n        I have a natural talent for drawing, I believe that drawing enhances creativity and this goes very well with programming as it allows me to visualize concepts and ideas more easily.\n        Additionally, drawing can help me relax and de-stress, which is beneficial for both my mental and emotional well-being.\n        </p>\n        <br />\n        <p>\n        Overall, drawing is a valuable skill that complements my programming abilities and brings a unique perspective to my work.\n        </p>\n      </>\n    ),\n    image: \"/draw.jpg\",\n  },\n  {\n    title: \"Crossfit\",\n    description: (\n      <>\n        <p>\n          I have been practicing CrossFit for a few years now and I have found it to be a great way to stay fit and challenge myself physically.\n          <br />\n           <br />\n          CrossFit involves a variety of exercises that work on strength, endurance, and flexibility, which has helped me improve my overall fitness and athleticism.\n          Additionally, CrossFit workouts often involve high-intensity, functional movements that can help improve my performance in other areas of my life.\n          <br />\n          <br />\n          Overall, CrossFit has been a positive addition to my lifestyle and I enjoy the challenge and sense of community that it provides.\n        </p>\n      </>\n    ),\n    \n    image:\n      \"/crossfit.png\",\n  },\n  {\n    title: \"My Family ❤️\",\n    description: (\n      <>\n        <p>\n          My wife Kyle and my child Ayla are the most important people in my life.\n          <br />\n           <br />\n          I love spending time with them and I am grateful for the love and support they provide.\n          <br />\n          They are my inspiration and my motivation, and I am grateful to have them in my life.\n        </p>\n      </>\n    ),\n    \n    image:\n      \"/family.jpg\",\n  },\n];\n\nconst Scroll = () => {\n  return (\n    <div className='py-20' id='hobbies' >\n        {/* <MacbookScroll\n        showGradient={true}\n        title='Creating the Next Generation of Programming Tools'\n        src='/p1.svg'\n        /> */}\n        \n        <h1 className='heading pt-20'>\n        Not everything is about programming...{' '}\n          <span className='text-purple'>some of my hobbies</span>\n        </h1>\n        <br />\n        <br />\n        <TracingBeam className=\"px-6 pt-10\">\n      <div className=\"max-w-2xl mx-auto antialiased pt-4 relative\">\n        {dummyContent.map((item, index) => (\n          <div key={`content-${index}`} className=\"mb-10\">\n            <h2 className=\"bg-black text-white rounded-full text-sm w-fit px-4 py-1 mb-4\">\n            </h2>\n \n            <h1 className=\"text-3xl font-bold mb-4\">\n              {item.title}\n            </h1>\n \n            /**\n            * This component renders a styled container for a blog post item.\n            * It conditionally displays an image if it exists and shows the description.\n            */\n\n            <div className=\"text-sm border-collapse border border-slate-500 rounded-lg p-4 prose prose-sm dark:prose-invert\">\n              {/* Check if the item has an image before rendering the Image component */}\n              {item?.image && (\n                <Image\n                  src={item.image} // Source of the image\n                  alt=\"blog thumbnail\" // Alternative text for the image\n                  height=\"1000\" // Height of the image\n                  width=\"1000\" // Width of the image\n                  className=\"rounded-lg mb-10 object-cover\" // Styling for the image\n                />\n              )}\n              <div className='text-lg'>\n                {/* Display the description of the item */}\n                {item.description}\n              </div>\n            </div>\n\n          </div>\n        ))}\n      </div>\n    </TracingBeam>\n        \n    </div>\n  )\n}\n\nexport default Scroll",
    "importStatements": [
      "import React from 'react'",
      "import { MacbookScroll } from './ui/MacbookScroll'",
      "import { LampDemo } from './ui/LampEffect'",
      "import { StickyScroll } from './ui/StickyScrollReveal'",
      "import { twMerge } from \"tailwind-merge\";",
      "import Image from \"next/image\";",
      "import { TracingBeam } from './ui/TracingBeam';"
    ],
    "codeNoBody": "import React from 'react'\nimport { MacbookScroll } from './ui/MacbookScroll'\nimport { LampDemo } from './ui/LampEffect'\nimport { StickyScroll } from './ui/StickyScrollReveal'\nimport { twMerge } from \"tailwind-merge\";\nimport Image from \"next/image\";\nimport { TracingBeam } from './ui/TracingBeam';\nconst dummyContent = [\n  {\n    title: \"Technology Speaker\",\n    description: (\n      <>\n        <p>\n        I love teaching what I have learned in these years of working with technology. I have given talks at AWS, Google, and Microsoft. \n        <br />\n         <br />\n        Additionally, I have been invited to participate as a speaker in countries such as Chile, Peru, Spain, the United States, and South Korea.\n        </p>\n      </>\n    ),\n    image: \"/speaker.jpg\",\n  },\n  {\n    title: \"Running and cycling\",\n    description: (\n      <>\n        <p>\n        A great way to clear your mind from programming is by engaging in an activity that allows you to enter &quot;the zone&quot;, which is why I love running and cycling.\n        <br />\n        <br />\n        These activities not only provide a physical challenge but also offer a mental escape, allowing me to focus on the present and forget about any coding problems or concerns.\n        Additionally, they help me stay active and healthy, which is important for overall well-being.\n        </p>\n      </>\n    ),\n    \n    image:\n      \"/bike.png\",\n  },\n  {\n    title: \"I love drawing\",\n    description: (\n      <>\n        <p>\n        I have been drawing since I was a child and I have always enjoyed it as a hobby.\n        </p>\n        <br />\n        <p>\n        I have a natural talent for drawing, I believe that drawing enhances creativity and this goes very well with programming as it allows me to visualize concepts and ideas more easily.\n        Additionally, drawing can help me relax and de-stress, which is beneficial for both my mental and emotional well-being.\n        </p>\n        <br />\n        <p>\n        Overall, drawing is a valuable skill that complements my programming abilities and brings a unique perspective to my work.\n        </p>\n      </>\n    ),\n    image: \"/draw.jpg\",\n  },\n  {\n    title: \"Crossfit\",\n    description: (\n      <>\n        <p>\n          I have been practicing CrossFit for a few years now and I have found it to be a great way to stay fit and challenge myself physically.\n          <br />\n           <br />\n          CrossFit involves a variety of exercises that work on strength, endurance, and flexibility, which has helped me improve my overall fitness and athleticism.\n          Additionally, CrossFit workouts often involve high-intensity, functional movements that can help improve my performance in other areas of my life.\n          <br />\n          <br />\n          Overall, CrossFit has been a positive addition to my lifestyle and I enjoy the challenge and sense of community that it provides.\n        </p>\n      </>\n    ),\n    \n    image:\n      \"/crossfit.png\",\n  },\n  {\n    title: \"My Family ❤️\",\n    description: (\n      <>\n        <p>\n          My wife Kyle and my child Ayla are the most important people in my life.\n          <br />\n           <br />\n          I love spending time with them and I am grateful for the love and support they provide.\n          <br />\n          They are my inspiration and my motivation, and I am grateful to have them in my life.\n        </p>\n      </>\n    ),\n    \n    image:\n      \"/family.jpg\",\n  },\n];\n\nconst Scroll = () => {\n//...\n}\n\nexport default Scroll",
    "originFile": "\\components\\Scroll.tsx"
  },
  {
    "id": "\\components\\ui\\3d-pin::PinPerspective",
    "language": "tsx",
    "label": "PinPerspective",
    "type": "function",
    "parent": "C:\\Users\\gmasc\\OneDrive\\Documentos\\CodeGPT\\danielavila.me-main\\components\\ui\\3d-pin",
    "totalTokens": 1066,
    "inDegree": 1,
    "outDegree": 0,
    "code": "const PinPerspective = ({\n  title,\n  href,\n}: {\n  title?: string;\n  href?: string;\n}) => {\n  return (\n    <motion.div className=\"pointer-events-none  w-full h-80 flex items-center justify-center opacity-0 group-hover/pin:opacity-100 z-[60] transition duration-500\">\n      <div className=\" w-full h-full -mt-7 flex-none  inset-0\">\n        <div className=\"absolute top-0 inset-x-0  flex justify-center\">\n          <a\n            href={href}\n            target=\"_blank\"\n            className=\"relative flex space-x-2 items-center z-10 rounded-full bg-zinc-950 py-0.5 px-4 ring-1 ring-white/10 \"\n          >\n            <span className=\"relative z-20 text-white text-xs font-bold inline-block py-0.5\">\n              {title}\n            </span>\n\n            <span className=\"absolute -bottom-0 left-[1.125rem] h-px w-[calc(100%-2.25rem)] bg-gradient-to-r from-emerald-400/0 via-emerald-400/90 to-emerald-400/0 transition-opacity duration-500 group-hover/btn:opacity-40\"></span>\n          </a>\n        </div>\n\n        <div\n          style={{\n            perspective: \"1000px\",\n            transform: \"rotateX(70deg) translateZ(0)\",\n          }}\n          className=\"absolute left-1/2 top-1/2 ml-[0.09375rem] mt-4 -translate-x-1/2 -translate-y-1/2\"\n        >\n          <>\n            <motion.div\n              initial={{\n                opacity: 0,\n                scale: 0,\n                x: \"-50%\",\n                y: \"-50%\",\n              }}\n              animate={{\n                opacity: [0, 1, 0.5, 0],\n                scale: 1,\n\n                z: 0,\n              }}\n              transition={{\n                duration: 6,\n                repeat: Infinity,\n                delay: 0,\n              }}\n              className=\"absolute left-1/2 top-1/2  h-[11.25rem] w-[11.25rem] rounded-[50%] bg-sky-500/[0.08] shadow-[0_8px_16px_rgb(0_0_0/0.4)]\"\n            ></motion.div>\n            <motion.div\n              initial={{\n                opacity: 0,\n                scale: 0,\n                x: \"-50%\",\n                y: \"-50%\",\n              }}\n              animate={{\n                opacity: [0, 1, 0.5, 0],\n                scale: 1,\n\n                z: 0,\n              }}\n              transition={{\n                duration: 6,\n                repeat: Infinity,\n                delay: 2,\n              }}\n              className=\"absolute left-1/2 top-1/2  h-[11.25rem] w-[11.25rem] rounded-[50%] bg-sky-500/[0.08] shadow-[0_8px_16px_rgb(0_0_0/0.4)]\"\n            ></motion.div>\n            <motion.div\n              initial={{\n                opacity: 0,\n                scale: 0,\n                x: \"-50%\",\n                y: \"-50%\",\n              }}\n              animate={{\n                opacity: [0, 1, 0.5, 0],\n                scale: 1,\n\n                z: 0,\n              }}\n              transition={{\n                duration: 6,\n                repeat: Infinity,\n                delay: 4,\n              }}\n              className=\"absolute left-1/2 top-1/2  h-[11.25rem] w-[11.25rem] rounded-[50%] bg-sky-500/[0.08] shadow-[0_8px_16px_rgb(0_0_0/0.4)]\"\n            ></motion.div>\n          </>\n        </div>\n\n        <>\n          <motion.div className=\"absolute right-1/2 bottom-1/2 bg-gradient-to-b from-transparent to-cyan-500 translate-y-[14px] w-px h-20 group-hover/pin:h-40 blur-[2px]\" />\n          <motion.div className=\"absolute right-1/2 bottom-1/2 bg-gradient-to-b from-transparent to-cyan-500 translate-y-[14px] w-px h-20 group-hover/pin:h-40  \" />\n          <motion.div className=\"absolute right-1/2 translate-x-[1.5px] bottom-1/2 bg-cyan-600 translate-y-[14px] w-[4px] h-[4px] rounded-full z-40 blur-[3px]\" />\n          <motion.div className=\"absolute right-1/2 translate-x-[0.5px] bottom-1/2 bg-cyan-300 translate-y-[14px] w-[2px] h-[2px] rounded-full z-40 \" />\n        </>\n      </div>\n    </motion.div>\n  );\n};",
    "importStatements": [],
    "codeNoBody": "const PinPerspective = ({\n  title,\n  href,\n}: {\n  title?: string;\n  href?: string;\n}) => {\n       //...\n       };",
    "originFile": "\\components\\ui\\3d-pin.tsx"
  },
  {
    "id": "\\components\\ui\\3d-pin::onMouseLeave",
    "language": "tsx",
    "label": "onMouseLeave",
    "type": "function",
    "parent": "C:\\Users\\gmasc\\OneDrive\\Documentos\\CodeGPT\\danielavila.me-main\\components\\ui\\3d-pin::PinContainer",
    "totalTokens": 30,
    "inDegree": 1,
    "outDegree": 0,
    "code": "const onMouseLeave = () => {\n    setTransform(\"translate(-50%,-50%) rotateX(0deg) scale(1)\");\n  };",
    "importStatements": [],
    "codeNoBody": "const onMouseLeave = () => {\n  //...\n  };",
    "originFile": "\\components\\ui\\3d-pin.tsx"
  },
  {
    "id": "\\components\\ui\\3d-pin::onMouseEnter",
    "language": "tsx",
    "label": "onMouseEnter",
    "type": "function",
    "parent": "C:\\Users\\gmasc\\OneDrive\\Documentos\\CodeGPT\\danielavila.me-main\\components\\ui\\3d-pin::PinContainer",
    "totalTokens": 32,
    "inDegree": 1,
    "outDegree": 0,
    "code": "const onMouseEnter = () => {\n    setTransform(\"translate(-50%,-50%) rotateX(40deg) scale(0.8)\");\n  };",
    "importStatements": [],
    "codeNoBody": "const onMouseEnter = () => {\n  //...\n  };",
    "originFile": "\\components\\ui\\3d-pin.tsx"
  },
  {
    "id": "\\components\\ui\\3d-pin::PinContainer",
    "language": "tsx",
    "label": "PinContainer",
    "type": "function",
    "parent": "C:\\Users\\gmasc\\OneDrive\\Documentos\\CodeGPT\\danielavila.me-main\\components\\ui\\3d-pin",
    "totalTokens": 416,
    "inDegree": 1,
    "outDegree": 3,
    "code": "const PinContainer = ({\n  children,\n  title,\n  href,\n  className,\n  containerClassName,\n}: {\n  children: React.ReactNode;\n  title?: string;\n  href?: string;\n  className?: string;\n  containerClassName?: string;\n}) => {\n  const [transform, setTransform] = useState(\n    \"translate(-50%,-50%) rotateX(0deg)\"\n  );\n\n  const onMouseEnter = () => {\n    setTransform(\"translate(-50%,-50%) rotateX(40deg) scale(0.8)\");\n  };\n  const onMouseLeave = () => {\n    setTransform(\"translate(-50%,-50%) rotateX(0deg) scale(1)\");\n  };\n\n  return (\n    <Link\n      className={cn(\n        \"relative group/pin z-50  cursor-pointer\",\n        containerClassName\n      )}\n      onMouseEnter={onMouseEnter}\n      onMouseLeave={onMouseLeave}\n      href={href || \"/\"}\n    >\n      <div\n        style={{\n          perspective: \"1000px\",\n          transform: \"rotateX(70deg) translateZ(0deg)\",\n        }}\n        className=\"absolute left-1/2 top-1/2 ml-[0.09375rem] mt-4 -translate-x-1/2 -translate-y-1/2\"\n      >\n        <div\n          style={{\n            transform: transform,\n          }}\n          className=\"absolute left-1/2 p-4 top-1/2  flex justify-start items-start  rounded-2xl  shadow-[0_8px_16px_rgb(0_0_0/0.4)] border border-white/[0.1] group-hover/pin:border-white/[0.2] transition duration-700 overflow-hidden\"\n        >\n          <div className={cn(\" relative z-50 \", className)}>{children}</div>\n        </div>\n      </div>\n      <PinPerspective title={title} href={href} />\n    </Link>\n  );\n};",
    "importStatements": [],
    "codeNoBody": "const PinContainer = ({\n  children,\n  title,\n  href,\n  className,\n  containerClassName,\n}: {\n  children: React.ReactNode;\n  title?: string;\n  href?: string;\n  className?: string;\n  containerClassName?: string;\n}) => {\n  const [transform, setTransform] = useState(\n    \"translate(-50%,-50%) rotateX(0deg)\"\n  );\n  const onMouseEnter = () => {\n    setTransform(\"translate(-50%,-50%) rotateX(40deg) scale(0.8)\");\n  };\n  const onMouseLeave = () => {\n    setTransform(\"translate(-50%,-50%) rotateX(0deg) scale(1)\");\n  };\n\n  return (\n    <Link\n      className={cn(\n        \"relative group/pin z-50  cursor-pointer\",\n        containerClassName\n      )}\n      onMouseEnter={onMouseEnter}\n      onMouseLeave={onMouseLeave}\n      href={href || \"/\"}\n    >\n      <div\n        style={{\n          perspective: \"1000px\",\n          transform: \"rotateX(70deg) translateZ(0deg)\",\n        }}\n        className=\"absolute left-1/2 top-1/2 ml-[0.09375rem] mt-4 -translate-x-1/2 -translate-y-1/2\"\n      >\n        <div\n          style={{\n            transform: transform,\n          }}\n          className=\"absolute left-1/2 p-4 top-1/2  flex justify-start items-start  rounded-2xl  shadow-[0_8px_16px_rgb(0_0_0/0.4)] border border-white/[0.1] group-hover/pin:border-white/[0.2] transition duration-700 overflow-hidden\"\n        >\n          <div className={cn(\" relative z-50 \", className)}>{children}</div>\n        </div>\n      </div>\n      <PinPerspective title={title} href={href} />\n    </Link>\n  );\n};",
    "originFile": "\\components\\ui\\3d-pin.tsx"
  },
  {
    "id": "\\components\\ui\\3d-pin",
    "language": "tsx",
    "label": "C:\\Users\\gmasc\\OneDrive\\Documentos\\CodeGPT\\danielavila.me-main\\components\\ui\\3d-pin.tsx",
    "type": "file",
    "totalTokens": 1524,
    "inDegree": 0,
    "outDegree": 2,
    "code": "\"use client\";\nimport React, { useState } from \"react\";\nimport { motion } from \"framer-motion\";\nimport { cn } from \"@/utils/cn\";\nimport Link from \"next/link\";\n\nexport const PinContainer = ({\n  children,\n  title,\n  href,\n  className,\n  containerClassName,\n}: {\n  children: React.ReactNode;\n  title?: string;\n  href?: string;\n  className?: string;\n  containerClassName?: string;\n}) => {\n  const [transform, setTransform] = useState(\n    \"translate(-50%,-50%) rotateX(0deg)\"\n  );\n\n  const onMouseEnter = () => {\n    setTransform(\"translate(-50%,-50%) rotateX(40deg) scale(0.8)\");\n  };\n  const onMouseLeave = () => {\n    setTransform(\"translate(-50%,-50%) rotateX(0deg) scale(1)\");\n  };\n\n  return (\n    <Link\n      className={cn(\n        \"relative group/pin z-50  cursor-pointer\",\n        containerClassName\n      )}\n      onMouseEnter={onMouseEnter}\n      onMouseLeave={onMouseLeave}\n      href={href || \"/\"}\n    >\n      <div\n        style={{\n          perspective: \"1000px\",\n          transform: \"rotateX(70deg) translateZ(0deg)\",\n        }}\n        className=\"absolute left-1/2 top-1/2 ml-[0.09375rem] mt-4 -translate-x-1/2 -translate-y-1/2\"\n      >\n        <div\n          style={{\n            transform: transform,\n          }}\n          className=\"absolute left-1/2 p-4 top-1/2  flex justify-start items-start  rounded-2xl  shadow-[0_8px_16px_rgb(0_0_0/0.4)] border border-white/[0.1] group-hover/pin:border-white/[0.2] transition duration-700 overflow-hidden\"\n        >\n          <div className={cn(\" relative z-50 \", className)}>{children}</div>\n        </div>\n      </div>\n      <PinPerspective title={title} href={href} />\n    </Link>\n  );\n};\n\nexport const PinPerspective = ({\n  title,\n  href,\n}: {\n  title?: string;\n  href?: string;\n}) => {\n  return (\n    <motion.div className=\"pointer-events-none  w-full h-80 flex items-center justify-center opacity-0 group-hover/pin:opacity-100 z-[60] transition duration-500\">\n      <div className=\" w-full h-full -mt-7 flex-none  inset-0\">\n        <div className=\"absolute top-0 inset-x-0  flex justify-center\">\n          <a\n            href={href}\n            target=\"_blank\"\n            className=\"relative flex space-x-2 items-center z-10 rounded-full bg-zinc-950 py-0.5 px-4 ring-1 ring-white/10 \"\n          >\n            <span className=\"relative z-20 text-white text-xs font-bold inline-block py-0.5\">\n              {title}\n            </span>\n\n            <span className=\"absolute -bottom-0 left-[1.125rem] h-px w-[calc(100%-2.25rem)] bg-gradient-to-r from-emerald-400/0 via-emerald-400/90 to-emerald-400/0 transition-opacity duration-500 group-hover/btn:opacity-40\"></span>\n          </a>\n        </div>\n\n        <div\n          style={{\n            perspective: \"1000px\",\n            transform: \"rotateX(70deg) translateZ(0)\",\n          }}\n          className=\"absolute left-1/2 top-1/2 ml-[0.09375rem] mt-4 -translate-x-1/2 -translate-y-1/2\"\n        >\n          <>\n            <motion.div\n              initial={{\n                opacity: 0,\n                scale: 0,\n                x: \"-50%\",\n                y: \"-50%\",\n              }}\n              animate={{\n                opacity: [0, 1, 0.5, 0],\n                scale: 1,\n\n                z: 0,\n              }}\n              transition={{\n                duration: 6,\n                repeat: Infinity,\n                delay: 0,\n              }}\n              className=\"absolute left-1/2 top-1/2  h-[11.25rem] w-[11.25rem] rounded-[50%] bg-sky-500/[0.08] shadow-[0_8px_16px_rgb(0_0_0/0.4)]\"\n            ></motion.div>\n            <motion.div\n              initial={{\n                opacity: 0,\n                scale: 0,\n                x: \"-50%\",\n                y: \"-50%\",\n              }}\n              animate={{\n                opacity: [0, 1, 0.5, 0],\n                scale: 1,\n\n                z: 0,\n              }}\n              transition={{\n                duration: 6,\n                repeat: Infinity,\n                delay: 2,\n              }}\n              className=\"absolute left-1/2 top-1/2  h-[11.25rem] w-[11.25rem] rounded-[50%] bg-sky-500/[0.08] shadow-[0_8px_16px_rgb(0_0_0/0.4)]\"\n            ></motion.div>\n            <motion.div\n              initial={{\n                opacity: 0,\n                scale: 0,\n                x: \"-50%\",\n                y: \"-50%\",\n              }}\n              animate={{\n                opacity: [0, 1, 0.5, 0],\n                scale: 1,\n\n                z: 0,\n              }}\n              transition={{\n                duration: 6,\n                repeat: Infinity,\n                delay: 4,\n              }}\n              className=\"absolute left-1/2 top-1/2  h-[11.25rem] w-[11.25rem] rounded-[50%] bg-sky-500/[0.08] shadow-[0_8px_16px_rgb(0_0_0/0.4)]\"\n            ></motion.div>\n          </>\n        </div>\n\n        <>\n          <motion.div className=\"absolute right-1/2 bottom-1/2 bg-gradient-to-b from-transparent to-cyan-500 translate-y-[14px] w-px h-20 group-hover/pin:h-40 blur-[2px]\" />\n          <motion.div className=\"absolute right-1/2 bottom-1/2 bg-gradient-to-b from-transparent to-cyan-500 translate-y-[14px] w-px h-20 group-hover/pin:h-40  \" />\n          <motion.div className=\"absolute right-1/2 translate-x-[1.5px] bottom-1/2 bg-cyan-600 translate-y-[14px] w-[4px] h-[4px] rounded-full z-40 blur-[3px]\" />\n          <motion.div className=\"absolute right-1/2 translate-x-[0.5px] bottom-1/2 bg-cyan-300 translate-y-[14px] w-[2px] h-[2px] rounded-full z-40 \" />\n        </>\n      </div>\n    </motion.div>\n  );\n};\n",
    "importStatements": [
      "import React, { useState } from \"react\";",
      "import { motion } from \"framer-motion\";",
      "import { cn } from \"@/utils/cn\";",
      "import Link from \"next/link\";"
    ],
    "codeNoBody": "\"use client\";\nimport React, { useState } from \"react\";\nimport { motion } from \"framer-motion\";\nimport { cn } from \"@/utils/cn\";\nimport Link from \"next/link\";\nexport const PinContainer = ({\n  children,\n  title,\n  href,\n  className,\n  containerClassName,\n}: {\n  children: React.ReactNode;\n  title?: string;\n  href?: string;\n  className?: string;\n  containerClassName?: string;\n}) => {\n       //...\n       };\n\nexport const PinPerspective = ({\n  title,\n  href,\n}: {\n  title?: string;\n  href?: string;\n}) => {\n       //...\n       };",
    "originFile": "\\components\\ui\\3d-pin.tsx"
  },
  {
    "id": "\\components\\ui\\BentoGrid::handleCalendly",
    "language": "tsx",
    "label": "handleCalendly",
    "type": "function",
    "parent": "C:\\Users\\gmasc\\OneDrive\\Documentos\\CodeGPT\\danielavila.me-main\\components\\ui\\BentoGrid::BentoGridItem",
    "totalTokens": 49,
    "inDegree": 1,
    "outDegree": 0,
    "code": "const handleCalendly = () => {\n    // abre una nueva ventana con una url\n    window.open('https://calendly.com/daniel-evu/45min', '_blank');\n    \n    setCopied(true)\n  }",
    "importStatements": [],
    "codeNoBody": "const handleCalendly = () => {\n  //...\n  }",
    "originFile": "\\components\\ui\\BentoGrid.tsx"
  },
  {
    "id": "\\components\\ui\\BentoGrid::BentoGridItem",
    "language": "tsx",
    "label": "BentoGridItem",
    "type": "function",
    "parent": "C:\\Users\\gmasc\\OneDrive\\Documentos\\CodeGPT\\danielavila.me-main\\components\\ui\\BentoGrid",
    "totalTokens": 1289,
    "inDegree": 1,
    "outDegree": 2,
    "code": "const BentoGridItem = ({\n  className,\n  title,\n  description,\n  id,\n  img,\n  imgClassName,\n  titleClassName,\n  spareImg,\n}: {\n  className?: string;\n  title?: string | React.ReactNode;\n  description?: string | React.ReactNode;\n  id?: number;\n  img?: string;\n  imgClassName?: string;\n  titleClassName?: string;\n  spareImg?: string;\n}) => {\n\n  const [copied, setCopied] = useState(false);\n\n  const defaultOptions = {\n    loop: copied,\n    autoplay: copied,\n    animationData: animationData,\n    rendererSettings: {\n      preserveAspectRatio: \"xMidYMid slice\",\n    },\n  };\n\n  const handleCalendly = () => {\n    // abre una nueva ventana con una url\n    window.open('https://calendly.com/daniel-evu/45min', '_blank');\n    \n    setCopied(true)\n  }\n  return (\n    <div\n      className={cn(\n        \"row-span-1 relative overflow-hidden rounded-3xl group/bento hover:shadow-xl transition duration-200 shadow-input dark:shadow-none dark:bg-black dark:border-white/[0.2] bg-white border border-transparent justify-between flex flex-col space-y-4 \",\n        className\n      )}\n      style={{\n        background: \"rgb(4,7,29)\",\n        backgroundColor:\n          \"linear-gradient(90deg, rgba(4,7,29,1) 0%, rgba(12,14,35,1) 100%)\",\n      }}\n    >\n        <div className={`${id === 6 && 'flex justify-center'} h-full'`}>\n            <div className=\"w-full h-full absolute\">\n                { img && (\n                    <img\n                        src={img}\n                        alt={img}\n                        className={cn(\n                            imgClassName, 'object-cover object-center')}\n                    />\n                )}\n            </div>\n            <div \n            className={`absolute right-0 -bottom-5 ${id === 5 && \"w-full opacity-80\"}`}>\n                {spareImg && (\n                   <img\n                        src={spareImg}\n                        alt={spareImg}\n                        className={'object-cover object-center w-full h-full'}\n                    />\n                )}\n            </div>\n            \n            {id === 6 && (\n            <BackgroundGradientAnimation>\n                {/* <div className=\"absolute z-50 inset-0 flex items-center justify-center text-white font-bold px-4 pointer-events-none text-3xl text-center md:text-4xl lg:text-7xl\"></div> */}\n            </BackgroundGradientAnimation>\n            )}\n\n            <div className={cn(\n                titleClassName,\n                \"group-hover/bento:translate-x-2 transition duration-200 relative md:h-full min-h-40 flex flex-col px-5 p-5 lg:p-10\"\n                )}\n            >\n                <div className=\"font-sans font-extralight md:max-w-32 md:text-xs lg:text-base text-sm text-[#C1C2D3] z-10\">\n                    {description}\n                </div>\n\n                <div className={`font-sans text-lg lg:text-3xl max-w-96 font-bold z-10`}>\n                    {title}\n                </div>\n\n            {id === 1 && <GlobeDemo />}\n\n\n            {id == 3 && (\n\n              <div className=\"flex gap-1 lg:gap-5 w-fit absolute -right-3 lg:-right-2\">\n                <div className=\"flex flex-col gap-3 lg:gap-8\">\n                  {[\"Laravel\", \"FastAPI\", \"React\", \"Flask\", \"NextJS\"].map((item) => (\n                    <span key={item} className=\"py-2 lg:py4 px-3 lg:px-3 text-xs lg:text-base opacity-50 lg:opacity-100 rounded-lg text-center bg-[#10132E]\">\n                      {item}\n                    </span>\n                  ))}\n\n                  \n                </div>\n\n                <div className=\"flex flex-col gap-3 lg:gap-8\">\n                  {[\"GCP\", \"AWS\", \"Azure\", \"Firebase\", \"Vercel\"].map((item) => (\n                    <span key={item} className=\"py-2 lg:py4 px-3 lg:px-3 text-xs lg:text-base opacity-50 lg:opacity-100 rounded-lg text-center bg-[#10132E]\">\n                      {item}\n                    </span>\n                  ))}\n\n                </div>\n\n                <div className=\"flex flex-col gap-3 lg:gap-8\">\n                  {[\"PHP\", \"Python\", \"C#\", \"Java\", \"C++\"].map((item) => (\n                    <span key={item} className=\"py-2 lg:py4 px-3 lg:px-3 text-xs lg:text-base opacity-50 lg:opacity-100 rounded-lg text-center bg-[#10132E]\">\n                      {item}\n                    </span>\n                  ))}\n\n                  \n                </div>\n                <div className=\"flex flex-col gap-3 lg:gap-8\">\n                  {[\"LLMs\", \"DSPy\", \"LlamaIndex\", \"Langchain\", \"LLMs\"].map((item) => (\n                    <span key={item} className=\"py-2 lg:py4 px-3 lg:px-3 text-xs lg:text-base opacity-50 lg:opacity-100 rounded-lg text-center bg-[#10132E]\">\n                      {item}\n                    </span>\n                  ))}\n\n                  \n                </div>\n              </div>\n            )}\n\n            {id === 6 && (\n              <div className=\"mt-5 relative\">\n                <div className='absolute -bottom-5 right-0'>\n                  <Lottie options={defaultOptions}  height={200} width={400}  />\n                </div>\n                  <MagicButton \n                    title={'Go to Calendly'}\n                    icon={<SiCalendly />}\n                    position=\"left\"\n                    otherClasses=\"text-lg lg:text-lg\"\n                    handleClick={handleCalendly}\n                  />    \n              </div>\n            )}\n        </div>\n      </div>\n    </div>\n  );\n};",
    "importStatements": [],
    "codeNoBody": "const BentoGridItem = ({\n  className,\n  title,\n  description,\n  id,\n  img,\n  imgClassName,\n  titleClassName,\n  spareImg,\n}: {\n  className?: string;\n  title?: string | React.ReactNode;\n  description?: string | React.ReactNode;\n  id?: number;\n  img?: string;\n  imgClassName?: string;\n  titleClassName?: string;\n  spareImg?: string;\n}) => {\n  const [copied, setCopied] = useState(false);\n\n  const defaultOptions = {\n    loop: copied,\n    autoplay: copied,\n    animationData: animationData,\n    rendererSettings: {\n      preserveAspectRatio: \"xMidYMid slice\",\n    },\n  };\n\n  const handleCalendly = () => {\n    // abre una nueva ventana con una url\n    window.open('https://calendly.com/daniel-evu/45min', '_blank');\n    \n    setCopied(true)\n  }\n  return (\n    <div\n      className={cn(\n        \"row-span-1 relative overflow-hidden rounded-3xl group/bento hover:shadow-xl transition duration-200 shadow-input dark:shadow-none dark:bg-black dark:border-white/[0.2] bg-white border border-transparent justify-between flex flex-col space-y-4 \",\n        className\n      )}\n      style={{\n        background: \"rgb(4,7,29)\",\n        backgroundColor:\n          \"linear-gradient(90deg, rgba(4,7,29,1) 0%, rgba(12,14,35,1) 100%)\",\n      }}\n    >\n        <div className={`${id === 6 && 'flex justify-center'} h-full'`}>\n            <div className=\"w-full h-full absolute\">\n                { img && (\n                    <img\n                        src={img}\n                        alt={img}\n                        className={cn(\n                            imgClassName, 'object-cover object-center')}\n                    />\n                )}\n            </div>\n            <div \n            className={`absolute right-0 -bottom-5 ${id === 5 && \"w-full opacity-80\"}`}>\n                {spareImg && (\n                   <img\n                        src={spareImg}\n                        alt={spareImg}\n                        className={'object-cover object-center w-full h-full'}\n                    />\n                )}\n            </div>\n            \n            {id === 6 && (\n            <BackgroundGradientAnimation>\n                {/* <div className=\"absolute z-50 inset-0 flex items-center justify-center text-white font-bold px-4 pointer-events-none text-3xl text-center md:text-4xl lg:text-7xl\"></div> */}\n            </BackgroundGradientAnimation>\n            )}\n\n            <div className={cn(\n                titleClassName,\n                \"group-hover/bento:translate-x-2 transition duration-200 relative md:h-full min-h-40 flex flex-col px-5 p-5 lg:p-10\"\n                )}\n            >\n                <div className=\"font-sans font-extralight md:max-w-32 md:text-xs lg:text-base text-sm text-[#C1C2D3] z-10\">\n                    {description}\n                </div>\n\n                <div className={`font-sans text-lg lg:text-3xl max-w-96 font-bold z-10`}>\n                    {title}\n                </div>\n\n            {id === 1 && <GlobeDemo />}\n\n\n            {id == 3 && (\n\n              <div className=\"flex gap-1 lg:gap-5 w-fit absolute -right-3 lg:-right-2\">\n                <div className=\"flex flex-col gap-3 lg:gap-8\">\n                  {[\"Laravel\", \"FastAPI\", \"React\", \"Flask\", \"NextJS\"].map((item) => (\n                    <span key={item} className=\"py-2 lg:py4 px-3 lg:px-3 text-xs lg:text-base opacity-50 lg:opacity-100 rounded-lg text-center bg-[#10132E]\">\n                      {item}\n                    </span>\n                  ))}\n\n                  \n                </div>\n\n                <div className=\"flex flex-col gap-3 lg:gap-8\">\n                  {[\"GCP\", \"AWS\", \"Azure\", \"Firebase\", \"Vercel\"].map((item) => (\n                    <span key={item} className=\"py-2 lg:py4 px-3 lg:px-3 text-xs lg:text-base opacity-50 lg:opacity-100 rounded-lg text-center bg-[#10132E]\">\n                      {item}\n                    </span>\n                  ))}\n\n                </div>\n\n                <div className=\"flex flex-col gap-3 lg:gap-8\">\n                  {[\"PHP\", \"Python\", \"C#\", \"Java\", \"C++\"].map((item) => (\n                    <span key={item} className=\"py-2 lg:py4 px-3 lg:px-3 text-xs lg:text-base opacity-50 lg:opacity-100 rounded-lg text-center bg-[#10132E]\">\n                      {item}\n                    </span>\n                  ))}\n\n                  \n                </div>\n                <div className=\"flex flex-col gap-3 lg:gap-8\">\n                  {[\"LLMs\", \"DSPy\", \"LlamaIndex\", \"Langchain\", \"LLMs\"].map((item) => (\n                    <span key={item} className=\"py-2 lg:py4 px-3 lg:px-3 text-xs lg:text-base opacity-50 lg:opacity-100 rounded-lg text-center bg-[#10132E]\">\n                      {item}\n                    </span>\n                  ))}\n\n                  \n                </div>\n              </div>\n            )}\n\n            {id === 6 && (\n              <div className=\"mt-5 relative\">\n                <div className='absolute -bottom-5 right-0'>\n                  <Lottie options={defaultOptions}  height={200} width={400}  />\n                </div>\n                  <MagicButton \n                    title={'Go to Calendly'}\n                    icon={<SiCalendly />}\n                    position=\"left\"\n                    otherClasses=\"text-lg lg:text-lg\"\n                    handleClick={handleCalendly}\n                  />    \n              </div>\n            )}\n        </div>\n      </div>\n    </div>\n  );\n};",
    "originFile": "\\components\\ui\\BentoGrid.tsx"
  },
  {
    "id": "\\components\\ui\\BentoGrid::BentoGrid",
    "language": "tsx",
    "label": "BentoGrid",
    "type": "function",
    "parent": "C:\\Users\\gmasc\\OneDrive\\Documentos\\CodeGPT\\danielavila.me-main\\components\\ui\\BentoGrid",
    "totalTokens": 90,
    "inDegree": 1,
    "outDegree": 1,
    "code": "const BentoGrid = ({\n  className,\n  children,\n}: {\n  className?: string;\n  children?: React.ReactNode;\n}) => {\n  return (\n    <div\n      className={cn(\n        \"grid md:auto-rows-[18rem] grid-cols-1 md:grid-cols-3 gap-4 max-w-7xl mx-auto \",\n        className\n      )}\n    >\n      {children}\n    </div>\n  );\n};",
    "importStatements": [],
    "codeNoBody": "const BentoGrid = ({\n  className,\n  children,\n}: {\n  className?: string;\n  children?: React.ReactNode;\n}) => {\n       //...\n       };",
    "originFile": "\\components\\ui\\BentoGrid.tsx"
  },
  {
    "id": "\\components\\ui\\BentoGrid",
    "language": "tsx",
    "label": "C:\\Users\\gmasc\\OneDrive\\Documentos\\CodeGPT\\danielavila.me-main\\components\\ui\\BentoGrid.tsx",
    "type": "file",
    "totalTokens": 1492,
    "inDegree": 0,
    "outDegree": 2,
    "code": "'use client'\n\nimport { cn } from \"@/utils/cn\";\nimport { BackgroundGradientAnimation } from \"./GradientBg\";\nimport GlobeDemo from \"./GridGlobe\";\nimport { div } from \"three/examples/jsm/nodes/Nodes.js\";\nimport Lottie from \"react-lottie\";\nimport { useState } from \"react\";\nimport animationData from \"@/data/confetti.json\";\nimport MagicButton from \"./MagicButton\";\nimport { IoCopyOutline } from \"react-icons/io5\";\nimport { SiCalendly } from \"react-icons/si\";\n\nexport const BentoGrid = ({\n  className,\n  children,\n}: {\n  className?: string;\n  children?: React.ReactNode;\n}) => {\n  return (\n    <div\n      className={cn(\n        \"grid md:auto-rows-[18rem] grid-cols-1 md:grid-cols-3 gap-4 max-w-7xl mx-auto \",\n        className\n      )}\n    >\n      {children}\n    </div>\n  );\n};\n\nexport const BentoGridItem = ({\n  className,\n  title,\n  description,\n  id,\n  img,\n  imgClassName,\n  titleClassName,\n  spareImg,\n}: {\n  className?: string;\n  title?: string | React.ReactNode;\n  description?: string | React.ReactNode;\n  id?: number;\n  img?: string;\n  imgClassName?: string;\n  titleClassName?: string;\n  spareImg?: string;\n}) => {\n\n  const [copied, setCopied] = useState(false);\n\n  const defaultOptions = {\n    loop: copied,\n    autoplay: copied,\n    animationData: animationData,\n    rendererSettings: {\n      preserveAspectRatio: \"xMidYMid slice\",\n    },\n  };\n\n  const handleCalendly = () => {\n    // abre una nueva ventana con una url\n    window.open('https://calendly.com/daniel-evu/45min', '_blank');\n    \n    setCopied(true)\n  }\n  return (\n    <div\n      className={cn(\n        \"row-span-1 relative overflow-hidden rounded-3xl group/bento hover:shadow-xl transition duration-200 shadow-input dark:shadow-none dark:bg-black dark:border-white/[0.2] bg-white border border-transparent justify-between flex flex-col space-y-4 \",\n        className\n      )}\n      style={{\n        background: \"rgb(4,7,29)\",\n        backgroundColor:\n          \"linear-gradient(90deg, rgba(4,7,29,1) 0%, rgba(12,14,35,1) 100%)\",\n      }}\n    >\n        <div className={`${id === 6 && 'flex justify-center'} h-full'`}>\n            <div className=\"w-full h-full absolute\">\n                { img && (\n                    <img\n                        src={img}\n                        alt={img}\n                        className={cn(\n                            imgClassName, 'object-cover object-center')}\n                    />\n                )}\n            </div>\n            <div \n            className={`absolute right-0 -bottom-5 ${id === 5 && \"w-full opacity-80\"}`}>\n                {spareImg && (\n                   <img\n                        src={spareImg}\n                        alt={spareImg}\n                        className={'object-cover object-center w-full h-full'}\n                    />\n                )}\n            </div>\n            \n            {id === 6 && (\n            <BackgroundGradientAnimation>\n                {/* <div className=\"absolute z-50 inset-0 flex items-center justify-center text-white font-bold px-4 pointer-events-none text-3xl text-center md:text-4xl lg:text-7xl\"></div> */}\n            </BackgroundGradientAnimation>\n            )}\n\n            <div className={cn(\n                titleClassName,\n                \"group-hover/bento:translate-x-2 transition duration-200 relative md:h-full min-h-40 flex flex-col px-5 p-5 lg:p-10\"\n                )}\n            >\n                <div className=\"font-sans font-extralight md:max-w-32 md:text-xs lg:text-base text-sm text-[#C1C2D3] z-10\">\n                    {description}\n                </div>\n\n                <div className={`font-sans text-lg lg:text-3xl max-w-96 font-bold z-10`}>\n                    {title}\n                </div>\n\n            {id === 1 && <GlobeDemo />}\n\n\n            {id == 3 && (\n\n              <div className=\"flex gap-1 lg:gap-5 w-fit absolute -right-3 lg:-right-2\">\n                <div className=\"flex flex-col gap-3 lg:gap-8\">\n                  {[\"Laravel\", \"FastAPI\", \"React\", \"Flask\", \"NextJS\"].map((item) => (\n                    <span key={item} className=\"py-2 lg:py4 px-3 lg:px-3 text-xs lg:text-base opacity-50 lg:opacity-100 rounded-lg text-center bg-[#10132E]\">\n                      {item}\n                    </span>\n                  ))}\n\n                  \n                </div>\n\n                <div className=\"flex flex-col gap-3 lg:gap-8\">\n                  {[\"GCP\", \"AWS\", \"Azure\", \"Firebase\", \"Vercel\"].map((item) => (\n                    <span key={item} className=\"py-2 lg:py4 px-3 lg:px-3 text-xs lg:text-base opacity-50 lg:opacity-100 rounded-lg text-center bg-[#10132E]\">\n                      {item}\n                    </span>\n                  ))}\n\n                </div>\n\n                <div className=\"flex flex-col gap-3 lg:gap-8\">\n                  {[\"PHP\", \"Python\", \"C#\", \"Java\", \"C++\"].map((item) => (\n                    <span key={item} className=\"py-2 lg:py4 px-3 lg:px-3 text-xs lg:text-base opacity-50 lg:opacity-100 rounded-lg text-center bg-[#10132E]\">\n                      {item}\n                    </span>\n                  ))}\n\n                  \n                </div>\n                <div className=\"flex flex-col gap-3 lg:gap-8\">\n                  {[\"LLMs\", \"DSPy\", \"LlamaIndex\", \"Langchain\", \"LLMs\"].map((item) => (\n                    <span key={item} className=\"py-2 lg:py4 px-3 lg:px-3 text-xs lg:text-base opacity-50 lg:opacity-100 rounded-lg text-center bg-[#10132E]\">\n                      {item}\n                    </span>\n                  ))}\n\n                  \n                </div>\n              </div>\n            )}\n\n            {id === 6 && (\n              <div className=\"mt-5 relative\">\n                <div className='absolute -bottom-5 right-0'>\n                  <Lottie options={defaultOptions}  height={200} width={400}  />\n                </div>\n                  <MagicButton \n                    title={'Go to Calendly'}\n                    icon={<SiCalendly />}\n                    position=\"left\"\n                    otherClasses=\"text-lg lg:text-lg\"\n                    handleClick={handleCalendly}\n                  />    \n              </div>\n            )}\n        </div>\n      </div>\n    </div>\n  );\n};\n",
    "importStatements": [
      "import { cn } from \"@/utils/cn\";",
      "import { BackgroundGradientAnimation } from \"./GradientBg\";",
      "import GlobeDemo from \"./GridGlobe\";",
      "import { div } from \"three/examples/jsm/nodes/Nodes.js\";",
      "import Lottie from \"react-lottie\";",
      "import { useState } from \"react\";",
      "import animationData from \"@/data/confetti.json\";",
      "import MagicButton from \"./MagicButton\";",
      "import { IoCopyOutline } from \"react-icons/io5\";",
      "import { SiCalendly } from \"react-icons/si\";"
    ],
    "codeNoBody": "'use client'\nimport { cn } from \"@/utils/cn\";\nimport { BackgroundGradientAnimation } from \"./GradientBg\";\nimport GlobeDemo from \"./GridGlobe\";\nimport { div } from \"three/examples/jsm/nodes/Nodes.js\";\nimport Lottie from \"react-lottie\";\nimport { useState } from \"react\";\nimport animationData from \"@/data/confetti.json\";\nimport MagicButton from \"./MagicButton\";\nimport { IoCopyOutline } from \"react-icons/io5\";\nimport { SiCalendly } from \"react-icons/si\";\n\nexport const BentoGrid = ({\n  className,\n  children,\n}: {\n  className?: string;\n  children?: React.ReactNode;\n}) => {\n       //...\n       };\n\nexport const BentoGridItem = ({\n  className,\n  title,\n  description,\n  id,\n  img,\n  imgClassName,\n  titleClassName,\n  spareImg,\n}: {\n  className?: string;\n  title?: string | React.ReactNode;\n  description?: string | React.ReactNode;\n  id?: number;\n  img?: string;\n  imgClassName?: string;\n  titleClassName?: string;\n  spareImg?: string;\n}) => {\n       //...\n       };",
    "originFile": "\\components\\ui\\BentoGrid.tsx"
  },
  {
    "id": "\\components\\ui\\FloatingNav1::FloatingNav",
    "language": "tsx",
    "label": "FloatingNav",
    "type": "function",
    "parent": "C:\\Users\\gmasc\\OneDrive\\Documentos\\CodeGPT\\danielavila.me-main\\components\\ui\\FloatingNav1",
    "totalTokens": 513,
    "inDegree": 1,
    "outDegree": 1,
    "code": "const FloatingNav = ({\n  navItems,\n  className,\n}: {\n  navItems: {\n    name: string;\n    link: string;\n    icon?: JSX.Element;\n  }[];\n  className?: string;\n}) => {\n  const { scrollYProgress } = useScroll();\n\n  const [visible, setVisible] = useState(false);\n\n  useMotionValueEvent(scrollYProgress, \"change\", (current) => {\n    // Check if current is not undefined and is a number\n    if (typeof current === \"number\") {\n      let direction = current! - scrollYProgress.getPrevious()!;\n\n      if (scrollYProgress.get() < 0.05) {\n        setVisible(false);\n      } else {\n        if (direction < 0) {\n          setVisible(true);\n        } else {\n          setVisible(false);\n        }\n      }\n    }\n  });\n\n  return (\n    <AnimatePresence mode=\"wait\">\n      <motion.div\n        initial={{\n          opacity: 1,\n          y: -100,\n        }}\n        animate={{\n          y: visible ? 0 : -100,\n          opacity: visible ? 1 : 0,\n        }}\n        transition={{\n          duration: 0.2,\n        }}\n        className={cn(\n          \"flex max-w-fit  fixed top-10 inset-x-0 mx-auto border border-transparent dark:border-white/[0.2] rounded-lg dark:bg-black bg-white shadow-[0px_2px_3px_-1px_rgba(0,0,0,0.1),0px_1px_0px_0px_rgba(25,28,33,0.02),0px_0px_0px_1px_rgba(25,28,33,0.08)] z-[5000] px-10 py-5  items-center justify-center space-x-4\",\n          className\n        )}\n      >\n        {navItems.map((navItem: any, idx: number) => (\n          <Link\n            key={`link=${idx}`}\n            href={navItem.link}\n            className={cn(\n              \"relative dark:text-neutral-50 items-center flex space-x-1 text-neutral-600 dark:hover:text-neutral-300 hover:text-neutral-500\"\n            )}\n          >\n            <span className=\"block sm:hidden\">{navItem.icon}</span>\n            <span className=\"hidden sm:block text-sm\">{navItem.name}</span>\n          </Link>\n        ))}\n      </motion.div>\n    </AnimatePresence>\n  );\n};",
    "importStatements": [],
    "codeNoBody": "const FloatingNav = ({\n  navItems,\n  className,\n}: {\n  navItems: {\n    name: string;\n    link: string;\n    icon?: JSX.Element;\n  }[];\n  className?: string;\n}) => {\n       //...\n       };",
    "originFile": "\\components\\ui\\FloatingNav1.tsx"
  },
  {
    "id": "\\components\\ui\\FloatingNav1",
    "language": "tsx",
    "label": "C:\\Users\\gmasc\\OneDrive\\Documentos\\CodeGPT\\danielavila.me-main\\components\\ui\\FloatingNav1.tsx",
    "type": "file",
    "totalTokens": 571,
    "inDegree": 0,
    "outDegree": 1,
    "code": "\"use client\";\nimport React, { useState } from \"react\";\nimport {\n  motion,\n  AnimatePresence,\n  useScroll,\n  useMotionValueEvent,\n} from \"framer-motion\";\nimport { cn } from \"@/utils/cn\";\nimport Link from \"next/link\";\n\nexport const FloatingNav = ({\n  navItems,\n  className,\n}: {\n  navItems: {\n    name: string;\n    link: string;\n    icon?: JSX.Element;\n  }[];\n  className?: string;\n}) => {\n  const { scrollYProgress } = useScroll();\n\n  const [visible, setVisible] = useState(false);\n\n  useMotionValueEvent(scrollYProgress, \"change\", (current) => {\n    // Check if current is not undefined and is a number\n    if (typeof current === \"number\") {\n      let direction = current! - scrollYProgress.getPrevious()!;\n\n      if (scrollYProgress.get() < 0.05) {\n        setVisible(false);\n      } else {\n        if (direction < 0) {\n          setVisible(true);\n        } else {\n          setVisible(false);\n        }\n      }\n    }\n  });\n\n  return (\n    <AnimatePresence mode=\"wait\">\n      <motion.div\n        initial={{\n          opacity: 1,\n          y: -100,\n        }}\n        animate={{\n          y: visible ? 0 : -100,\n          opacity: visible ? 1 : 0,\n        }}\n        transition={{\n          duration: 0.2,\n        }}\n        className={cn(\n          \"flex max-w-fit  fixed top-10 inset-x-0 mx-auto border border-transparent dark:border-white/[0.2] rounded-lg dark:bg-black bg-white shadow-[0px_2px_3px_-1px_rgba(0,0,0,0.1),0px_1px_0px_0px_rgba(25,28,33,0.02),0px_0px_0px_1px_rgba(25,28,33,0.08)] z-[5000] px-10 py-5  items-center justify-center space-x-4\",\n          className\n        )}\n      >\n        {navItems.map((navItem: any, idx: number) => (\n          <Link\n            key={`link=${idx}`}\n            href={navItem.link}\n            className={cn(\n              \"relative dark:text-neutral-50 items-center flex space-x-1 text-neutral-600 dark:hover:text-neutral-300 hover:text-neutral-500\"\n            )}\n          >\n            <span className=\"block sm:hidden\">{navItem.icon}</span>\n            <span className=\"hidden sm:block text-sm\">{navItem.name}</span>\n          </Link>\n        ))}\n      </motion.div>\n    </AnimatePresence>\n  );\n};\n",
    "importStatements": [
      "import React, { useState } from \"react\";",
      "import {\n  motion,\n  AnimatePresence,\n  useScroll,\n  useMotionValueEvent,\n} from \"framer-motion\";",
      "import { cn } from \"@/utils/cn\";",
      "import Link from \"next/link\";"
    ],
    "codeNoBody": "\"use client\";\nimport React, { useState } from \"react\";\nimport {\n  motion,\n  AnimatePresence,\n  useScroll,\n  useMotionValueEvent,\n} from \"framer-motion\";\nimport { cn } from \"@/utils/cn\";\nimport Link from \"next/link\";\nexport const FloatingNav = ({\n  navItems,\n  className,\n}: {\n  navItems: {\n    name: string;\n    link: string;\n    icon?: JSX.Element;\n  }[];\n  className?: string;\n}) => {\n       //...\n       };",
    "originFile": "\\components\\ui\\FloatingNav1.tsx"
  },
  {
    "id": "\\components\\ui\\Globe::genRandomNumbers",
    "language": "tsx",
    "label": "genRandomNumbers",
    "type": "function",
    "parent": "C:\\Users\\gmasc\\OneDrive\\Documentos\\CodeGPT\\danielavila.me-main\\components\\ui\\Globe",
    "totalTokens": 71,
    "inDegree": 2,
    "outDegree": 0,
    "code": "function genRandomNumbers(min: number, max: number, count: number) {\n  const arr = [];\n  while (arr.length < count) {\n    const r = Math.floor(Math.random() * (max - min)) + min;\n    if (arr.indexOf(r) === -1) arr.push(r);\n  }\n\n  return arr;\n}",
    "importStatements": [],
    "codeNoBody": "function genRandomNumbers(min: number, max: number, count: number) {\n       //...\n       }",
    "originFile": "\\components\\ui\\Globe.tsx"
  },
  {
    "id": "\\components\\ui\\Globe::hexToRgb",
    "language": "tsx",
    "label": "hexToRgb",
    "type": "function",
    "parent": "C:\\Users\\gmasc\\OneDrive\\Documentos\\CodeGPT\\danielavila.me-main\\components\\ui\\Globe",
    "totalTokens": 151,
    "inDegree": 3,
    "outDegree": 0,
    "code": "function hexToRgb(hex: string) {\n  var shorthandRegex = /^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i;\n  hex = hex.replace(shorthandRegex, function (m, r, g, b) {\n    return r + r + g + g + b + b;\n  });\n\n  var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n  return result\n    ? {\n        r: parseInt(result[1], 16),\n        g: parseInt(result[2], 16),\n        b: parseInt(result[3], 16),\n      }\n    : null;\n}",
    "importStatements": [],
    "codeNoBody": "function hexToRgb(hex: string) {\n       //...\n       }",
    "originFile": "\\components\\ui\\Globe.tsx"
  },
  {
    "id": "\\components\\ui\\Globe::World",
    "language": "tsx",
    "label": "World",
    "type": "function",
    "parent": "C:\\Users\\gmasc\\OneDrive\\Documentos\\CodeGPT\\danielavila.me-main\\components\\ui\\Globe",
    "totalTokens": 293,
    "inDegree": 1,
    "outDegree": 1,
    "code": "function World(props: WorldProps) {\n  const { globeConfig } = props;\n  const scene = new Scene();\n  scene.fog = new Fog(0xffffff, 400, 2000);\n  return (\n    <Canvas scene={scene} camera={new PerspectiveCamera(50, aspect, 180, 1800)}>\n      <WebGLRendererConfig />\n      <ambientLight color={globeConfig.ambientLight} intensity={0.6} />\n      <directionalLight\n        color={globeConfig.directionalLeftLight}\n        position={new Vector3(-400, 100, 400)}\n      />\n      <directionalLight\n        color={globeConfig.directionalTopLight}\n        position={new Vector3(-200, 500, 200)}\n      />\n      <pointLight\n        color={globeConfig.pointLight}\n        position={new Vector3(-200, 500, 200)}\n        intensity={0.8}\n      />\n      <Globe {...props} />\n      <OrbitControls\n        enablePan={false}\n        enableZoom={false}\n        minDistance={cameraZ}\n        maxDistance={cameraZ}\n        autoRotateSpeed={1}\n        autoRotate={true}\n        minPolarAngle={Math.PI / 3.5}\n        maxPolarAngle={Math.PI - Math.PI / 3}\n      />\n    </Canvas>\n  );\n}",
    "importStatements": [],
    "codeNoBody": "function World(props: WorldProps) {\n       //...\n       }",
    "originFile": "\\components\\ui\\Globe.tsx"
  },
  {
    "id": "\\components\\ui\\Globe::WebGLRendererConfig",
    "language": "tsx",
    "label": "WebGLRendererConfig",
    "type": "function",
    "parent": "C:\\Users\\gmasc\\OneDrive\\Documentos\\CodeGPT\\danielavila.me-main\\components\\ui\\Globe",
    "totalTokens": 62,
    "inDegree": 1,
    "outDegree": 0,
    "code": "function WebGLRendererConfig() {\n  const { gl, size } = useThree();\n\n  useEffect(() => {\n    gl.setPixelRatio(window.devicePixelRatio);\n    gl.setSize(size.width, size.height);\n    gl.setClearColor(0xffaaff, 0);\n  }, []);\n\n  return null;\n}",
    "importStatements": [],
    "codeNoBody": "function WebGLRendererConfig() {\n       //...\n       }",
    "originFile": "\\components\\ui\\Globe.tsx"
  },
  {
    "id": "\\components\\ui\\Globe::startAnimation",
    "language": "tsx",
    "label": "startAnimation",
    "type": "function",
    "parent": "C:\\Users\\gmasc\\OneDrive\\Documentos\\CodeGPT\\danielavila.me-main\\components\\ui\\Globe::Globe",
    "totalTokens": 403,
    "inDegree": 2,
    "outDegree": 1,
    "code": "const startAnimation = () => {\n    if (!globeRef.current || !globeData) return;\n\n    globeRef.current\n      .arcsData(data)\n      .arcStartLat((d) => (d as { startLat: number }).startLat * 1)\n      .arcStartLng((d) => (d as { startLng: number }).startLng * 1)\n      .arcEndLat((d) => (d as { endLat: number }).endLat * 1)\n      .arcEndLng((d) => (d as { endLng: number }).endLng * 1)\n      .arcColor((e: any) => (e as { color: string }).color)\n      .arcAltitude((e) => {\n        return (e as { arcAlt: number }).arcAlt * 1;\n      })\n      .arcStroke((e) => {\n        return [0.32, 0.28, 0.3][Math.round(Math.random() * 2)];\n      })\n      .arcDashLength(defaultProps.arcLength)\n      .arcDashInitialGap((e) => (e as { order: number }).order * 1)\n      .arcDashGap(15)\n      .arcDashAnimateTime((e) => defaultProps.arcTime);\n\n    globeRef.current\n      .pointsData(data)\n      .pointColor((e) => (e as { color: string }).color)\n      .pointsMerge(true)\n      .pointAltitude(0.0)\n      .pointRadius(2);\n\n    globeRef.current\n      .ringsData([])\n      .ringColor((e: any) => (t: any) => e.color(t))\n      .ringMaxRadius(defaultProps.maxRings)\n      .ringPropagationSpeed(RING_PROPAGATION_SPEED)\n      .ringRepeatPeriod(\n        (defaultProps.arcTime * defaultProps.arcLength) / defaultProps.rings\n      );\n  };",
    "importStatements": [],
    "codeNoBody": "const startAnimation = () => {\n  //...\n  };",
    "originFile": "\\components\\ui\\Globe.tsx"
  },
  {
    "id": "\\components\\ui\\Globe::_buildData",
    "language": "tsx",
    "label": "_buildData",
    "type": "function",
    "parent": "C:\\Users\\gmasc\\OneDrive\\Documentos\\CodeGPT\\danielavila.me-main\\components\\ui\\Globe::Globe",
    "totalTokens": 283,
    "inDegree": 2,
    "outDegree": 1,
    "code": "const _buildData = () => {\n    const arcs = data;\n    let points = [];\n    for (let i = 0; i < arcs.length; i++) {\n      const arc = arcs[i];\n      const rgb = hexToRgb(arc.color) as { r: number; g: number; b: number };\n      points.push({\n        size: defaultProps.pointSize,\n        order: arc.order,\n        color: (t: number) => `rgba(${rgb.r}, ${rgb.g}, ${rgb.b}, ${1 - t})`,\n        lat: arc.startLat,\n        lng: arc.startLng,\n      });\n      points.push({\n        size: defaultProps.pointSize,\n        order: arc.order,\n        color: (t: number) => `rgba(${rgb.r}, ${rgb.g}, ${rgb.b}, ${1 - t})`,\n        lat: arc.endLat,\n        lng: arc.endLng,\n      });\n    }\n\n    // remove duplicates for same lat and lng\n    const filteredPoints = points.filter(\n      (v, i, a) =>\n        a.findIndex((v2) =>\n          [\"lat\", \"lng\"].every(\n            (k) => v2[k as \"lat\" | \"lng\"] === v[k as \"lat\" | \"lng\"]\n          )\n        ) === i\n    );\n\n    setGlobeData(filteredPoints);\n  };",
    "importStatements": [],
    "codeNoBody": "const _buildData = () => {\n  //...\n  };",
    "originFile": "\\components\\ui\\Globe.tsx"
  },
  {
    "id": "\\components\\ui\\Globe::_buildMaterial",
    "language": "tsx",
    "label": "_buildMaterial",
    "type": "function",
    "parent": "C:\\Users\\gmasc\\OneDrive\\Documentos\\CodeGPT\\danielavila.me-main\\components\\ui\\Globe::Globe",
    "totalTokens": 130,
    "inDegree": 2,
    "outDegree": 0,
    "code": "const _buildMaterial = () => {\n    if (!globeRef.current) return;\n\n    const globeMaterial = globeRef.current.globeMaterial() as unknown as {\n      color: Color;\n      emissive: Color;\n      emissiveIntensity: number;\n      shininess: number;\n    };\n    globeMaterial.color = new Color(globeConfig.globeColor);\n    globeMaterial.emissive = new Color(globeConfig.emissive);\n    globeMaterial.emissiveIntensity = globeConfig.emissiveIntensity || 0.1;\n    globeMaterial.shininess = globeConfig.shininess || 0.9;\n  };",
    "importStatements": [],
    "codeNoBody": "const _buildMaterial = () => {\n  //...\n  };",
    "originFile": "\\components\\ui\\Globe.tsx"
  },
  {
    "id": "\\components\\ui\\Globe::Globe",
    "language": "tsx",
    "label": "Globe",
    "type": "function",
    "parent": "C:\\Users\\gmasc\\OneDrive\\Documentos\\CodeGPT\\danielavila.me-main\\components\\ui\\Globe",
    "totalTokens": 1347,
    "inDegree": 1,
    "outDegree": 11,
    "code": "function Globe({ globeConfig, data }: WorldProps) {\n  const [globeData, setGlobeData] = useState<\n    | {\n        size: number;\n        order: number;\n        color: (t: number) => string;\n        lat: number;\n        lng: number;\n      }[]\n    | null\n  >(null);\n\n  const globeRef = useRef<ThreeGlobe | null>(null);\n\n  const defaultProps = {\n    pointSize: 1,\n    atmosphereColor: \"#ffffff\",\n    showAtmosphere: true,\n    atmosphereAltitude: 0.1,\n    polygonColor: \"rgba(255,255,255,0.7)\",\n    globeColor: \"#1d072e\",\n    emissive: \"#000000\",\n    emissiveIntensity: 0.1,\n    shininess: 0.9,\n    arcTime: 2000,\n    arcLength: 0.9,\n    rings: 1,\n    maxRings: 3,\n    ...globeConfig,\n  };\n\n  useEffect(() => {\n    if (globeRef.current) {\n      _buildData();\n      _buildMaterial();\n    }\n  }, [globeRef.current]);\n\n  const _buildMaterial = () => {\n    if (!globeRef.current) return;\n\n    const globeMaterial = globeRef.current.globeMaterial() as unknown as {\n      color: Color;\n      emissive: Color;\n      emissiveIntensity: number;\n      shininess: number;\n    };\n    globeMaterial.color = new Color(globeConfig.globeColor);\n    globeMaterial.emissive = new Color(globeConfig.emissive);\n    globeMaterial.emissiveIntensity = globeConfig.emissiveIntensity || 0.1;\n    globeMaterial.shininess = globeConfig.shininess || 0.9;\n  };\n\n  const _buildData = () => {\n    const arcs = data;\n    let points = [];\n    for (let i = 0; i < arcs.length; i++) {\n      const arc = arcs[i];\n      const rgb = hexToRgb(arc.color) as { r: number; g: number; b: number };\n      points.push({\n        size: defaultProps.pointSize,\n        order: arc.order,\n        color: (t: number) => `rgba(${rgb.r}, ${rgb.g}, ${rgb.b}, ${1 - t})`,\n        lat: arc.startLat,\n        lng: arc.startLng,\n      });\n      points.push({\n        size: defaultProps.pointSize,\n        order: arc.order,\n        color: (t: number) => `rgba(${rgb.r}, ${rgb.g}, ${rgb.b}, ${1 - t})`,\n        lat: arc.endLat,\n        lng: arc.endLng,\n      });\n    }\n\n    // remove duplicates for same lat and lng\n    const filteredPoints = points.filter(\n      (v, i, a) =>\n        a.findIndex((v2) =>\n          [\"lat\", \"lng\"].every(\n            (k) => v2[k as \"lat\" | \"lng\"] === v[k as \"lat\" | \"lng\"]\n          )\n        ) === i\n    );\n\n    setGlobeData(filteredPoints);\n  };\n\n  useEffect(() => {\n    if (globeRef.current && globeData) {\n      globeRef.current\n        .hexPolygonsData(countries.features)\n        .hexPolygonResolution(3)\n        .hexPolygonMargin(0.7)\n        .showAtmosphere(defaultProps.showAtmosphere)\n        .atmosphereColor(defaultProps.atmosphereColor)\n        .atmosphereAltitude(defaultProps.atmosphereAltitude)\n        .hexPolygonColor((e) => {\n          return defaultProps.polygonColor;\n        });\n      startAnimation();\n    }\n  }, [globeData]);\n\n  const startAnimation = () => {\n    if (!globeRef.current || !globeData) return;\n\n    globeRef.current\n      .arcsData(data)\n      .arcStartLat((d) => (d as { startLat: number }).startLat * 1)\n      .arcStartLng((d) => (d as { startLng: number }).startLng * 1)\n      .arcEndLat((d) => (d as { endLat: number }).endLat * 1)\n      .arcEndLng((d) => (d as { endLng: number }).endLng * 1)\n      .arcColor((e: any) => (e as { color: string }).color)\n      .arcAltitude((e) => {\n        return (e as { arcAlt: number }).arcAlt * 1;\n      })\n      .arcStroke((e) => {\n        return [0.32, 0.28, 0.3][Math.round(Math.random() * 2)];\n      })\n      .arcDashLength(defaultProps.arcLength)\n      .arcDashInitialGap((e) => (e as { order: number }).order * 1)\n      .arcDashGap(15)\n      .arcDashAnimateTime((e) => defaultProps.arcTime);\n\n    globeRef.current\n      .pointsData(data)\n      .pointColor((e) => (e as { color: string }).color)\n      .pointsMerge(true)\n      .pointAltitude(0.0)\n      .pointRadius(2);\n\n    globeRef.current\n      .ringsData([])\n      .ringColor((e: any) => (t: any) => e.color(t))\n      .ringMaxRadius(defaultProps.maxRings)\n      .ringPropagationSpeed(RING_PROPAGATION_SPEED)\n      .ringRepeatPeriod(\n        (defaultProps.arcTime * defaultProps.arcLength) / defaultProps.rings\n      );\n  };\n\n  useEffect(() => {\n    if (!globeRef.current || !globeData) return;\n\n    const interval = setInterval(() => {\n      if (!globeRef.current || !globeData) return;\n      numbersOfRings = genRandomNumbers(\n        0,\n        data.length,\n        Math.floor((data.length * 4) / 5)\n      );\n\n      globeRef.current.ringsData(\n        globeData.filter((d, i) => numbersOfRings.includes(i))\n      );\n    }, 2000);\n\n    return () => {\n      clearInterval(interval);\n    };\n  }, [globeRef.current, globeData]);\n\n  return (\n    <>\n      <threeGlobe ref={globeRef} />\n    </>\n  );\n}",
    "importStatements": [],
    "codeNoBody": "function Globe({ globeConfig, data }: WorldProps) {\n  const [globeData, setGlobeData] = useState<\n    | {\n        size: number;\n        order: number;\n        color: (t: number) => string;\n        lat: number;\n        lng: number;\n      }[]\n    | null\n  >(null);\n  const globeRef = useRef<ThreeGlobe | null>(null);\n\n  const defaultProps = {\n    pointSize: 1,\n    atmosphereColor: \"#ffffff\",\n    showAtmosphere: true,\n    atmosphereAltitude: 0.1,\n    polygonColor: \"rgba(255,255,255,0.7)\",\n    globeColor: \"#1d072e\",\n    emissive: \"#000000\",\n    emissiveIntensity: 0.1,\n    shininess: 0.9,\n    arcTime: 2000,\n    arcLength: 0.9,\n    rings: 1,\n    maxRings: 3,\n    ...globeConfig,\n  };\n\n  useEffect(() => {\n    if (globeRef.current) {\n      _buildData();\n      _buildMaterial();\n    }\n  }, [globeRef.current]);\n\n  const _buildMaterial = () => {\n    if (!globeRef.current) return;\n\n    const globeMaterial = globeRef.current.globeMaterial() as unknown as {\n      color: Color;\n      emissive: Color;\n      emissiveIntensity: number;\n      shininess: number;\n    };\n    globeMaterial.color = new Color(globeConfig.globeColor);\n    globeMaterial.emissive = new Color(globeConfig.emissive);\n    globeMaterial.emissiveIntensity = globeConfig.emissiveIntensity || 0.1;\n    globeMaterial.shininess = globeConfig.shininess || 0.9;\n  };\n\n  const _buildData = () => {\n    const arcs = data;\n    let points = [];\n    for (let i = 0; i < arcs.length; i++) {\n      const arc = arcs[i];\n      const rgb = hexToRgb(arc.color) as { r: number; g: number; b: number };\n      points.push({\n        size: defaultProps.pointSize,\n        order: arc.order,\n        color: (t: number) => `rgba(${rgb.r}, ${rgb.g}, ${rgb.b}, ${1 - t})`,\n        lat: arc.startLat,\n        lng: arc.startLng,\n      });\n      points.push({\n        size: defaultProps.pointSize,\n        order: arc.order,\n        color: (t: number) => `rgba(${rgb.r}, ${rgb.g}, ${rgb.b}, ${1 - t})`,\n        lat: arc.endLat,\n        lng: arc.endLng,\n      });\n    }\n\n    // remove duplicates for same lat and lng\n    const filteredPoints = points.filter(\n      (v, i, a) =>\n        a.findIndex((v2) =>\n          [\"lat\", \"lng\"].every(\n            (k) => v2[k as \"lat\" | \"lng\"] === v[k as \"lat\" | \"lng\"]\n          )\n        ) === i\n    );\n\n    setGlobeData(filteredPoints);\n  };\n\n  useEffect(() => {\n    if (globeRef.current && globeData) {\n      globeRef.current\n        .hexPolygonsData(countries.features)\n        .hexPolygonResolution(3)\n        .hexPolygonMargin(0.7)\n        .showAtmosphere(defaultProps.showAtmosphere)\n        .atmosphereColor(defaultProps.atmosphereColor)\n        .atmosphereAltitude(defaultProps.atmosphereAltitude)\n        .hexPolygonColor((e) => {\n          return defaultProps.polygonColor;\n        });\n      startAnimation();\n    }\n  }, [globeData]);\n\n  const startAnimation = () => {\n    if (!globeRef.current || !globeData) return;\n\n    globeRef.current\n      .arcsData(data)\n      .arcStartLat((d) => (d as { startLat: number }).startLat * 1)\n      .arcStartLng((d) => (d as { startLng: number }).startLng * 1)\n      .arcEndLat((d) => (d as { endLat: number }).endLat * 1)\n      .arcEndLng((d) => (d as { endLng: number }).endLng * 1)\n      .arcColor((e: any) => (e as { color: string }).color)\n      .arcAltitude((e) => {\n        return (e as { arcAlt: number }).arcAlt * 1;\n      })\n      .arcStroke((e) => {\n        return [0.32, 0.28, 0.3][Math.round(Math.random() * 2)];\n      })\n      .arcDashLength(defaultProps.arcLength)\n      .arcDashInitialGap((e) => (e as { order: number }).order * 1)\n      .arcDashGap(15)\n      .arcDashAnimateTime((e) => defaultProps.arcTime);\n\n    globeRef.current\n      .pointsData(data)\n      .pointColor((e) => (e as { color: string }).color)\n      .pointsMerge(true)\n      .pointAltitude(0.0)\n      .pointRadius(2);\n\n    globeRef.current\n      .ringsData([])\n      .ringColor((e: any) => (t: any) => e.color(t))\n      .ringMaxRadius(defaultProps.maxRings)\n      .ringPropagationSpeed(RING_PROPAGATION_SPEED)\n      .ringRepeatPeriod(\n        (defaultProps.arcTime * defaultProps.arcLength) / defaultProps.rings\n      );\n  };\n\n  useEffect(() => {\n    if (!globeRef.current || !globeData) return;\n\n    const interval = setInterval(() => {\n      if (!globeRef.current || !globeData) return;\n      numbersOfRings = genRandomNumbers(\n        0,\n        data.length,\n        Math.floor((data.length * 4) / 5)\n      );\n\n      globeRef.current.ringsData(\n        globeData.filter((d, i) => numbersOfRings.includes(i))\n      );\n    }, 2000);\n\n    return () => {\n      clearInterval(interval);\n    };\n  }, [globeRef.current, globeData]);\n\n  return (\n    <>\n      <threeGlobe ref={globeRef} />\n    </>\n  );\n}",
    "originFile": "\\components\\ui\\Globe.tsx"
  },
  {
    "id": "\\components\\ui\\Globe::numbersOfRings",
    "language": "tsx",
    "label": "numbersOfRings",
    "type": "assignment",
    "parent": "C:\\Users\\gmasc\\OneDrive\\Documentos\\CodeGPT\\danielavila.me-main\\components\\ui\\Globe",
    "totalTokens": 9,
    "inDegree": 2,
    "outDegree": 0,
    "code": "let numbersOfRings = [0];",
    "importStatements": [],
    "codeNoBody": "let numbersOfRings = [0];",
    "originFile": "\\components\\ui\\Globe.tsx"
  },
  {
    "id": "\\components\\ui\\Globe::WorldProps",
    "language": "tsx",
    "label": "WorldProps",
    "type": "interface",
    "parent": "C:\\Users\\gmasc\\OneDrive\\Documentos\\CodeGPT\\danielavila.me-main\\components\\ui\\Globe",
    "totalTokens": 17,
    "inDegree": 5,
    "outDegree": 3,
    "code": "interface WorldProps {\n  globeConfig: GlobeConfig;\n  data: Position[];\n}",
    "importStatements": [],
    "codeNoBody": "interface WorldProps {\n//...\n}",
    "originFile": "\\components\\ui\\Globe.tsx"
  },
  {
    "id": "\\components\\ui\\Globe::GlobeConfig",
    "language": "tsx",
    "label": "GlobeConfig",
    "type": "type",
    "parent": "C:\\Users\\gmasc\\OneDrive\\Documentos\\CodeGPT\\danielavila.me-main\\components\\ui\\Globe",
    "totalTokens": 144,
    "inDegree": 3,
    "outDegree": 1,
    "code": "type GlobeConfig = {\n  pointSize?: number;\n  globeColor?: string;\n  showAtmosphere?: boolean;\n  atmosphereColor?: string;\n  atmosphereAltitude?: number;\n  emissive?: string;\n  emissiveIntensity?: number;\n  shininess?: number;\n  polygonColor?: string;\n  ambientLight?: string;\n  directionalLeftLight?: string;\n  directionalTopLight?: string;\n  pointLight?: string;\n  arcTime?: number;\n  arcLength?: number;\n  rings?: number;\n  maxRings?: number;\n  initialPosition?: {\n    lat: number;\n    lng: number;\n  };\n  autoRotate?: boolean;\n  autoRotateSpeed?: number;\n};",
    "importStatements": [],
    "codeNoBody": "type GlobeConfig = {\n  pointSize?: number;\n  globeColor?: string;\n  showAtmosphere?: boolean;\n  atmosphereColor?: string;\n  atmosphereAltitude?: number;\n  emissive?: string;\n  emissiveIntensity?: number;\n  shininess?: number;\n  polygonColor?: string;\n  ambientLight?: string;\n  directionalLeftLight?: string;\n  directionalTopLight?: string;\n  pointLight?: string;\n  arcTime?: number;\n  arcLength?: number;\n  rings?: number;\n  maxRings?: number;\n  initialPosition?: {\n    lat: number;\n    lng: number;\n  };\n  autoRotate?: boolean;\n  autoRotateSpeed?: number;\n};",
    "originFile": "\\components\\ui\\Globe.tsx"
  },
  {
    "id": "\\components\\ui\\Globe::Position",
    "language": "tsx",
    "label": "Position",
    "type": "type",
    "parent": "C:\\Users\\gmasc\\OneDrive\\Documentos\\CodeGPT\\danielavila.me-main\\components\\ui\\Globe",
    "totalTokens": 45,
    "inDegree": 3,
    "outDegree": 1,
    "code": "type Position = {\n  order: number;\n  startLat: number;\n  startLng: number;\n  endLat: number;\n  endLng: number;\n  arcAlt: number;\n  color: string;\n};",
    "importStatements": [],
    "codeNoBody": "type Position = {\n  order: number;\n  startLat: number;\n  startLng: number;\n  endLat: number;\n  endLng: number;\n  arcAlt: number;\n  color: string;\n};",
    "originFile": "\\components\\ui\\Globe.tsx"
  },
  {
    "id": "\\components\\ui\\Globe::cameraZ",
    "language": "tsx",
    "label": "cameraZ",
    "type": "assignment",
    "parent": "C:\\Users\\gmasc\\OneDrive\\Documentos\\CodeGPT\\danielavila.me-main\\components\\ui\\Globe",
    "totalTokens": 7,
    "inDegree": 1,
    "outDegree": 0,
    "code": "const cameraZ = 300;",
    "importStatements": [],
    "codeNoBody": "const cameraZ = 300;",
    "originFile": "\\components\\ui\\Globe.tsx"
  },
  {
    "id": "\\components\\ui\\Globe::const",
    "language": "tsx",
    "label": "const",
    "type": "assignment",
    "parent": "C:\\Users\\gmasc\\OneDrive\\Documentos\\CodeGPT\\danielavila.me-main\\components\\ui\\Globe",
    "totalTokens": 8,
    "inDegree": 1,
    "outDegree": 0,
    "code": "const aspect = 1.2;",
    "importStatements": [],
    "codeNoBody": "const aspect = 1.2;",
    "originFile": "\\components\\ui\\Globe.tsx"
  },
  {
    "id": "\\components\\ui\\Globe::RING_PROPAGATION_SPEED",
    "language": "tsx",
    "label": "RING_PROPAGATION_SPEED",
    "type": "assignment",
    "parent": "C:\\Users\\gmasc\\OneDrive\\Documentos\\CodeGPT\\danielavila.me-main\\components\\ui\\Globe",
    "totalTokens": 11,
    "inDegree": 3,
    "outDegree": 0,
    "code": "const RING_PROPAGATION_SPEED = 3;",
    "importStatements": [],
    "codeNoBody": "const RING_PROPAGATION_SPEED = 3;",
    "originFile": "\\components\\ui\\Globe.tsx"
  },
  {
    "id": "\\components\\ui\\Globe::ThreeElements",
    "language": "tsx",
    "label": "ThreeElements",
    "type": "interface",
    "parent": "C:\\Users\\gmasc\\OneDrive\\Documentos\\CodeGPT\\danielavila.me-main\\components\\ui\\Globe",
    "totalTokens": 25,
    "inDegree": 3,
    "outDegree": 1,
    "code": "interface ThreeElements {\n    threeGlobe: Object3DNode<ThreeGlobe, typeof ThreeGlobe>;\n  }",
    "importStatements": [],
    "codeNoBody": "interface ThreeElements {\n  //...\n  }",
    "originFile": "\\components\\ui\\Globe.tsx"
  },
  {
    "id": "\\components\\ui\\Globe",
    "language": "tsx",
    "label": "C:\\Users\\gmasc\\OneDrive\\Documentos\\CodeGPT\\danielavila.me-main\\components\\ui\\Globe.tsx",
    "type": "file",
    "totalTokens": 2298,
    "inDegree": 0,
    "outDegree": 15,
    "code": "\"use client\";\nimport { useEffect, useRef, useState } from \"react\";\nimport { Color, Scene, Fog, PerspectiveCamera, Vector3 } from \"three\";\nimport ThreeGlobe from \"three-globe\";\nimport { useThree, Object3DNode, Canvas, extend } from \"@react-three/fiber\";\nimport { OrbitControls } from \"@react-three/drei\";\nimport countries from \"@/data/globe.json\";\ndeclare module \"@react-three/fiber\" {\n  interface ThreeElements {\n    threeGlobe: Object3DNode<ThreeGlobe, typeof ThreeGlobe>;\n  }\n}\n\nextend({ ThreeGlobe });\n\nconst RING_PROPAGATION_SPEED = 3;\nconst aspect = 1.2;\nconst cameraZ = 300;\n\ntype Position = {\n  order: number;\n  startLat: number;\n  startLng: number;\n  endLat: number;\n  endLng: number;\n  arcAlt: number;\n  color: string;\n};\n\nexport type GlobeConfig = {\n  pointSize?: number;\n  globeColor?: string;\n  showAtmosphere?: boolean;\n  atmosphereColor?: string;\n  atmosphereAltitude?: number;\n  emissive?: string;\n  emissiveIntensity?: number;\n  shininess?: number;\n  polygonColor?: string;\n  ambientLight?: string;\n  directionalLeftLight?: string;\n  directionalTopLight?: string;\n  pointLight?: string;\n  arcTime?: number;\n  arcLength?: number;\n  rings?: number;\n  maxRings?: number;\n  initialPosition?: {\n    lat: number;\n    lng: number;\n  };\n  autoRotate?: boolean;\n  autoRotateSpeed?: number;\n};\n\ninterface WorldProps {\n  globeConfig: GlobeConfig;\n  data: Position[];\n}\n\nlet numbersOfRings = [0];\n\nexport function Globe({ globeConfig, data }: WorldProps) {\n  const [globeData, setGlobeData] = useState<\n    | {\n        size: number;\n        order: number;\n        color: (t: number) => string;\n        lat: number;\n        lng: number;\n      }[]\n    | null\n  >(null);\n\n  const globeRef = useRef<ThreeGlobe | null>(null);\n\n  const defaultProps = {\n    pointSize: 1,\n    atmosphereColor: \"#ffffff\",\n    showAtmosphere: true,\n    atmosphereAltitude: 0.1,\n    polygonColor: \"rgba(255,255,255,0.7)\",\n    globeColor: \"#1d072e\",\n    emissive: \"#000000\",\n    emissiveIntensity: 0.1,\n    shininess: 0.9,\n    arcTime: 2000,\n    arcLength: 0.9,\n    rings: 1,\n    maxRings: 3,\n    ...globeConfig,\n  };\n\n  useEffect(() => {\n    if (globeRef.current) {\n      _buildData();\n      _buildMaterial();\n    }\n  }, [globeRef.current]);\n\n  const _buildMaterial = () => {\n    if (!globeRef.current) return;\n\n    const globeMaterial = globeRef.current.globeMaterial() as unknown as {\n      color: Color;\n      emissive: Color;\n      emissiveIntensity: number;\n      shininess: number;\n    };\n    globeMaterial.color = new Color(globeConfig.globeColor);\n    globeMaterial.emissive = new Color(globeConfig.emissive);\n    globeMaterial.emissiveIntensity = globeConfig.emissiveIntensity || 0.1;\n    globeMaterial.shininess = globeConfig.shininess || 0.9;\n  };\n\n  const _buildData = () => {\n    const arcs = data;\n    let points = [];\n    for (let i = 0; i < arcs.length; i++) {\n      const arc = arcs[i];\n      const rgb = hexToRgb(arc.color) as { r: number; g: number; b: number };\n      points.push({\n        size: defaultProps.pointSize,\n        order: arc.order,\n        color: (t: number) => `rgba(${rgb.r}, ${rgb.g}, ${rgb.b}, ${1 - t})`,\n        lat: arc.startLat,\n        lng: arc.startLng,\n      });\n      points.push({\n        size: defaultProps.pointSize,\n        order: arc.order,\n        color: (t: number) => `rgba(${rgb.r}, ${rgb.g}, ${rgb.b}, ${1 - t})`,\n        lat: arc.endLat,\n        lng: arc.endLng,\n      });\n    }\n\n    // remove duplicates for same lat and lng\n    const filteredPoints = points.filter(\n      (v, i, a) =>\n        a.findIndex((v2) =>\n          [\"lat\", \"lng\"].every(\n            (k) => v2[k as \"lat\" | \"lng\"] === v[k as \"lat\" | \"lng\"]\n          )\n        ) === i\n    );\n\n    setGlobeData(filteredPoints);\n  };\n\n  useEffect(() => {\n    if (globeRef.current && globeData) {\n      globeRef.current\n        .hexPolygonsData(countries.features)\n        .hexPolygonResolution(3)\n        .hexPolygonMargin(0.7)\n        .showAtmosphere(defaultProps.showAtmosphere)\n        .atmosphereColor(defaultProps.atmosphereColor)\n        .atmosphereAltitude(defaultProps.atmosphereAltitude)\n        .hexPolygonColor((e) => {\n          return defaultProps.polygonColor;\n        });\n      startAnimation();\n    }\n  }, [globeData]);\n\n  const startAnimation = () => {\n    if (!globeRef.current || !globeData) return;\n\n    globeRef.current\n      .arcsData(data)\n      .arcStartLat((d) => (d as { startLat: number }).startLat * 1)\n      .arcStartLng((d) => (d as { startLng: number }).startLng * 1)\n      .arcEndLat((d) => (d as { endLat: number }).endLat * 1)\n      .arcEndLng((d) => (d as { endLng: number }).endLng * 1)\n      .arcColor((e: any) => (e as { color: string }).color)\n      .arcAltitude((e) => {\n        return (e as { arcAlt: number }).arcAlt * 1;\n      })\n      .arcStroke((e) => {\n        return [0.32, 0.28, 0.3][Math.round(Math.random() * 2)];\n      })\n      .arcDashLength(defaultProps.arcLength)\n      .arcDashInitialGap((e) => (e as { order: number }).order * 1)\n      .arcDashGap(15)\n      .arcDashAnimateTime((e) => defaultProps.arcTime);\n\n    globeRef.current\n      .pointsData(data)\n      .pointColor((e) => (e as { color: string }).color)\n      .pointsMerge(true)\n      .pointAltitude(0.0)\n      .pointRadius(2);\n\n    globeRef.current\n      .ringsData([])\n      .ringColor((e: any) => (t: any) => e.color(t))\n      .ringMaxRadius(defaultProps.maxRings)\n      .ringPropagationSpeed(RING_PROPAGATION_SPEED)\n      .ringRepeatPeriod(\n        (defaultProps.arcTime * defaultProps.arcLength) / defaultProps.rings\n      );\n  };\n\n  useEffect(() => {\n    if (!globeRef.current || !globeData) return;\n\n    const interval = setInterval(() => {\n      if (!globeRef.current || !globeData) return;\n      numbersOfRings = genRandomNumbers(\n        0,\n        data.length,\n        Math.floor((data.length * 4) / 5)\n      );\n\n      globeRef.current.ringsData(\n        globeData.filter((d, i) => numbersOfRings.includes(i))\n      );\n    }, 2000);\n\n    return () => {\n      clearInterval(interval);\n    };\n  }, [globeRef.current, globeData]);\n\n  return (\n    <>\n      <threeGlobe ref={globeRef} />\n    </>\n  );\n}\n\nexport function WebGLRendererConfig() {\n  const { gl, size } = useThree();\n\n  useEffect(() => {\n    gl.setPixelRatio(window.devicePixelRatio);\n    gl.setSize(size.width, size.height);\n    gl.setClearColor(0xffaaff, 0);\n  }, []);\n\n  return null;\n}\n\nexport function World(props: WorldProps) {\n  const { globeConfig } = props;\n  const scene = new Scene();\n  scene.fog = new Fog(0xffffff, 400, 2000);\n  return (\n    <Canvas scene={scene} camera={new PerspectiveCamera(50, aspect, 180, 1800)}>\n      <WebGLRendererConfig />\n      <ambientLight color={globeConfig.ambientLight} intensity={0.6} />\n      <directionalLight\n        color={globeConfig.directionalLeftLight}\n        position={new Vector3(-400, 100, 400)}\n      />\n      <directionalLight\n        color={globeConfig.directionalTopLight}\n        position={new Vector3(-200, 500, 200)}\n      />\n      <pointLight\n        color={globeConfig.pointLight}\n        position={new Vector3(-200, 500, 200)}\n        intensity={0.8}\n      />\n      <Globe {...props} />\n      <OrbitControls\n        enablePan={false}\n        enableZoom={false}\n        minDistance={cameraZ}\n        maxDistance={cameraZ}\n        autoRotateSpeed={1}\n        autoRotate={true}\n        minPolarAngle={Math.PI / 3.5}\n        maxPolarAngle={Math.PI - Math.PI / 3}\n      />\n    </Canvas>\n  );\n}\n\nexport function hexToRgb(hex: string) {\n  var shorthandRegex = /^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i;\n  hex = hex.replace(shorthandRegex, function (m, r, g, b) {\n    return r + r + g + g + b + b;\n  });\n\n  var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n  return result\n    ? {\n        r: parseInt(result[1], 16),\n        g: parseInt(result[2], 16),\n        b: parseInt(result[3], 16),\n      }\n    : null;\n}\n\nexport function genRandomNumbers(min: number, max: number, count: number) {\n  const arr = [];\n  while (arr.length < count) {\n    const r = Math.floor(Math.random() * (max - min)) + min;\n    if (arr.indexOf(r) === -1) arr.push(r);\n  }\n\n  return arr;\n}\n",
    "importStatements": [
      "import { useEffect, useRef, useState } from \"react\";",
      "import { Color, Scene, Fog, PerspectiveCamera, Vector3 } from \"three\";",
      "import ThreeGlobe from \"three-globe\";",
      "import { useThree, Object3DNode, Canvas, extend } from \"@react-three/fiber\";",
      "import { OrbitControls } from \"@react-three/drei\";",
      "import countries from \"@/data/globe.json\";"
    ],
    "codeNoBody": "\"use client\";\nimport { useEffect, useRef, useState } from \"react\";\nimport { Color, Scene, Fog, PerspectiveCamera, Vector3 } from \"three\";\nimport ThreeGlobe from \"three-globe\";\nimport { useThree, Object3DNode, Canvas, extend } from \"@react-three/fiber\";\nimport { OrbitControls } from \"@react-three/drei\";\nimport countries from \"@/data/globe.json\";\ndeclare module \"@react-three/fiber\" {\n  interface ThreeElements {\n  //...\n  }\n}\nextend({ ThreeGlobe });\n\nconst RING_PROPAGATION_SPEED = 3;\nconst aspect = 1.2;\nconst cameraZ = 300;\n\ntype Position = {\n  order: number;\n  startLat: number;\n  startLng: number;\n  endLat: number;\n  endLng: number;\n  arcAlt: number;\n  color: string;\n};\n\nexport type GlobeConfig = {\n  pointSize?: number;\n  globeColor?: string;\n  showAtmosphere?: boolean;\n  atmosphereColor?: string;\n  atmosphereAltitude?: number;\n  emissive?: string;\n  emissiveIntensity?: number;\n  shininess?: number;\n  polygonColor?: string;\n  ambientLight?: string;\n  directionalLeftLight?: string;\n  directionalTopLight?: string;\n  pointLight?: string;\n  arcTime?: number;\n  arcLength?: number;\n  rings?: number;\n  maxRings?: number;\n  initialPosition?: {\n    lat: number;\n    lng: number;\n  };\n  autoRotate?: boolean;\n  autoRotateSpeed?: number;\n};\n\ninterface WorldProps {\n//...\n}\n\nlet numbersOfRings = [0];\n\nexport function Globe({ globeConfig, data }: WorldProps) {\n       //...\n       }\n\nexport function WebGLRendererConfig() {\n       //...\n       }\n\nexport function World(props: WorldProps) {\n       //...\n       }\n\nexport function hexToRgb(hex: string) {\n       //...\n       }\n\nexport function genRandomNumbers(min: number, max: number, count: number) {\n       //...\n       }",
    "originFile": "\\components\\ui\\Globe.tsx"
  },
  {
    "id": "\\components\\ui\\GradientBg::handleMouseMove",
    "language": "tsx",
    "label": "handleMouseMove",
    "type": "function",
    "parent": "C:\\Users\\gmasc\\OneDrive\\Documentos\\CodeGPT\\danielavila.me-main\\components\\ui\\GradientBg::BackgroundGradientAnimation",
    "totalTokens": 57,
    "inDegree": 1,
    "outDegree": 0,
    "code": "const handleMouseMove = (event: React.MouseEvent<HTMLDivElement>) => {\n    if (interactiveRef.current) {\n      const rect = interactiveRef.current.getBoundingClientRect();\n      setTgX(event.clientX - rect.left);\n      setTgY(event.clientY - rect.top);\n    }\n  };",
    "importStatements": [],
    "codeNoBody": "const handleMouseMove = (event: React.MouseEvent<HTMLDivElement>) => {\n  //...\n  };",
    "originFile": "\\components\\ui\\GradientBg.tsx"
  },
  {
    "id": "\\components\\ui\\GradientBg::move",
    "language": "tsx",
    "label": "move",
    "type": "function",
    "parent": "C:\\Users\\gmasc\\OneDrive\\Documentos\\CodeGPT\\danielavila.me-main\\components\\ui\\GradientBg::BackgroundGradientAnimation",
    "totalTokens": 86,
    "inDegree": 2,
    "outDegree": 0,
    "code": "function move() {\n      if (!interactiveRef.current) {\n        return;\n      }\n      setCurX(curX + (tgX - curX) / 20);\n      setCurY(curY + (tgY - curY) / 20);\n      interactiveRef.current.style.transform = `translate(${Math.round(\n        curX\n      )}px, ${Math.round(curY)}px)`;\n    }",
    "importStatements": [],
    "codeNoBody": "function move() {\n    //...\n    }",
    "originFile": "\\components\\ui\\GradientBg.tsx"
  },
  {
    "id": "\\components\\ui\\GradientBg::BackgroundGradientAnimation",
    "language": "tsx",
    "label": "BackgroundGradientAnimation",
    "type": "function",
    "parent": "C:\\Users\\gmasc\\OneDrive\\Documentos\\CodeGPT\\danielavila.me-main\\components\\ui\\GradientBg",
    "totalTokens": 1694,
    "inDegree": 1,
    "outDegree": 4,
    "code": "const BackgroundGradientAnimation = ({\n  gradientBackgroundStart = \"rgb(108, 0, 162)\",\n  gradientBackgroundEnd = \"rgb(0, 17, 82)\",\n  firstColor = \"18, 113, 255\",\n  secondColor = \"221, 74, 255\",\n  thirdColor = \"100, 220, 255\",\n  fourthColor = \"200, 50, 50\",\n  fifthColor = \"180, 180, 50\",\n  pointerColor = \"140, 100, 255\",\n  size = \"80%\",\n  blendingValue = \"hard-light\",\n  children,\n  className,\n  interactive = true,\n  containerClassName,\n}: {\n  gradientBackgroundStart?: string;\n  gradientBackgroundEnd?: string;\n  firstColor?: string;\n  secondColor?: string;\n  thirdColor?: string;\n  fourthColor?: string;\n  fifthColor?: string;\n  pointerColor?: string;\n  size?: string;\n  blendingValue?: string;\n  children?: React.ReactNode;\n  className?: string;\n  interactive?: boolean;\n  containerClassName?: string;\n}) => {\n  const interactiveRef = useRef<HTMLDivElement>(null);\n\n  const [curX, setCurX] = useState(0);\n  const [curY, setCurY] = useState(0);\n  const [tgX, setTgX] = useState(0);\n  const [tgY, setTgY] = useState(0);\n  useEffect(() => {\n    document.body.style.setProperty(\n      \"--gradient-background-start\",\n      gradientBackgroundStart\n    );\n    document.body.style.setProperty(\n      \"--gradient-background-end\",\n      gradientBackgroundEnd\n    );\n    document.body.style.setProperty(\"--first-color\", firstColor);\n    document.body.style.setProperty(\"--second-color\", secondColor);\n    document.body.style.setProperty(\"--third-color\", thirdColor);\n    document.body.style.setProperty(\"--fourth-color\", fourthColor);\n    document.body.style.setProperty(\"--fifth-color\", fifthColor);\n    document.body.style.setProperty(\"--pointer-color\", pointerColor);\n    document.body.style.setProperty(\"--size\", size);\n    document.body.style.setProperty(\"--blending-value\", blendingValue);\n  }, []);\n\n  useEffect(() => {\n    function move() {\n      if (!interactiveRef.current) {\n        return;\n      }\n      setCurX(curX + (tgX - curX) / 20);\n      setCurY(curY + (tgY - curY) / 20);\n      interactiveRef.current.style.transform = `translate(${Math.round(\n        curX\n      )}px, ${Math.round(curY)}px)`;\n    }\n\n    move();\n  }, [tgX, tgY]);\n\n  const handleMouseMove = (event: React.MouseEvent<HTMLDivElement>) => {\n    if (interactiveRef.current) {\n      const rect = interactiveRef.current.getBoundingClientRect();\n      setTgX(event.clientX - rect.left);\n      setTgY(event.clientY - rect.top);\n    }\n  };\n\n  const [isSafari, setIsSafari] = useState(false);\n  useEffect(() => {\n    setIsSafari(/^((?!chrome|android).)*safari/i.test(navigator.userAgent));\n  }, []);\n\n  return (\n    <div\n      className={cn(\n        \"h-full w-full absolute overflow-hidden top-0 left-0 bg-[linear-gradient(40deg,var(--gradient-background-start),var(--gradient-background-end))]\",\n        containerClassName\n      )}\n    >\n      <svg className=\"hidden\">\n        <defs>\n          <filter id=\"blurMe\">\n            <feGaussianBlur\n              in=\"SourceGraphic\"\n              stdDeviation=\"10\"\n              result=\"blur\"\n            />\n            <feColorMatrix\n              in=\"blur\"\n              mode=\"matrix\"\n              values=\"1 0 0 0 0  0 1 0 0 0  0 0 1 0 0  0 0 0 18 -8\"\n              result=\"goo\"\n            />\n            <feBlend in=\"SourceGraphic\" in2=\"goo\" />\n          </filter>\n        </defs>\n      </svg>\n      <div className={cn(\"\", className)}>{children}</div>\n      <div\n        className={cn(\n          \"gradients-container h-full w-full blur-lg\",\n          isSafari ? \"blur-2xl\" : \"[filter:url(#blurMe)_blur(40px)]\"\n        )}\n      >\n        <div\n          className={cn(\n            `absolute [background:radial-gradient(circle_at_center,_var(--first-color)_0,_var(--first-color)_50%)_no-repeat]`,\n            `[mix-blend-mode:var(--blending-value)] w-[var(--size)] h-[var(--size)] top-[calc(50%-var(--size)/2)] left-[calc(50%-var(--size)/2)]`,\n            `[transform-origin:center_center]`,\n            `animate-first`,\n            `opacity-100`\n          )}\n        ></div>\n        <div\n          className={cn(\n            `absolute [background:radial-gradient(circle_at_center,_rgba(var(--second-color),_0.8)_0,_rgba(var(--second-color),_0)_50%)_no-repeat]`,\n            `[mix-blend-mode:var(--blending-value)] w-[var(--size)] h-[var(--size)] top-[calc(50%-var(--size)/2)] left-[calc(50%-var(--size)/2)]`,\n            `[transform-origin:calc(50%-400px)]`,\n            `animate-second`,\n            `opacity-100`\n          )}\n        ></div>\n        <div\n          className={cn(\n            `absolute [background:radial-gradient(circle_at_center,_rgba(var(--third-color),_0.8)_0,_rgba(var(--third-color),_0)_50%)_no-repeat]`,\n            `[mix-blend-mode:var(--blending-value)] w-[var(--size)] h-[var(--size)] top-[calc(50%-var(--size)/2)] left-[calc(50%-var(--size)/2)]`,\n            `[transform-origin:calc(50%+400px)]`,\n            `animate-third`,\n            `opacity-100`\n          )}\n        ></div>\n        <div\n          className={cn(\n            `absolute [background:radial-gradient(circle_at_center,_rgba(var(--fourth-color),_0.8)_0,_rgba(var(--fourth-color),_0)_50%)_no-repeat]`,\n            `[mix-blend-mode:var(--blending-value)] w-[var(--size)] h-[var(--size)] top-[calc(50%-var(--size)/2)] left-[calc(50%-var(--size)/2)]`,\n            `[transform-origin:calc(50%-200px)]`,\n            `animate-fourth`,\n            `opacity-70`\n          )}\n        ></div>\n        <div\n          className={cn(\n            `absolute [background:radial-gradient(circle_at_center,_rgba(var(--fifth-color),_0.8)_0,_rgba(var(--fifth-color),_0)_50%)_no-repeat]`,\n            `[mix-blend-mode:var(--blending-value)] w-[var(--size)] h-[var(--size)] top-[calc(50%-var(--size)/2)] left-[calc(50%-var(--size)/2)]`,\n            `[transform-origin:calc(50%-800px)_calc(50%+800px)]`,\n            `animate-fifth`,\n            `opacity-100`\n          )}\n        ></div>\n\n        {interactive && (\n          <div\n            ref={interactiveRef}\n            onMouseMove={handleMouseMove}\n            className={cn(\n              `absolute [background:radial-gradient(circle_at_center,_rgba(var(--pointer-color),_0.8)_0,_rgba(var(--pointer-color),_0)_50%)_no-repeat]`,\n              `[mix-blend-mode:var(--blending-value)] w-full h-full -top-1/2 -left-1/2`,\n              `opacity-70`\n            )}\n          ></div>\n        )}\n      </div>\n    </div>\n  );\n};",
    "importStatements": [],
    "codeNoBody": "const BackgroundGradientAnimation = ({\n  gradientBackgroundStart = \"rgb(108, 0, 162)\",\n  gradientBackgroundEnd = \"rgb(0, 17, 82)\",\n  firstColor = \"18, 113, 255\",\n  secondColor = \"221, 74, 255\",\n  thirdColor = \"100, 220, 255\",\n  fourthColor = \"200, 50, 50\",\n  fifthColor = \"180, 180, 50\",\n  pointerColor = \"140, 100, 255\",\n  size = \"80%\",\n  blendingValue = \"hard-light\",\n  children,\n  className,\n  interactive = true,\n  containerClassName,\n}: {\n  gradientBackgroundStart?: string;\n  gradientBackgroundEnd?: string;\n  firstColor?: string;\n  secondColor?: string;\n  thirdColor?: string;\n  fourthColor?: string;\n  fifthColor?: string;\n  pointerColor?: string;\n  size?: string;\n  blendingValue?: string;\n  children?: React.ReactNode;\n  className?: string;\n  interactive?: boolean;\n  containerClassName?: string;\n}) => {\n  const interactiveRef = useRef<HTMLDivElement>(null);\n  const [curX, setCurX] = useState(0);\n  const [curY, setCurY] = useState(0);\n  const [tgX, setTgX] = useState(0);\n  const [tgY, setTgY] = useState(0);\n  useEffect(() => {\n    document.body.style.setProperty(\n      \"--gradient-background-start\",\n      gradientBackgroundStart\n    );\n    document.body.style.setProperty(\n      \"--gradient-background-end\",\n      gradientBackgroundEnd\n    );\n    document.body.style.setProperty(\"--first-color\", firstColor);\n    document.body.style.setProperty(\"--second-color\", secondColor);\n    document.body.style.setProperty(\"--third-color\", thirdColor);\n    document.body.style.setProperty(\"--fourth-color\", fourthColor);\n    document.body.style.setProperty(\"--fifth-color\", fifthColor);\n    document.body.style.setProperty(\"--pointer-color\", pointerColor);\n    document.body.style.setProperty(\"--size\", size);\n    document.body.style.setProperty(\"--blending-value\", blendingValue);\n  }, []);\n\n  useEffect(() => {\n    function move() {\n      if (!interactiveRef.current) {\n        return;\n      }\n      setCurX(curX + (tgX - curX) / 20);\n      setCurY(curY + (tgY - curY) / 20);\n      interactiveRef.current.style.transform = `translate(${Math.round(\n        curX\n      )}px, ${Math.round(curY)}px)`;\n    }\n\n    move();\n  }, [tgX, tgY]);\n\n  const handleMouseMove = (event: React.MouseEvent<HTMLDivElement>) => {\n    if (interactiveRef.current) {\n      const rect = interactiveRef.current.getBoundingClientRect();\n      setTgX(event.clientX - rect.left);\n      setTgY(event.clientY - rect.top);\n    }\n  };\n\n  const [isSafari, setIsSafari] = useState(false);\n  useEffect(() => {\n    setIsSafari(/^((?!chrome|android).)*safari/i.test(navigator.userAgent));\n  }, []);\n\n  return (\n    <div\n      className={cn(\n        \"h-full w-full absolute overflow-hidden top-0 left-0 bg-[linear-gradient(40deg,var(--gradient-background-start),var(--gradient-background-end))]\",\n        containerClassName\n      )}\n    >\n      <svg className=\"hidden\">\n        <defs>\n          <filter id=\"blurMe\">\n            <feGaussianBlur\n              in=\"SourceGraphic\"\n              stdDeviation=\"10\"\n              result=\"blur\"\n            />\n            <feColorMatrix\n              in=\"blur\"\n              mode=\"matrix\"\n              values=\"1 0 0 0 0  0 1 0 0 0  0 0 1 0 0  0 0 0 18 -8\"\n              result=\"goo\"\n            />\n            <feBlend in=\"SourceGraphic\" in2=\"goo\" />\n          </filter>\n        </defs>\n      </svg>\n      <div className={cn(\"\", className)}>{children}</div>\n      <div\n        className={cn(\n          \"gradients-container h-full w-full blur-lg\",\n          isSafari ? \"blur-2xl\" : \"[filter:url(#blurMe)_blur(40px)]\"\n        )}\n      >\n        <div\n          className={cn(\n            `absolute [background:radial-gradient(circle_at_center,_var(--first-color)_0,_var(--first-color)_50%)_no-repeat]`,\n            `[mix-blend-mode:var(--blending-value)] w-[var(--size)] h-[var(--size)] top-[calc(50%-var(--size)/2)] left-[calc(50%-var(--size)/2)]`,\n            `[transform-origin:center_center]`,\n            `animate-first`,\n            `opacity-100`\n          )}\n        ></div>\n        <div\n          className={cn(\n            `absolute [background:radial-gradient(circle_at_center,_rgba(var(--second-color),_0.8)_0,_rgba(var(--second-color),_0)_50%)_no-repeat]`,\n            `[mix-blend-mode:var(--blending-value)] w-[var(--size)] h-[var(--size)] top-[calc(50%-var(--size)/2)] left-[calc(50%-var(--size)/2)]`,\n            `[transform-origin:calc(50%-400px)]`,\n            `animate-second`,\n            `opacity-100`\n          )}\n        ></div>\n        <div\n          className={cn(\n            `absolute [background:radial-gradient(circle_at_center,_rgba(var(--third-color),_0.8)_0,_rgba(var(--third-color),_0)_50%)_no-repeat]`,\n            `[mix-blend-mode:var(--blending-value)] w-[var(--size)] h-[var(--size)] top-[calc(50%-var(--size)/2)] left-[calc(50%-var(--size)/2)]`,\n            `[transform-origin:calc(50%+400px)]`,\n            `animate-third`,\n            `opacity-100`\n          )}\n        ></div>\n        <div\n          className={cn(\n            `absolute [background:radial-gradient(circle_at_center,_rgba(var(--fourth-color),_0.8)_0,_rgba(var(--fourth-color),_0)_50%)_no-repeat]`,\n            `[mix-blend-mode:var(--blending-value)] w-[var(--size)] h-[var(--size)] top-[calc(50%-var(--size)/2)] left-[calc(50%-var(--size)/2)]`,\n            `[transform-origin:calc(50%-200px)]`,\n            `animate-fourth`,\n            `opacity-70`\n          )}\n        ></div>\n        <div\n          className={cn(\n            `absolute [background:radial-gradient(circle_at_center,_rgba(var(--fifth-color),_0.8)_0,_rgba(var(--fifth-color),_0)_50%)_no-repeat]`,\n            `[mix-blend-mode:var(--blending-value)] w-[var(--size)] h-[var(--size)] top-[calc(50%-var(--size)/2)] left-[calc(50%-var(--size)/2)]`,\n            `[transform-origin:calc(50%-800px)_calc(50%+800px)]`,\n            `animate-fifth`,\n            `opacity-100`\n          )}\n        ></div>\n\n        {interactive && (\n          <div\n            ref={interactiveRef}\n            onMouseMove={handleMouseMove}\n            className={cn(\n              `absolute [background:radial-gradient(circle_at_center,_rgba(var(--pointer-color),_0.8)_0,_rgba(var(--pointer-color),_0)_50%)_no-repeat]`,\n              `[mix-blend-mode:var(--blending-value)] w-full h-full -top-1/2 -left-1/2`,\n              `opacity-70`\n            )}\n          ></div>\n        )}\n      </div>\n    </div>\n  );\n};",
    "originFile": "\\components\\ui\\GradientBg.tsx"
  },
  {
    "id": "\\components\\ui\\GradientBg",
    "language": "tsx",
    "label": "C:\\Users\\gmasc\\OneDrive\\Documentos\\CodeGPT\\danielavila.me-main\\components\\ui\\GradientBg.tsx",
    "type": "file",
    "totalTokens": 1720,
    "inDegree": 0,
    "outDegree": 1,
    "code": "\"use client\";\nimport { cn } from \"@/utils/cn\";\nimport { useEffect, useRef, useState } from \"react\";\n\nexport const BackgroundGradientAnimation = ({\n  gradientBackgroundStart = \"rgb(108, 0, 162)\",\n  gradientBackgroundEnd = \"rgb(0, 17, 82)\",\n  firstColor = \"18, 113, 255\",\n  secondColor = \"221, 74, 255\",\n  thirdColor = \"100, 220, 255\",\n  fourthColor = \"200, 50, 50\",\n  fifthColor = \"180, 180, 50\",\n  pointerColor = \"140, 100, 255\",\n  size = \"80%\",\n  blendingValue = \"hard-light\",\n  children,\n  className,\n  interactive = true,\n  containerClassName,\n}: {\n  gradientBackgroundStart?: string;\n  gradientBackgroundEnd?: string;\n  firstColor?: string;\n  secondColor?: string;\n  thirdColor?: string;\n  fourthColor?: string;\n  fifthColor?: string;\n  pointerColor?: string;\n  size?: string;\n  blendingValue?: string;\n  children?: React.ReactNode;\n  className?: string;\n  interactive?: boolean;\n  containerClassName?: string;\n}) => {\n  const interactiveRef = useRef<HTMLDivElement>(null);\n\n  const [curX, setCurX] = useState(0);\n  const [curY, setCurY] = useState(0);\n  const [tgX, setTgX] = useState(0);\n  const [tgY, setTgY] = useState(0);\n  useEffect(() => {\n    document.body.style.setProperty(\n      \"--gradient-background-start\",\n      gradientBackgroundStart\n    );\n    document.body.style.setProperty(\n      \"--gradient-background-end\",\n      gradientBackgroundEnd\n    );\n    document.body.style.setProperty(\"--first-color\", firstColor);\n    document.body.style.setProperty(\"--second-color\", secondColor);\n    document.body.style.setProperty(\"--third-color\", thirdColor);\n    document.body.style.setProperty(\"--fourth-color\", fourthColor);\n    document.body.style.setProperty(\"--fifth-color\", fifthColor);\n    document.body.style.setProperty(\"--pointer-color\", pointerColor);\n    document.body.style.setProperty(\"--size\", size);\n    document.body.style.setProperty(\"--blending-value\", blendingValue);\n  }, []);\n\n  useEffect(() => {\n    function move() {\n      if (!interactiveRef.current) {\n        return;\n      }\n      setCurX(curX + (tgX - curX) / 20);\n      setCurY(curY + (tgY - curY) / 20);\n      interactiveRef.current.style.transform = `translate(${Math.round(\n        curX\n      )}px, ${Math.round(curY)}px)`;\n    }\n\n    move();\n  }, [tgX, tgY]);\n\n  const handleMouseMove = (event: React.MouseEvent<HTMLDivElement>) => {\n    if (interactiveRef.current) {\n      const rect = interactiveRef.current.getBoundingClientRect();\n      setTgX(event.clientX - rect.left);\n      setTgY(event.clientY - rect.top);\n    }\n  };\n\n  const [isSafari, setIsSafari] = useState(false);\n  useEffect(() => {\n    setIsSafari(/^((?!chrome|android).)*safari/i.test(navigator.userAgent));\n  }, []);\n\n  return (\n    <div\n      className={cn(\n        \"h-full w-full absolute overflow-hidden top-0 left-0 bg-[linear-gradient(40deg,var(--gradient-background-start),var(--gradient-background-end))]\",\n        containerClassName\n      )}\n    >\n      <svg className=\"hidden\">\n        <defs>\n          <filter id=\"blurMe\">\n            <feGaussianBlur\n              in=\"SourceGraphic\"\n              stdDeviation=\"10\"\n              result=\"blur\"\n            />\n            <feColorMatrix\n              in=\"blur\"\n              mode=\"matrix\"\n              values=\"1 0 0 0 0  0 1 0 0 0  0 0 1 0 0  0 0 0 18 -8\"\n              result=\"goo\"\n            />\n            <feBlend in=\"SourceGraphic\" in2=\"goo\" />\n          </filter>\n        </defs>\n      </svg>\n      <div className={cn(\"\", className)}>{children}</div>\n      <div\n        className={cn(\n          \"gradients-container h-full w-full blur-lg\",\n          isSafari ? \"blur-2xl\" : \"[filter:url(#blurMe)_blur(40px)]\"\n        )}\n      >\n        <div\n          className={cn(\n            `absolute [background:radial-gradient(circle_at_center,_var(--first-color)_0,_var(--first-color)_50%)_no-repeat]`,\n            `[mix-blend-mode:var(--blending-value)] w-[var(--size)] h-[var(--size)] top-[calc(50%-var(--size)/2)] left-[calc(50%-var(--size)/2)]`,\n            `[transform-origin:center_center]`,\n            `animate-first`,\n            `opacity-100`\n          )}\n        ></div>\n        <div\n          className={cn(\n            `absolute [background:radial-gradient(circle_at_center,_rgba(var(--second-color),_0.8)_0,_rgba(var(--second-color),_0)_50%)_no-repeat]`,\n            `[mix-blend-mode:var(--blending-value)] w-[var(--size)] h-[var(--size)] top-[calc(50%-var(--size)/2)] left-[calc(50%-var(--size)/2)]`,\n            `[transform-origin:calc(50%-400px)]`,\n            `animate-second`,\n            `opacity-100`\n          )}\n        ></div>\n        <div\n          className={cn(\n            `absolute [background:radial-gradient(circle_at_center,_rgba(var(--third-color),_0.8)_0,_rgba(var(--third-color),_0)_50%)_no-repeat]`,\n            `[mix-blend-mode:var(--blending-value)] w-[var(--size)] h-[var(--size)] top-[calc(50%-var(--size)/2)] left-[calc(50%-var(--size)/2)]`,\n            `[transform-origin:calc(50%+400px)]`,\n            `animate-third`,\n            `opacity-100`\n          )}\n        ></div>\n        <div\n          className={cn(\n            `absolute [background:radial-gradient(circle_at_center,_rgba(var(--fourth-color),_0.8)_0,_rgba(var(--fourth-color),_0)_50%)_no-repeat]`,\n            `[mix-blend-mode:var(--blending-value)] w-[var(--size)] h-[var(--size)] top-[calc(50%-var(--size)/2)] left-[calc(50%-var(--size)/2)]`,\n            `[transform-origin:calc(50%-200px)]`,\n            `animate-fourth`,\n            `opacity-70`\n          )}\n        ></div>\n        <div\n          className={cn(\n            `absolute [background:radial-gradient(circle_at_center,_rgba(var(--fifth-color),_0.8)_0,_rgba(var(--fifth-color),_0)_50%)_no-repeat]`,\n            `[mix-blend-mode:var(--blending-value)] w-[var(--size)] h-[var(--size)] top-[calc(50%-var(--size)/2)] left-[calc(50%-var(--size)/2)]`,\n            `[transform-origin:calc(50%-800px)_calc(50%+800px)]`,\n            `animate-fifth`,\n            `opacity-100`\n          )}\n        ></div>\n\n        {interactive && (\n          <div\n            ref={interactiveRef}\n            onMouseMove={handleMouseMove}\n            className={cn(\n              `absolute [background:radial-gradient(circle_at_center,_rgba(var(--pointer-color),_0.8)_0,_rgba(var(--pointer-color),_0)_50%)_no-repeat]`,\n              `[mix-blend-mode:var(--blending-value)] w-full h-full -top-1/2 -left-1/2`,\n              `opacity-70`\n            )}\n          ></div>\n        )}\n      </div>\n    </div>\n  );\n};\n",
    "importStatements": [
      "import { cn } from \"@/utils/cn\";",
      "import { useEffect, useRef, useState } from \"react\";"
    ],
    "codeNoBody": "\"use client\";\nimport { cn } from \"@/utils/cn\";\nimport { useEffect, useRef, useState } from \"react\";\nexport const BackgroundGradientAnimation = ({\n  gradientBackgroundStart = \"rgb(108, 0, 162)\",\n  gradientBackgroundEnd = \"rgb(0, 17, 82)\",\n  firstColor = \"18, 113, 255\",\n  secondColor = \"221, 74, 255\",\n  thirdColor = \"100, 220, 255\",\n  fourthColor = \"200, 50, 50\",\n  fifthColor = \"180, 180, 50\",\n  pointerColor = \"140, 100, 255\",\n  size = \"80%\",\n  blendingValue = \"hard-light\",\n  children,\n  className,\n  interactive = true,\n  containerClassName,\n}: {\n  gradientBackgroundStart?: string;\n  gradientBackgroundEnd?: string;\n  firstColor?: string;\n  secondColor?: string;\n  thirdColor?: string;\n  fourthColor?: string;\n  fifthColor?: string;\n  pointerColor?: string;\n  size?: string;\n  blendingValue?: string;\n  children?: React.ReactNode;\n  className?: string;\n  interactive?: boolean;\n  containerClassName?: string;\n}) => {\n       //...\n       };",
    "originFile": "\\components\\ui\\GradientBg.tsx"
  },
  {
    "id": "\\components\\ui\\GridGlobe::GridGlobe",
    "language": "tsx",
    "label": "GridGlobe",
    "type": "function",
    "parent": "C:\\Users\\gmasc\\OneDrive\\Documentos\\CodeGPT\\danielavila.me-main\\components\\ui\\GridGlobe",
    "totalTokens": 3678,
    "inDegree": 1,
    "outDegree": 0,
    "code": "const GridGlobe = () => {\n  const globeConfig = {\n    pointSize: 4,\n    globeColor: \"#062056\",\n    showAtmosphere: true,\n    atmosphereColor: \"#FFFFFF\",\n    atmosphereAltitude: 0.1,\n    emissive: \"#062056\",\n    emissiveIntensity: 0.1,\n    shininess: 0.9,\n    polygonColor: \"rgba(255,255,255,0.7)\",\n    ambientLight: \"#38bdf8\",\n    directionalLeftLight: \"#ffffff\",\n    directionalTopLight: \"#ffffff\",\n    pointLight: \"#ffffff\",\n    arcTime: 1000,\n    arcLength: 0.9,\n    rings: 1,\n    maxRings: 3,\n    initialPosition: { lat: 22.3193, lng: 114.1694 },\n    autoRotate: true,\n    autoRotateSpeed: 0.5,\n  };\n  const colors = [\"#06b6d4\", \"#3b82f6\", \"#6366f1\"];\n  const sampleArcs = [\n    {\n      order: 1,\n      startLat: -19.885592,\n      startLng: -43.951191,\n      endLat: -22.9068,\n      endLng: -43.1729,\n      arcAlt: 0.1,\n      color: colors[Math.floor(Math.random() * (colors.length - 1))],\n    },\n    {\n      order: 1,\n      startLat: 28.6139,\n      startLng: 77.209,\n      endLat: 3.139,\n      endLng: 101.6869,\n      arcAlt: 0.2,\n      color: colors[Math.floor(Math.random() * (colors.length - 1))],\n    },\n    {\n      order: 1,\n      startLat: -19.885592,\n      startLng: -43.951191,\n      endLat: -1.303396,\n      endLng: 36.852443,\n      arcAlt: 0.5,\n      color: colors[Math.floor(Math.random() * (colors.length - 1))],\n    },\n    {\n      order: 2,\n      startLat: 1.3521,\n      startLng: 103.8198,\n      endLat: 35.6762,\n      endLng: 139.6503,\n      arcAlt: 0.2,\n      color: colors[Math.floor(Math.random() * (colors.length - 1))],\n    },\n    {\n      order: 2,\n      startLat: 51.5072,\n      startLng: -0.1276,\n      endLat: 3.139,\n      endLng: 101.6869,\n      arcAlt: 0.3,\n      color: colors[Math.floor(Math.random() * (colors.length - 1))],\n    },\n    {\n      order: 2,\n      startLat: -15.785493,\n      startLng: -47.909029,\n      endLat: 36.162809,\n      endLng: -115.119411,\n      arcAlt: 0.3,\n      color: colors[Math.floor(Math.random() * (colors.length - 1))],\n    },\n    {\n      order: 3,\n      startLat: -33.8688,\n      startLng: 151.2093,\n      endLat: 22.3193,\n      endLng: 114.1694,\n      arcAlt: 0.3,\n      color: colors[Math.floor(Math.random() * (colors.length - 1))],\n    },\n    {\n      order: 3,\n      startLat: 21.3099,\n      startLng: -157.8581,\n      endLat: 40.7128,\n      endLng: -74.006,\n      arcAlt: 0.3,\n      color: colors[Math.floor(Math.random() * (colors.length - 1))],\n    },\n    {\n      order: 3,\n      startLat: -6.2088,\n      startLng: 106.8456,\n      endLat: 51.5072,\n      endLng: -0.1276,\n      arcAlt: 0.3,\n      color: colors[Math.floor(Math.random() * (colors.length - 1))],\n    },\n    {\n      order: 4,\n      startLat: 11.986597,\n      startLng: 8.571831,\n      endLat: -15.595412,\n      endLng: -56.05918,\n      arcAlt: 0.5,\n      color: colors[Math.floor(Math.random() * (colors.length - 1))],\n    },\n    {\n      order: 4,\n      startLat: -34.6037,\n      startLng: -58.3816,\n      endLat: 22.3193,\n      endLng: 114.1694,\n      arcAlt: 0.7,\n      color: colors[Math.floor(Math.random() * (colors.length - 1))],\n    },\n    {\n      order: 4,\n      startLat: 51.5072,\n      startLng: -0.1276,\n      endLat: 48.8566,\n      endLng: -2.3522,\n      arcAlt: 0.1,\n      color: colors[Math.floor(Math.random() * (colors.length - 1))],\n    },\n    {\n      order: 5,\n      startLat: 14.5995,\n      startLng: 120.9842,\n      endLat: 51.5072,\n      endLng: -0.1276,\n      arcAlt: 0.3,\n      color: colors[Math.floor(Math.random() * (colors.length - 1))],\n    },\n    {\n      order: 5,\n      startLat: 1.3521,\n      startLng: 103.8198,\n      endLat: -33.8688,\n      endLng: 151.2093,\n      arcAlt: 0.2,\n      color: colors[Math.floor(Math.random() * (colors.length - 1))],\n    },\n    {\n      order: 5,\n      startLat: 34.0522,\n      startLng: -118.2437,\n      endLat: 48.8566,\n      endLng: -2.3522,\n      arcAlt: 0.2,\n      color: colors[Math.floor(Math.random() * (colors.length - 1))],\n    },\n    {\n      order: 6,\n      startLat: -15.432563,\n      startLng: 28.315853,\n      endLat: 1.094136,\n      endLng: -63.34546,\n      arcAlt: 0.7,\n      color: colors[Math.floor(Math.random() * (colors.length - 1))],\n    },\n    {\n      order: 6,\n      startLat: 37.5665,\n      startLng: 126.978,\n      endLat: 35.6762,\n      endLng: 139.6503,\n      arcAlt: 0.1,\n      color: colors[Math.floor(Math.random() * (colors.length - 1))],\n    },\n    {\n      order: 6,\n      startLat: 22.3193,\n      startLng: 114.1694,\n      endLat: 51.5072,\n      endLng: -0.1276,\n      arcAlt: 0.3,\n      color: colors[Math.floor(Math.random() * (colors.length - 1))],\n    },\n    {\n      order: 7,\n      startLat: -19.885592,\n      startLng: -43.951191,\n      endLat: -15.595412,\n      endLng: -56.05918,\n      arcAlt: 0.1,\n      color: colors[Math.floor(Math.random() * (colors.length - 1))],\n    },\n    {\n      order: 7,\n      startLat: 48.8566,\n      startLng: -2.3522,\n      endLat: 52.52,\n      endLng: 13.405,\n      arcAlt: 0.1,\n      color: colors[Math.floor(Math.random() * (colors.length - 1))],\n    },\n    {\n      order: 7,\n      startLat: 52.52,\n      startLng: 13.405,\n      endLat: 34.0522,\n      endLng: -118.2437,\n      arcAlt: 0.2,\n      color: colors[Math.floor(Math.random() * (colors.length - 1))],\n    },\n    {\n      order: 8,\n      startLat: -8.833221,\n      startLng: 13.264837,\n      endLat: -33.936138,\n      endLng: 18.436529,\n      arcAlt: 0.2,\n      color: colors[Math.floor(Math.random() * (colors.length - 1))],\n    },\n    {\n      order: 8,\n      startLat: 49.2827,\n      startLng: -123.1207,\n      endLat: 52.3676,\n      endLng: 4.9041,\n      arcAlt: 0.2,\n      color: colors[Math.floor(Math.random() * (colors.length - 1))],\n    },\n    {\n      order: 8,\n      startLat: 1.3521,\n      startLng: 103.8198,\n      endLat: 40.7128,\n      endLng: -74.006,\n      arcAlt: 0.5,\n      color: colors[Math.floor(Math.random() * (colors.length - 1))],\n    },\n    {\n      order: 9,\n      startLat: 51.5072,\n      startLng: -0.1276,\n      endLat: 34.0522,\n      endLng: -118.2437,\n      arcAlt: 0.2,\n      color: colors[Math.floor(Math.random() * (colors.length - 1))],\n    },\n    {\n      order: 9,\n      startLat: 22.3193,\n      startLng: 114.1694,\n      endLat: -22.9068,\n      endLng: -43.1729,\n      arcAlt: 0.7,\n      color: colors[Math.floor(Math.random() * (colors.length - 1))],\n    },\n    {\n      order: 9,\n      startLat: 1.3521,\n      startLng: 103.8198,\n      endLat: -34.6037,\n      endLng: -58.3816,\n      arcAlt: 0.5,\n      color: colors[Math.floor(Math.random() * (colors.length - 1))],\n    },\n    {\n      order: 10,\n      startLat: -22.9068,\n      startLng: -43.1729,\n      endLat: 28.6139,\n      endLng: 77.209,\n      arcAlt: 0.7,\n      color: colors[Math.floor(Math.random() * (colors.length - 1))],\n    },\n    {\n      order: 10,\n      startLat: 34.0522,\n      startLng: -118.2437,\n      endLat: 31.2304,\n      endLng: 121.4737,\n      arcAlt: 0.3,\n      color: colors[Math.floor(Math.random() * (colors.length - 1))],\n    },\n    {\n      order: 10,\n      startLat: -6.2088,\n      startLng: 106.8456,\n      endLat: 52.3676,\n      endLng: 4.9041,\n      arcAlt: 0.3,\n      color: colors[Math.floor(Math.random() * (colors.length - 1))],\n    },\n    {\n      order: 11,\n      startLat: 41.9028,\n      startLng: 12.4964,\n      endLat: 34.0522,\n      endLng: -118.2437,\n      arcAlt: 0.2,\n      color: colors[Math.floor(Math.random() * (colors.length - 1))],\n    },\n    {\n      order: 11,\n      startLat: -6.2088,\n      startLng: 106.8456,\n      endLat: 31.2304,\n      endLng: 121.4737,\n      arcAlt: 0.2,\n      color: colors[Math.floor(Math.random() * (colors.length - 1))],\n    },\n    {\n      order: 11,\n      startLat: 22.3193,\n      startLng: 114.1694,\n      endLat: 1.3521,\n      endLng: 103.8198,\n      arcAlt: 0.2,\n      color: colors[Math.floor(Math.random() * (colors.length - 1))],\n    },\n    {\n      order: 12,\n      startLat: 34.0522,\n      startLng: -118.2437,\n      endLat: 37.7749,\n      endLng: -122.4194,\n      arcAlt: 0.1,\n      color: colors[Math.floor(Math.random() * (colors.length - 1))],\n    },\n    {\n      order: 12,\n      startLat: 35.6762,\n      startLng: 139.6503,\n      endLat: 22.3193,\n      endLng: 114.1694,\n      arcAlt: 0.2,\n      color: colors[Math.floor(Math.random() * (colors.length - 1))],\n    },\n    {\n      order: 12,\n      startLat: 22.3193,\n      startLng: 114.1694,\n      endLat: 34.0522,\n      endLng: -118.2437,\n      arcAlt: 0.3,\n      color: colors[Math.floor(Math.random() * (colors.length - 1))],\n    },\n    {\n      order: 13,\n      startLat: 52.52,\n      startLng: 13.405,\n      endLat: 22.3193,\n      endLng: 114.1694,\n      arcAlt: 0.3,\n      color: colors[Math.floor(Math.random() * (colors.length - 1))],\n    },\n    {\n      order: 13,\n      startLat: 11.986597,\n      startLng: 8.571831,\n      endLat: 35.6762,\n      endLng: 139.6503,\n      arcAlt: 0.3,\n      color: colors[Math.floor(Math.random() * (colors.length - 1))],\n    },\n    {\n      order: 13,\n      startLat: -22.9068,\n      startLng: -43.1729,\n      endLat: -34.6037,\n      endLng: -58.3816,\n      arcAlt: 0.1,\n      color: colors[Math.floor(Math.random() * (colors.length - 1))],\n    },\n    {\n      order: 14,\n      startLat: -33.936138,\n      startLng: 18.436529,\n      endLat: 21.395643,\n      endLng: 39.883798,\n      arcAlt: 0.3,\n      color: colors[Math.floor(Math.random() * (colors.length - 1))],\n    },\n  ];\n\n  return (\n    // remove dark:bg-black bg-white h-screen md:h-auto  w-full flex-row py-20\n    // change absolute -left-5 top-36, add w-full h-full md:top-40\n    <div className=\"flex items-center justify-center absolute -left-5 top-36 md:top-40 w-full h-full\">\n      {/* remove h-full md:h-[40rem] */}\n      <div className=\"max-w-7xl mx-auto w-full relative overflow-hidden h-96 px-4\">\n        {/* remove these text divs */}\n        {/* <motion.div\n          initial={{\n            opacity: 0,\n            y: 20,\n          }}\n          animate={{\n            opacity: 1,\n            y: 0,\n          }}\n          transition={{\n            duration: 1,\n          }}\n          className=\"div\"\n        >\n          <h2 className=\"text-center text-xl md:text-4xl font-bold text-black dark:text-white\">\n            We sell soap worldwide\n          </h2>\n          <p className=\"text-center text-base md:text-lg font-normal text-neutral-700 dark:text-neutral-200 max-w-md mt-2 mx-auto\">\n            This globe is interactive and customizable. Have fun with it, and\n            don&apos;t forget to share it.\n          </p>\n        </motion.div> */}\n        <div className=\"absolute w-full bottom-0 inset-x-0 h-40 bg-gradient-to-b pointer-events-none select-none from-transparent dark:to-black to-white z-4\" />\n        {/* remove -bottom-20 */}\n        <div className=\"absolute w-full h-72 md:h-full z-100\">\n          <World data={sampleArcs} globeConfig={globeConfig} />\n        </div>\n      </div>\n    </div>\n  );\n};",
    "importStatements": [],
    "codeNoBody": "const GridGlobe = () => {\n//...\n};",
    "originFile": "\\components\\ui\\GridGlobe.tsx"
  },
  {
    "id": "\\components\\ui\\GridGlobe::World",
    "language": "tsx",
    "label": "World",
    "type": "assignment",
    "parent": "C:\\Users\\gmasc\\OneDrive\\Documentos\\CodeGPT\\danielavila.me-main\\components\\ui\\GridGlobe",
    "totalTokens": 27,
    "inDegree": 1,
    "outDegree": 0,
    "code": "const World = dynamic(() => import(\"./Globe\").then((m) => m.World), {\n  ssr: false,\n});",
    "importStatements": [],
    "codeNoBody": "const World = dynamic(() => import(\"./Globe\").then((m) => m.World), {\n  ssr: false,\n});",
    "originFile": "\\components\\ui\\GridGlobe.tsx"
  },
  {
    "id": "\\components\\ui\\GridGlobe",
    "language": "tsx",
    "label": "C:\\Users\\gmasc\\OneDrive\\Documentos\\CodeGPT\\danielavila.me-main\\components\\ui\\GridGlobe.tsx",
    "type": "file",
    "totalTokens": 3738,
    "inDegree": 0,
    "outDegree": 2,
    "code": "\"use client\";\nimport React from \"react\";\nimport { motion } from \"framer-motion\";\nimport dynamic from \"next/dynamic\";\n\nconst World = dynamic(() => import(\"./Globe\").then((m) => m.World), {\n  ssr: false,\n});\n\nconst GridGlobe = () => {\n  const globeConfig = {\n    pointSize: 4,\n    globeColor: \"#062056\",\n    showAtmosphere: true,\n    atmosphereColor: \"#FFFFFF\",\n    atmosphereAltitude: 0.1,\n    emissive: \"#062056\",\n    emissiveIntensity: 0.1,\n    shininess: 0.9,\n    polygonColor: \"rgba(255,255,255,0.7)\",\n    ambientLight: \"#38bdf8\",\n    directionalLeftLight: \"#ffffff\",\n    directionalTopLight: \"#ffffff\",\n    pointLight: \"#ffffff\",\n    arcTime: 1000,\n    arcLength: 0.9,\n    rings: 1,\n    maxRings: 3,\n    initialPosition: { lat: 22.3193, lng: 114.1694 },\n    autoRotate: true,\n    autoRotateSpeed: 0.5,\n  };\n  const colors = [\"#06b6d4\", \"#3b82f6\", \"#6366f1\"];\n  const sampleArcs = [\n    {\n      order: 1,\n      startLat: -19.885592,\n      startLng: -43.951191,\n      endLat: -22.9068,\n      endLng: -43.1729,\n      arcAlt: 0.1,\n      color: colors[Math.floor(Math.random() * (colors.length - 1))],\n    },\n    {\n      order: 1,\n      startLat: 28.6139,\n      startLng: 77.209,\n      endLat: 3.139,\n      endLng: 101.6869,\n      arcAlt: 0.2,\n      color: colors[Math.floor(Math.random() * (colors.length - 1))],\n    },\n    {\n      order: 1,\n      startLat: -19.885592,\n      startLng: -43.951191,\n      endLat: -1.303396,\n      endLng: 36.852443,\n      arcAlt: 0.5,\n      color: colors[Math.floor(Math.random() * (colors.length - 1))],\n    },\n    {\n      order: 2,\n      startLat: 1.3521,\n      startLng: 103.8198,\n      endLat: 35.6762,\n      endLng: 139.6503,\n      arcAlt: 0.2,\n      color: colors[Math.floor(Math.random() * (colors.length - 1))],\n    },\n    {\n      order: 2,\n      startLat: 51.5072,\n      startLng: -0.1276,\n      endLat: 3.139,\n      endLng: 101.6869,\n      arcAlt: 0.3,\n      color: colors[Math.floor(Math.random() * (colors.length - 1))],\n    },\n    {\n      order: 2,\n      startLat: -15.785493,\n      startLng: -47.909029,\n      endLat: 36.162809,\n      endLng: -115.119411,\n      arcAlt: 0.3,\n      color: colors[Math.floor(Math.random() * (colors.length - 1))],\n    },\n    {\n      order: 3,\n      startLat: -33.8688,\n      startLng: 151.2093,\n      endLat: 22.3193,\n      endLng: 114.1694,\n      arcAlt: 0.3,\n      color: colors[Math.floor(Math.random() * (colors.length - 1))],\n    },\n    {\n      order: 3,\n      startLat: 21.3099,\n      startLng: -157.8581,\n      endLat: 40.7128,\n      endLng: -74.006,\n      arcAlt: 0.3,\n      color: colors[Math.floor(Math.random() * (colors.length - 1))],\n    },\n    {\n      order: 3,\n      startLat: -6.2088,\n      startLng: 106.8456,\n      endLat: 51.5072,\n      endLng: -0.1276,\n      arcAlt: 0.3,\n      color: colors[Math.floor(Math.random() * (colors.length - 1))],\n    },\n    {\n      order: 4,\n      startLat: 11.986597,\n      startLng: 8.571831,\n      endLat: -15.595412,\n      endLng: -56.05918,\n      arcAlt: 0.5,\n      color: colors[Math.floor(Math.random() * (colors.length - 1))],\n    },\n    {\n      order: 4,\n      startLat: -34.6037,\n      startLng: -58.3816,\n      endLat: 22.3193,\n      endLng: 114.1694,\n      arcAlt: 0.7,\n      color: colors[Math.floor(Math.random() * (colors.length - 1))],\n    },\n    {\n      order: 4,\n      startLat: 51.5072,\n      startLng: -0.1276,\n      endLat: 48.8566,\n      endLng: -2.3522,\n      arcAlt: 0.1,\n      color: colors[Math.floor(Math.random() * (colors.length - 1))],\n    },\n    {\n      order: 5,\n      startLat: 14.5995,\n      startLng: 120.9842,\n      endLat: 51.5072,\n      endLng: -0.1276,\n      arcAlt: 0.3,\n      color: colors[Math.floor(Math.random() * (colors.length - 1))],\n    },\n    {\n      order: 5,\n      startLat: 1.3521,\n      startLng: 103.8198,\n      endLat: -33.8688,\n      endLng: 151.2093,\n      arcAlt: 0.2,\n      color: colors[Math.floor(Math.random() * (colors.length - 1))],\n    },\n    {\n      order: 5,\n      startLat: 34.0522,\n      startLng: -118.2437,\n      endLat: 48.8566,\n      endLng: -2.3522,\n      arcAlt: 0.2,\n      color: colors[Math.floor(Math.random() * (colors.length - 1))],\n    },\n    {\n      order: 6,\n      startLat: -15.432563,\n      startLng: 28.315853,\n      endLat: 1.094136,\n      endLng: -63.34546,\n      arcAlt: 0.7,\n      color: colors[Math.floor(Math.random() * (colors.length - 1))],\n    },\n    {\n      order: 6,\n      startLat: 37.5665,\n      startLng: 126.978,\n      endLat: 35.6762,\n      endLng: 139.6503,\n      arcAlt: 0.1,\n      color: colors[Math.floor(Math.random() * (colors.length - 1))],\n    },\n    {\n      order: 6,\n      startLat: 22.3193,\n      startLng: 114.1694,\n      endLat: 51.5072,\n      endLng: -0.1276,\n      arcAlt: 0.3,\n      color: colors[Math.floor(Math.random() * (colors.length - 1))],\n    },\n    {\n      order: 7,\n      startLat: -19.885592,\n      startLng: -43.951191,\n      endLat: -15.595412,\n      endLng: -56.05918,\n      arcAlt: 0.1,\n      color: colors[Math.floor(Math.random() * (colors.length - 1))],\n    },\n    {\n      order: 7,\n      startLat: 48.8566,\n      startLng: -2.3522,\n      endLat: 52.52,\n      endLng: 13.405,\n      arcAlt: 0.1,\n      color: colors[Math.floor(Math.random() * (colors.length - 1))],\n    },\n    {\n      order: 7,\n      startLat: 52.52,\n      startLng: 13.405,\n      endLat: 34.0522,\n      endLng: -118.2437,\n      arcAlt: 0.2,\n      color: colors[Math.floor(Math.random() * (colors.length - 1))],\n    },\n    {\n      order: 8,\n      startLat: -8.833221,\n      startLng: 13.264837,\n      endLat: -33.936138,\n      endLng: 18.436529,\n      arcAlt: 0.2,\n      color: colors[Math.floor(Math.random() * (colors.length - 1))],\n    },\n    {\n      order: 8,\n      startLat: 49.2827,\n      startLng: -123.1207,\n      endLat: 52.3676,\n      endLng: 4.9041,\n      arcAlt: 0.2,\n      color: colors[Math.floor(Math.random() * (colors.length - 1))],\n    },\n    {\n      order: 8,\n      startLat: 1.3521,\n      startLng: 103.8198,\n      endLat: 40.7128,\n      endLng: -74.006,\n      arcAlt: 0.5,\n      color: colors[Math.floor(Math.random() * (colors.length - 1))],\n    },\n    {\n      order: 9,\n      startLat: 51.5072,\n      startLng: -0.1276,\n      endLat: 34.0522,\n      endLng: -118.2437,\n      arcAlt: 0.2,\n      color: colors[Math.floor(Math.random() * (colors.length - 1))],\n    },\n    {\n      order: 9,\n      startLat: 22.3193,\n      startLng: 114.1694,\n      endLat: -22.9068,\n      endLng: -43.1729,\n      arcAlt: 0.7,\n      color: colors[Math.floor(Math.random() * (colors.length - 1))],\n    },\n    {\n      order: 9,\n      startLat: 1.3521,\n      startLng: 103.8198,\n      endLat: -34.6037,\n      endLng: -58.3816,\n      arcAlt: 0.5,\n      color: colors[Math.floor(Math.random() * (colors.length - 1))],\n    },\n    {\n      order: 10,\n      startLat: -22.9068,\n      startLng: -43.1729,\n      endLat: 28.6139,\n      endLng: 77.209,\n      arcAlt: 0.7,\n      color: colors[Math.floor(Math.random() * (colors.length - 1))],\n    },\n    {\n      order: 10,\n      startLat: 34.0522,\n      startLng: -118.2437,\n      endLat: 31.2304,\n      endLng: 121.4737,\n      arcAlt: 0.3,\n      color: colors[Math.floor(Math.random() * (colors.length - 1))],\n    },\n    {\n      order: 10,\n      startLat: -6.2088,\n      startLng: 106.8456,\n      endLat: 52.3676,\n      endLng: 4.9041,\n      arcAlt: 0.3,\n      color: colors[Math.floor(Math.random() * (colors.length - 1))],\n    },\n    {\n      order: 11,\n      startLat: 41.9028,\n      startLng: 12.4964,\n      endLat: 34.0522,\n      endLng: -118.2437,\n      arcAlt: 0.2,\n      color: colors[Math.floor(Math.random() * (colors.length - 1))],\n    },\n    {\n      order: 11,\n      startLat: -6.2088,\n      startLng: 106.8456,\n      endLat: 31.2304,\n      endLng: 121.4737,\n      arcAlt: 0.2,\n      color: colors[Math.floor(Math.random() * (colors.length - 1))],\n    },\n    {\n      order: 11,\n      startLat: 22.3193,\n      startLng: 114.1694,\n      endLat: 1.3521,\n      endLng: 103.8198,\n      arcAlt: 0.2,\n      color: colors[Math.floor(Math.random() * (colors.length - 1))],\n    },\n    {\n      order: 12,\n      startLat: 34.0522,\n      startLng: -118.2437,\n      endLat: 37.7749,\n      endLng: -122.4194,\n      arcAlt: 0.1,\n      color: colors[Math.floor(Math.random() * (colors.length - 1))],\n    },\n    {\n      order: 12,\n      startLat: 35.6762,\n      startLng: 139.6503,\n      endLat: 22.3193,\n      endLng: 114.1694,\n      arcAlt: 0.2,\n      color: colors[Math.floor(Math.random() * (colors.length - 1))],\n    },\n    {\n      order: 12,\n      startLat: 22.3193,\n      startLng: 114.1694,\n      endLat: 34.0522,\n      endLng: -118.2437,\n      arcAlt: 0.3,\n      color: colors[Math.floor(Math.random() * (colors.length - 1))],\n    },\n    {\n      order: 13,\n      startLat: 52.52,\n      startLng: 13.405,\n      endLat: 22.3193,\n      endLng: 114.1694,\n      arcAlt: 0.3,\n      color: colors[Math.floor(Math.random() * (colors.length - 1))],\n    },\n    {\n      order: 13,\n      startLat: 11.986597,\n      startLng: 8.571831,\n      endLat: 35.6762,\n      endLng: 139.6503,\n      arcAlt: 0.3,\n      color: colors[Math.floor(Math.random() * (colors.length - 1))],\n    },\n    {\n      order: 13,\n      startLat: -22.9068,\n      startLng: -43.1729,\n      endLat: -34.6037,\n      endLng: -58.3816,\n      arcAlt: 0.1,\n      color: colors[Math.floor(Math.random() * (colors.length - 1))],\n    },\n    {\n      order: 14,\n      startLat: -33.936138,\n      startLng: 18.436529,\n      endLat: 21.395643,\n      endLng: 39.883798,\n      arcAlt: 0.3,\n      color: colors[Math.floor(Math.random() * (colors.length - 1))],\n    },\n  ];\n\n  return (\n    // remove dark:bg-black bg-white h-screen md:h-auto  w-full flex-row py-20\n    // change absolute -left-5 top-36, add w-full h-full md:top-40\n    <div className=\"flex items-center justify-center absolute -left-5 top-36 md:top-40 w-full h-full\">\n      {/* remove h-full md:h-[40rem] */}\n      <div className=\"max-w-7xl mx-auto w-full relative overflow-hidden h-96 px-4\">\n        {/* remove these text divs */}\n        {/* <motion.div\n          initial={{\n            opacity: 0,\n            y: 20,\n          }}\n          animate={{\n            opacity: 1,\n            y: 0,\n          }}\n          transition={{\n            duration: 1,\n          }}\n          className=\"div\"\n        >\n          <h2 className=\"text-center text-xl md:text-4xl font-bold text-black dark:text-white\">\n            We sell soap worldwide\n          </h2>\n          <p className=\"text-center text-base md:text-lg font-normal text-neutral-700 dark:text-neutral-200 max-w-md mt-2 mx-auto\">\n            This globe is interactive and customizable. Have fun with it, and\n            don&apos;t forget to share it.\n          </p>\n        </motion.div> */}\n        <div className=\"absolute w-full bottom-0 inset-x-0 h-40 bg-gradient-to-b pointer-events-none select-none from-transparent dark:to-black to-white z-4\" />\n        {/* remove -bottom-20 */}\n        <div className=\"absolute w-full h-72 md:h-full z-100\">\n          <World data={sampleArcs} globeConfig={globeConfig} />\n        </div>\n      </div>\n    </div>\n  );\n};\nexport default GridGlobe;",
    "importStatements": [
      "import React from \"react\";",
      "import { motion } from \"framer-motion\";",
      "import dynamic from \"next/dynamic\";"
    ],
    "codeNoBody": "\"use client\";\nimport React from \"react\";\nimport { motion } from \"framer-motion\";\nimport dynamic from \"next/dynamic\";\nconst World = dynamic(() => import(\"./Globe\").then((m) => m.World), {\n  ssr: false,\n});\n\nconst GridGlobe = () => {\n//...\n};\nexport default GridGlobe;",
    "originFile": "\\components\\ui\\GridGlobe.tsx"
  },
  {
    "id": "\\components\\ui\\LampEffect::LampContainer",
    "language": "tsx",
    "label": "LampContainer",
    "type": "function",
    "parent": "C:\\Users\\gmasc\\OneDrive\\Documentos\\CodeGPT\\danielavila.me-main\\components\\ui\\LampEffect",
    "totalTokens": 937,
    "inDegree": 1,
    "outDegree": 1,
    "code": "const LampContainer = ({\n  children,\n  className,\n}: {\n  children: React.ReactNode;\n  className?: string;\n}) => {\n  return (\n    <div\n      className={cn(\n        \"relative flex min-h-screen flex-col items-center justify-center overflow-hidde w-full rounded-md z-0\",\n        className\n      )}\n    >\n      <div className=\"relative flex w-full flex-1 scale-y-125 items-center justify-center isolate z-0 \">\n        <motion.div\n          initial={{ opacity: 0.5, width: \"15rem\" }}\n          whileInView={{ opacity: 1, width: \"30rem\" }}\n          transition={{\n            delay: 0.3,\n            duration: 0.8,\n            ease: \"easeInOut\",\n          }}\n          style={{\n            backgroundImage: `conic-gradient(var(--conic-position), var(--tw-gradient-stops))`,\n          }}\n          className=\"absolute inset-auto right-1/2 h-56 overflow-visible w-[30rem] bg-gradient-conic from-cyan-500 via-transparent to-transparent text-white [--conic-position:from_70deg_at_center_top]\"\n        >\n          <div className=\"absolute  w-[100%] left-0 bg-slate-950 h-40 bottom-0 z-20 [mask-image:linear-gradient(to_top,white,transparent)]\" />\n          <div className=\"absolute  w-40 h-[100%] left-0 bg-slate-950  bottom-0 z-20 [mask-image:linear-gradient(to_right,white,transparent)]\" />\n        </motion.div>\n        <motion.div\n          initial={{ opacity: 0.5, width: \"15rem\" }}\n          whileInView={{ opacity: 1, width: \"30rem\" }}\n          transition={{\n            delay: 0.3,\n            duration: 0.8,\n            ease: \"easeInOut\",\n          }}\n          style={{\n            backgroundImage: `conic-gradient(var(--conic-position), var(--tw-gradient-stops))`,\n          }}\n          className=\"absolute inset-auto left-1/2 h-56 w-[30rem] bg-gradient-conic from-transparent via-transparent to-cyan-500 text-white [--conic-position:from_290deg_at_center_top]\"\n        >\n          <div className=\"absolute  w-40 h-[100%] right-0 bg-slate-950  bottom-0 z-20 [mask-image:linear-gradient(to_left,white,transparent)]\" />\n          <div className=\"absolute  w-[100%] right-0 bg-slate-950 h-40 bottom-0 z-20 [mask-image:linear-gradient(to_top,white,transparent)]\" />\n        </motion.div>\n        <div className=\"absolute top-1/2 h-48 w-full translate-y-12 scale-x-150 bg-slate-950 blur-2xl\"></div>\n        <div className=\"absolute top-1/2 z-50 h-48 w-full bg-transparent opacity-10 backdrop-blur-md\"></div>\n        <div className=\"absolute inset-auto z-50 h-36 w-[28rem] -translate-y-1/2 rounded-full bg-cyan-500 opacity-50 blur-3xl\"></div>\n        <motion.div\n          initial={{ width: \"8rem\" }}\n          whileInView={{ width: \"16rem\" }}\n          transition={{\n            delay: 0.3,\n            duration: 0.8,\n            ease: \"easeInOut\",\n          }}\n          className=\"absolute inset-auto z-30 h-36 w-64 -translate-y-[6rem] rounded-full bg-cyan-400 blur-2xl\"\n        ></motion.div>\n        <motion.div\n          initial={{ width: \"15rem\" }}\n          whileInView={{ width: \"30rem\" }}\n          transition={{\n            delay: 0.3,\n            duration: 0.8,\n            ease: \"easeInOut\",\n          }}\n          className=\"absolute inset-auto z-50 h-0.5 w-[30rem] -translate-y-[7rem] bg-cyan-400 \"\n        ></motion.div>\n\n        <div className=\"absolute inset-auto z-40 h-44 w-full -translate-y-[12.5rem] bg-slate-950 \"></div>\n      </div>\n\n      <div className=\"relative z-50 flex -translate-y-80 flex-col items-center px-5\">\n        {children}\n      </div>\n    </div>\n  );\n};",
    "importStatements": [],
    "codeNoBody": "const LampContainer = ({\n  children,\n  className,\n}: {\n  children: React.ReactNode;\n  className?: string;\n}) => {\n       //...\n       };",
    "originFile": "\\components\\ui\\LampEffect.tsx"
  },
  {
    "id": "\\components\\ui\\LampEffect::LampDemo",
    "language": "tsx",
    "label": "LampDemo",
    "type": "function",
    "parent": "C:\\Users\\gmasc\\OneDrive\\Documentos\\CodeGPT\\danielavila.me-main\\components\\ui\\LampEffect",
    "totalTokens": 176,
    "inDegree": 1,
    "outDegree": 0,
    "code": "function LampDemo() {\n  return (\n    <div>\n    <LampContainer>\n      <motion.h1\n        initial={{ opacity: 0.5, y: 100 }}\n        whileInView={{ opacity: 1, y: 0 }}\n        transition={{\n          delay: 0.3,\n          duration: 0.8,\n          ease: \"easeInOut\",\n        }}\n        className=\"mt-8 bg-gradient-to-br from-slate-300 to-slate-500 py-4 bg-clip-text text-center text-4xl font-medium tracking-tight text-transparent md:text-7xl\"\n      >\n        Follow me on social media to stay up to date on <span className=\"text-purple\">programming, technology, and entrepreneurship.</span>\n      </motion.h1>\n    </LampContainer>\n    </div>\n  );\n}",
    "importStatements": [],
    "codeNoBody": "function LampDemo() {\n       //...\n       }",
    "originFile": "\\components\\ui\\LampEffect.tsx"
  },
  {
    "id": "\\components\\ui\\LampEffect",
    "language": "tsx",
    "label": "C:\\Users\\gmasc\\OneDrive\\Documentos\\CodeGPT\\danielavila.me-main\\components\\ui\\LampEffect.tsx",
    "type": "file",
    "totalTokens": 1153,
    "inDegree": 0,
    "outDegree": 2,
    "code": "\"use client\";\nimport React from \"react\";\nimport { motion } from \"framer-motion\";\nimport { cn } from \"@/utils/cn\";\nimport { socialMedia } from '@/data'\n\nexport function LampDemo() {\n  return (\n    <div>\n    <LampContainer>\n      <motion.h1\n        initial={{ opacity: 0.5, y: 100 }}\n        whileInView={{ opacity: 1, y: 0 }}\n        transition={{\n          delay: 0.3,\n          duration: 0.8,\n          ease: \"easeInOut\",\n        }}\n        className=\"mt-8 bg-gradient-to-br from-slate-300 to-slate-500 py-4 bg-clip-text text-center text-4xl font-medium tracking-tight text-transparent md:text-7xl\"\n      >\n        Follow me on social media to stay up to date on <span className=\"text-purple\">programming, technology, and entrepreneurship.</span>\n      </motion.h1>\n    </LampContainer>\n    </div>\n  );\n}\n\nexport const LampContainer = ({\n  children,\n  className,\n}: {\n  children: React.ReactNode;\n  className?: string;\n}) => {\n  return (\n    <div\n      className={cn(\n        \"relative flex min-h-screen flex-col items-center justify-center overflow-hidde w-full rounded-md z-0\",\n        className\n      )}\n    >\n      <div className=\"relative flex w-full flex-1 scale-y-125 items-center justify-center isolate z-0 \">\n        <motion.div\n          initial={{ opacity: 0.5, width: \"15rem\" }}\n          whileInView={{ opacity: 1, width: \"30rem\" }}\n          transition={{\n            delay: 0.3,\n            duration: 0.8,\n            ease: \"easeInOut\",\n          }}\n          style={{\n            backgroundImage: `conic-gradient(var(--conic-position), var(--tw-gradient-stops))`,\n          }}\n          className=\"absolute inset-auto right-1/2 h-56 overflow-visible w-[30rem] bg-gradient-conic from-cyan-500 via-transparent to-transparent text-white [--conic-position:from_70deg_at_center_top]\"\n        >\n          <div className=\"absolute  w-[100%] left-0 bg-slate-950 h-40 bottom-0 z-20 [mask-image:linear-gradient(to_top,white,transparent)]\" />\n          <div className=\"absolute  w-40 h-[100%] left-0 bg-slate-950  bottom-0 z-20 [mask-image:linear-gradient(to_right,white,transparent)]\" />\n        </motion.div>\n        <motion.div\n          initial={{ opacity: 0.5, width: \"15rem\" }}\n          whileInView={{ opacity: 1, width: \"30rem\" }}\n          transition={{\n            delay: 0.3,\n            duration: 0.8,\n            ease: \"easeInOut\",\n          }}\n          style={{\n            backgroundImage: `conic-gradient(var(--conic-position), var(--tw-gradient-stops))`,\n          }}\n          className=\"absolute inset-auto left-1/2 h-56 w-[30rem] bg-gradient-conic from-transparent via-transparent to-cyan-500 text-white [--conic-position:from_290deg_at_center_top]\"\n        >\n          <div className=\"absolute  w-40 h-[100%] right-0 bg-slate-950  bottom-0 z-20 [mask-image:linear-gradient(to_left,white,transparent)]\" />\n          <div className=\"absolute  w-[100%] right-0 bg-slate-950 h-40 bottom-0 z-20 [mask-image:linear-gradient(to_top,white,transparent)]\" />\n        </motion.div>\n        <div className=\"absolute top-1/2 h-48 w-full translate-y-12 scale-x-150 bg-slate-950 blur-2xl\"></div>\n        <div className=\"absolute top-1/2 z-50 h-48 w-full bg-transparent opacity-10 backdrop-blur-md\"></div>\n        <div className=\"absolute inset-auto z-50 h-36 w-[28rem] -translate-y-1/2 rounded-full bg-cyan-500 opacity-50 blur-3xl\"></div>\n        <motion.div\n          initial={{ width: \"8rem\" }}\n          whileInView={{ width: \"16rem\" }}\n          transition={{\n            delay: 0.3,\n            duration: 0.8,\n            ease: \"easeInOut\",\n          }}\n          className=\"absolute inset-auto z-30 h-36 w-64 -translate-y-[6rem] rounded-full bg-cyan-400 blur-2xl\"\n        ></motion.div>\n        <motion.div\n          initial={{ width: \"15rem\" }}\n          whileInView={{ width: \"30rem\" }}\n          transition={{\n            delay: 0.3,\n            duration: 0.8,\n            ease: \"easeInOut\",\n          }}\n          className=\"absolute inset-auto z-50 h-0.5 w-[30rem] -translate-y-[7rem] bg-cyan-400 \"\n        ></motion.div>\n\n        <div className=\"absolute inset-auto z-40 h-44 w-full -translate-y-[12.5rem] bg-slate-950 \"></div>\n      </div>\n\n      <div className=\"relative z-50 flex -translate-y-80 flex-col items-center px-5\">\n        {children}\n      </div>\n    </div>\n  );\n};\n",
    "importStatements": [
      "import React from \"react\";",
      "import { motion } from \"framer-motion\";",
      "import { cn } from \"@/utils/cn\";",
      "import { socialMedia } from '@/data'"
    ],
    "codeNoBody": "\"use client\";\nimport React from \"react\";\nimport { motion } from \"framer-motion\";\nimport { cn } from \"@/utils/cn\";\nimport { socialMedia } from '@/data'\nexport function LampDemo() {\n       //...\n       }\n\nexport const LampContainer = ({\n  children,\n  className,\n}: {\n  children: React.ReactNode;\n  className?: string;\n}) => {\n       //...\n       };",
    "originFile": "\\components\\ui\\LampEffect.tsx"
  },
  {
    "id": "\\components\\ui\\MacbookScroll::AceternityLogo",
    "language": "tsx",
    "label": "AceternityLogo",
    "type": "function",
    "parent": "C:\\Users\\gmasc\\OneDrive\\Documentos\\CodeGPT\\danielavila.me-main\\components\\ui\\MacbookScroll",
    "totalTokens": 177,
    "inDegree": 1,
    "outDegree": 0,
    "code": "const AceternityLogo = () => {\n  return (\n    <svg\n      width=\"66\"\n      height=\"65\"\n      viewBox=\"0 0 66 65\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      className=\"h-3 w-3 text-white\"\n    >\n      <path\n        d=\"M8 8.05571C8 8.05571 54.9009 18.1782 57.8687 30.062C60.8365 41.9458 9.05432 57.4696 9.05432 57.4696\"\n        stroke=\"currentColor\"\n        strokeWidth=\"15\"\n        strokeMiterlimit=\"3.86874\"\n        strokeLinecap=\"round\"\n      />\n    </svg>\n  );\n};",
    "importStatements": [],
    "codeNoBody": "const AceternityLogo = () => {\n//...\n};",
    "originFile": "\\components\\ui\\MacbookScroll.tsx"
  },
  {
    "id": "\\components\\ui\\MacbookScroll::OptionKey",
    "language": "tsx",
    "label": "OptionKey",
    "type": "function",
    "parent": "C:\\Users\\gmasc\\OneDrive\\Documentos\\CodeGPT\\danielavila.me-main\\components\\ui\\MacbookScroll",
    "totalTokens": 207,
    "inDegree": 1,
    "outDegree": 0,
    "code": "const OptionKey = ({ className }: { className: string }) => {\n  return (\n    <svg\n      fill=\"none\"\n      version=\"1.1\"\n      id=\"icon\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 32 32\"\n      className={className}\n    >\n      <rect\n        stroke=\"currentColor\"\n        strokeWidth={2}\n        x=\"18\"\n        y=\"5\"\n        width=\"10\"\n        height=\"2\"\n      />\n      <polygon\n        stroke=\"currentColor\"\n        strokeWidth={2}\n        points=\"10.6,5 4,5 4,7 9.4,7 18.4,27 28,27 28,25 19.6,25 \"\n      />\n      <rect\n        id=\"_Transparent_Rectangle_\"\n        className=\"st0\"\n        width=\"32\"\n        height=\"32\"\n        stroke=\"none\"\n      />\n    </svg>\n  );\n};",
    "importStatements": [],
    "codeNoBody": "const OptionKey = ({ className }: { className: string }) => {\n       //...\n       };",
    "originFile": "\\components\\ui\\MacbookScroll.tsx"
  },
  {
    "id": "\\components\\ui\\MacbookScroll::SpeakerGrid",
    "language": "tsx",
    "label": "SpeakerGrid",
    "type": "function",
    "parent": "C:\\Users\\gmasc\\OneDrive\\Documentos\\CodeGPT\\danielavila.me-main\\components\\ui\\MacbookScroll",
    "totalTokens": 87,
    "inDegree": 1,
    "outDegree": 0,
    "code": "const SpeakerGrid = () => {\n  return (\n    <div\n      className=\"flex px-[0.5px] gap-[2px] mt-2 h-40\"\n      style={{\n        backgroundImage:\n          \"radial-gradient(circle, #08080A 0.5px, transparent 0.5px)\",\n        backgroundSize: \"3px 3px\",\n      }}\n    ></div>\n  );\n};",
    "importStatements": [],
    "codeNoBody": "const SpeakerGrid = () => {\n       //...\n       };",
    "originFile": "\\components\\ui\\MacbookScroll.tsx"
  },
  {
    "id": "\\components\\ui\\MacbookScroll::Row",
    "language": "tsx",
    "label": "Row",
    "type": "function",
    "parent": "C:\\Users\\gmasc\\OneDrive\\Documentos\\CodeGPT\\danielavila.me-main\\components\\ui\\MacbookScroll",
    "totalTokens": 52,
    "inDegree": 1,
    "outDegree": 0,
    "code": "const Row = ({ children }: { children: React.ReactNode }) => {\n  return (\n    <div className=\"flex gap-[2px] mb-[2px] w-full flex-shrink-0\">\n      {children}\n    </div>\n  );\n};",
    "importStatements": [],
    "codeNoBody": "const Row = ({ children }: { children: React.ReactNode }) => {\n       //...\n       };",
    "originFile": "\\components\\ui\\MacbookScroll.tsx"
  },
  {
    "id": "\\components\\ui\\MacbookScroll::KBtn",
    "language": "tsx",
    "label": "KBtn",
    "type": "function",
    "parent": "C:\\Users\\gmasc\\OneDrive\\Documentos\\CodeGPT\\danielavila.me-main\\components\\ui\\MacbookScroll",
    "totalTokens": 259,
    "inDegree": 1,
    "outDegree": 1,
    "code": "const KBtn = ({\n  className,\n  children,\n  childrenClassName,\n  backlit = true,\n}: {\n  className?: string;\n  children?: React.ReactNode;\n  childrenClassName?: string;\n  backlit?: boolean;\n}) => {\n  return (\n    <div\n      className={cn(\n        \"p-[0.5px] rounded-[4px]\",\n        backlit && \"bg-white/[0.2] shadow-xl shadow-white\"\n      )}\n    >\n      <div\n        className={cn(\n          \"h-6 w-6 bg-[#0A090D] rounded-[3.5px] flex items-center justify-center\",\n          className\n        )}\n        style={{\n          boxShadow:\n            \"0px -0.5px 2px 0 #0D0D0F inset, -0.5px 0px 2px 0 #0D0D0F inset\",\n        }}\n      >\n        <div\n          className={cn(\n            \"text-neutral-200 text-[5px] w-full flex justify-center items-center flex-col\",\n            childrenClassName,\n            backlit && \"text-white\"\n          )}\n        >\n          {children}\n        </div>\n      </div>\n    </div>\n  );\n};",
    "importStatements": [],
    "codeNoBody": "const KBtn = ({\n  className,\n  children,\n  childrenClassName,\n  backlit = true,\n}: {\n  className?: string;\n  children?: React.ReactNode;\n  childrenClassName?: string;\n  backlit?: boolean;\n}) => {\n       //...\n       };",
    "originFile": "\\components\\ui\\MacbookScroll.tsx"
  },
  {
    "id": "\\components\\ui\\MacbookScroll::Keypad",
    "language": "tsx",
    "label": "Keypad",
    "type": "function",
    "parent": "C:\\Users\\gmasc\\OneDrive\\Documentos\\CodeGPT\\danielavila.me-main\\components\\ui\\MacbookScroll",
    "totalTokens": 3031,
    "inDegree": 1,
    "outDegree": 0,
    "code": "const Keypad = () => {\n  return (\n    <div className=\"h-full rounded-md bg-[#050505] mx-1 p-1\">\n      {/* First Row */}\n      <Row>\n        <KBtn\n          className=\"w-10 items-end justify-start pl-[4px] pb-[2px]\"\n          childrenClassName=\"items-start\"\n        >\n          esc\n        </KBtn>\n        <KBtn>\n          <IconBrightnessDown className=\"h-[6px] w-[6px]\" />\n          <span className=\"inline-block mt-1\">F1</span>\n        </KBtn>\n\n        <KBtn>\n          <IconBrightnessUp className=\"h-[6px] w-[6px]\" />\n          <span className=\"inline-block mt-1\">F2</span>\n        </KBtn>\n        <KBtn>\n          <IconTable className=\"h-[6px] w-[6px]\" />\n          <span className=\"inline-block mt-1\">F3</span>\n        </KBtn>\n        <KBtn>\n          <IconSearch className=\"h-[6px] w-[6px]\" />\n          <span className=\"inline-block mt-1\">F4</span>\n        </KBtn>\n        <KBtn>\n          <IconMicrophone className=\"h-[6px] w-[6px]\" />\n          <span className=\"inline-block mt-1\">F5</span>\n        </KBtn>\n        <KBtn>\n          <IconMoon className=\"h-[6px] w-[6px]\" />\n          <span className=\"inline-block mt-1\">F6</span>\n        </KBtn>\n        <KBtn>\n          <IconPlayerTrackPrev className=\"h-[6px] w-[6px]\" />\n          <span className=\"inline-block mt-1\">F7</span>\n        </KBtn>\n        <KBtn>\n          <IconPlayerSkipForward className=\"h-[6px] w-[6px]\" />\n          <span className=\"inline-block mt-1\">F8</span>\n        </KBtn>\n        <KBtn>\n          <IconPlayerTrackNext className=\"h-[6px] w-[6px]\" />\n          <span className=\"inline-block mt-1\">F8</span>\n        </KBtn>\n        <KBtn>\n          <IconVolume3 className=\"h-[6px] w-[6px]\" />\n          <span className=\"inline-block mt-1\">F10</span>\n        </KBtn>\n        <KBtn>\n          <IconVolume2 className=\"h-[6px] w-[6px]\" />\n          <span className=\"inline-block mt-1\">F11</span>\n        </KBtn>\n        <KBtn>\n          <IconVolume className=\"h-[6px] w-[6px]\" />\n          <span className=\"inline-block mt-1\">F12</span>\n        </KBtn>\n        <KBtn>\n          <div className=\"h-4 w-4 rounded-full  bg-gradient-to-b from-20% from-neutral-900 via-black via-50% to-neutral-900 to-95% p-px\">\n            <div className=\"bg-black h-full w-full rounded-full\" />\n          </div>\n        </KBtn>\n      </Row>\n\n      {/* Second row */}\n      <Row>\n        <KBtn>\n          <span className=\"block\">~</span>\n          <span className=\"block mt-1\">`</span>\n        </KBtn>\n\n        <KBtn>\n          <span className=\"block \">!</span>\n          <span className=\"block\">1</span>\n        </KBtn>\n        <KBtn>\n          <span className=\"block\">@</span>\n          <span className=\"block\">2</span>\n        </KBtn>\n        <KBtn>\n          <span className=\"block\">#</span>\n          <span className=\"block\">3</span>\n        </KBtn>\n        <KBtn>\n          <span className=\"block\">$</span>\n          <span className=\"block\">4</span>\n        </KBtn>\n        <KBtn>\n          <span className=\"block\">%</span>\n          <span className=\"block\">5</span>\n        </KBtn>\n        <KBtn>\n          <span className=\"block\">^</span>\n          <span className=\"block\">6</span>\n        </KBtn>\n        <KBtn>\n          <span className=\"block\">&</span>\n          <span className=\"block\">7</span>\n        </KBtn>\n        <KBtn>\n          <span className=\"block\">*</span>\n          <span className=\"block\">8</span>\n        </KBtn>\n        <KBtn>\n          <span className=\"block\">(</span>\n          <span className=\"block\">9</span>\n        </KBtn>\n        <KBtn>\n          <span className=\"block\">)</span>\n          <span className=\"block\">0</span>\n        </KBtn>\n        <KBtn>\n          <span className=\"block\">&mdash;</span>\n          <span className=\"block\">_</span>\n        </KBtn>\n        <KBtn>\n          <span className=\"block\">+</span>\n          <span className=\"block\"> = </span>\n        </KBtn>\n        <KBtn\n          className=\"w-10 items-end justify-end pr-[4px] pb-[2px]\"\n          childrenClassName=\"items-end\"\n        >\n          delete\n        </KBtn>\n      </Row>\n\n      {/* Third row */}\n      <Row>\n        <KBtn\n          className=\"w-10 items-end justify-start pl-[4px] pb-[2px]\"\n          childrenClassName=\"items-start\"\n        >\n          tab\n        </KBtn>\n        <KBtn>\n          <span className=\"block\">Q</span>\n        </KBtn>\n\n        <KBtn>\n          <span className=\"block\">W</span>\n        </KBtn>\n        <KBtn>\n          <span className=\"block\">E</span>\n        </KBtn>\n        <KBtn>\n          <span className=\"block\">R</span>\n        </KBtn>\n        <KBtn>\n          <span className=\"block\">T</span>\n        </KBtn>\n        <KBtn>\n          <span className=\"block\">Y</span>\n        </KBtn>\n        <KBtn>\n          <span className=\"block\">U</span>\n        </KBtn>\n        <KBtn>\n          <span className=\"block\">I</span>\n        </KBtn>\n        <KBtn>\n          <span className=\"block\">O</span>\n        </KBtn>\n        <KBtn>\n          <span className=\"block\">P</span>\n        </KBtn>\n        <KBtn>\n          <span className=\"block\">{`{`}</span>\n          <span className=\"block\">{`[`}</span>\n        </KBtn>\n        <KBtn>\n          <span className=\"block\">{`}`}</span>\n          <span className=\"block\">{`]`}</span>\n        </KBtn>\n        <KBtn>\n          <span className=\"block\">{`|`}</span>\n          <span className=\"block\">{`\\\\`}</span>\n        </KBtn>\n      </Row>\n\n      {/* Fourth Row */}\n      <Row>\n        <KBtn\n          className=\"w-[2.8rem] items-end justify-start pl-[4px] pb-[2px]\"\n          childrenClassName=\"items-start\"\n        >\n          caps lock\n        </KBtn>\n        <KBtn>\n          <span className=\"block\">A</span>\n        </KBtn>\n\n        <KBtn>\n          <span className=\"block\">S</span>\n        </KBtn>\n        <KBtn>\n          <span className=\"block\">D</span>\n        </KBtn>\n        <KBtn>\n          <span className=\"block\">F</span>\n        </KBtn>\n        <KBtn>\n          <span className=\"block\">G</span>\n        </KBtn>\n        <KBtn>\n          <span className=\"block\">H</span>\n        </KBtn>\n        <KBtn>\n          <span className=\"block\">J</span>\n        </KBtn>\n        <KBtn>\n          <span className=\"block\">K</span>\n        </KBtn>\n        <KBtn>\n          <span className=\"block\">L</span>\n        </KBtn>\n        <KBtn>\n          <span className=\"block\">{`:`}</span>\n          <span className=\"block\">{`;`}</span>\n        </KBtn>\n        <KBtn>\n          <span className=\"block\">{`\"`}</span>\n          <span className=\"block\">{`'`}</span>\n        </KBtn>\n        <KBtn\n          className=\"w-[2.85rem] items-end justify-end pr-[4px] pb-[2px]\"\n          childrenClassName=\"items-end\"\n        >\n          return\n        </KBtn>\n      </Row>\n\n      {/* Fifth Row */}\n      <Row>\n        <KBtn\n          className=\"w-[3.65rem] items-end justify-start pl-[4px] pb-[2px]\"\n          childrenClassName=\"items-start\"\n        >\n          shift\n        </KBtn>\n        <KBtn>\n          <span className=\"block\">Z</span>\n        </KBtn>\n        <KBtn>\n          <span className=\"block\">X</span>\n        </KBtn>\n        <KBtn>\n          <span className=\"block\">C</span>\n        </KBtn>\n        <KBtn>\n          <span className=\"block\">V</span>\n        </KBtn>\n        <KBtn>\n          <span className=\"block\">B</span>\n        </KBtn>\n        <KBtn>\n          <span className=\"block\">N</span>\n        </KBtn>\n        <KBtn>\n          <span className=\"block\">M</span>\n        </KBtn>\n        <KBtn>\n          <span className=\"block\">{`<`}</span>\n          <span className=\"block\">{`,`}</span>\n        </KBtn>\n        <KBtn>\n          <span className=\"block\">{`>`}</span>\n          <span className=\"block\">{`.`}</span>\n        </KBtn>{\" \"}\n        <KBtn>\n          <span className=\"block\">{`?`}</span>\n          <span className=\"block\">{`/`}</span>\n        </KBtn>\n        <KBtn\n          className=\"w-[3.65rem] items-end justify-end pr-[4px] pb-[2px]\"\n          childrenClassName=\"items-end\"\n        >\n          shift\n        </KBtn>\n      </Row>\n\n      {/* sixth Row */}\n      <Row>\n        <KBtn className=\"\" childrenClassName=\"h-full justify-between py-[4px]\">\n          <div className=\"flex justify-end w-full pr-1\">\n            <span className=\"block\">fn</span>\n          </div>\n          <div className=\"flex justify-start w-full pl-1\">\n            <IconWorld className=\"h-[6px] w-[6px]\" />\n          </div>\n        </KBtn>\n        <KBtn className=\"\" childrenClassName=\"h-full justify-between py-[4px]\">\n          <div className=\"flex justify-end w-full pr-1\">\n            <IconChevronUp className=\"h-[6px] w-[6px]\" />\n          </div>\n          <div className=\"flex justify-start w-full pl-1\">\n            <span className=\"block\">control</span>\n          </div>\n        </KBtn>\n        <KBtn className=\"\" childrenClassName=\"h-full justify-between py-[4px]\">\n          <div className=\"flex justify-end w-full pr-1\">\n            <OptionKey className=\"h-[6px] w-[6px]\" />\n          </div>\n          <div className=\"flex justify-start w-full pl-1\">\n            <span className=\"block\">option</span>\n          </div>\n        </KBtn>\n        <KBtn\n          className=\"w-8\"\n          childrenClassName=\"h-full justify-between py-[4px]\"\n        >\n          <div className=\"flex justify-end w-full pr-1\">\n            <IconCommand className=\"h-[6px] w-[6px]\" />\n          </div>\n          <div className=\"flex justify-start w-full pl-1\">\n            <span className=\"block\">command</span>\n          </div>\n        </KBtn>\n        <KBtn className=\"w-[8.2rem]\"></KBtn>\n        <KBtn\n          className=\"w-8\"\n          childrenClassName=\"h-full justify-between py-[4px]\"\n        >\n          <div className=\"flex justify-start w-full pl-1\">\n            <IconCommand className=\"h-[6px] w-[6px]\" />\n          </div>\n          <div className=\"flex justify-start w-full pl-1\">\n            <span className=\"block\">command</span>\n          </div>\n        </KBtn>\n        <KBtn className=\"\" childrenClassName=\"h-full justify-between py-[4px]\">\n          <div className=\"flex justify-start w-full pl-1\">\n            <OptionKey className=\"h-[6px] w-[6px]\" />\n          </div>\n          <div className=\"flex justify-start w-full pl-1\">\n            <span className=\"block\">option</span>\n          </div>\n        </KBtn>\n        <div className=\"w-[4.9rem] mt-[2px] h-6 p-[0.5px] rounded-[4px] flex flex-col justify-end items-center\">\n          <KBtn className=\"w-6 h-3\">\n            <IconCaretUpFilled className=\"h-[6px] w-[6px]\" />\n          </KBtn>\n          <div className=\"flex\">\n            <KBtn className=\"w-6 h-3\">\n              <IconCaretLeftFilled className=\"h-[6px] w-[6px]\" />\n            </KBtn>\n            <KBtn className=\"w-6 h-3\">\n              <IconCaretDownFilled className=\"h-[6px] w-[6px]\" />\n            </KBtn>\n            <KBtn className=\"w-6 h-3\">\n              <IconCaretRightFilled className=\"h-[6px] w-[6px]\" />\n            </KBtn>\n          </div>\n        </div>\n      </Row>\n    </div>\n  );\n};",
    "importStatements": [],
    "codeNoBody": "const Keypad = () => {\n       //...\n       };",
    "originFile": "\\components\\ui\\MacbookScroll.tsx"
  },
  {
    "id": "\\components\\ui\\MacbookScroll::Trackpad",
    "language": "tsx",
    "label": "Trackpad",
    "type": "function",
    "parent": "C:\\Users\\gmasc\\OneDrive\\Documentos\\CodeGPT\\danielavila.me-main\\components\\ui\\MacbookScroll",
    "totalTokens": 67,
    "inDegree": 1,
    "outDegree": 0,
    "code": "const Trackpad = () => {\n  return (\n    <div\n      className=\"w-[40%] mx-auto h-32  rounded-xl my-1\"\n      style={{\n        boxShadow: \"0px 0px 1px 1px #00000020 inset\",\n      }}\n    ></div>\n  );\n};",
    "importStatements": [],
    "codeNoBody": "const Trackpad = () => {\n       //...\n       };",
    "originFile": "\\components\\ui\\MacbookScroll.tsx"
  },
  {
    "id": "\\components\\ui\\MacbookScroll::Lid",
    "language": "tsx",
    "label": "Lid",
    "type": "function",
    "parent": "C:\\Users\\gmasc\\OneDrive\\Documentos\\CodeGPT\\danielavila.me-main\\components\\ui\\MacbookScroll",
    "totalTokens": 386,
    "inDegree": 1,
    "outDegree": 0,
    "code": "const Lid = ({\n  scaleX,\n  scaleY,\n  rotate,\n  translate,\n  src,\n}: {\n  scaleX: MotionValue<number>;\n  scaleY: MotionValue<number>;\n  rotate: MotionValue<number>;\n  translate: MotionValue<number>;\n  src?: string;\n}) => {\n  return (\n    <div className=\"relative [perspective:800px]\">\n      <div\n        style={{\n          transform: \"perspective(800px) rotateX(-25deg) translateZ(0px)\",\n          transformOrigin: \"bottom\",\n          transformStyle: \"preserve-3d\",\n        }}\n        className=\"h-[12rem] w-[32rem] bg-[#010101] rounded-2xl p-2 relative\"\n      >\n        <div\n          style={{\n            boxShadow: \"0px 2px 0px 2px var(--neutral-900) inset\",\n          }}\n          className=\"absolute inset-0 bg-[#010101] rounded-lg flex items-center justify-center\"\n        >\n          <span className=\"text-white\">\n            <AceternityLogo />\n          </span>\n        </div>\n      </div>\n      <motion.div\n        style={{\n          scaleX: scaleX,\n          scaleY: scaleY,\n          rotateX: rotate,\n          translateY: translate,\n          transformStyle: \"preserve-3d\",\n          transformOrigin: \"top\",\n        }}\n        className=\"h-96 w-[32rem] absolute inset-0 bg-[#010101] rounded-2xl p-2\"\n      >\n        <div className=\"absolute inset-0 bg-[#272729] rounded-lg\" />\n        <Image\n          src={src as string}\n          alt=\"aceternity logo\"\n          fill\n          className=\"object-cover object-left-top absolute rounded-lg inset-0 h-full w-full\"\n        />\n      </motion.div>\n    </div>\n  );\n};",
    "importStatements": [],
    "codeNoBody": "const Lid = ({\n  scaleX,\n  scaleY,\n  rotate,\n  translate,\n  src,\n}: {\n  scaleX: MotionValue<number>;\n  scaleY: MotionValue<number>;\n  rotate: MotionValue<number>;\n  translate: MotionValue<number>;\n  src?: string;\n}) => {\n       //...\n       };",
    "originFile": "\\components\\ui\\MacbookScroll.tsx"
  },
  {
    "id": "\\components\\ui\\MacbookScroll::MacbookScroll",
    "language": "tsx",
    "label": "MacbookScroll",
    "type": "function",
    "parent": "C:\\Users\\gmasc\\OneDrive\\Documentos\\CodeGPT\\danielavila.me-main\\components\\ui\\MacbookScroll",
    "totalTokens": 826,
    "inDegree": 1,
    "outDegree": 0,
    "code": "const MacbookScroll = ({\n  src,\n  showGradient,\n  title,\n  badge,\n}: {\n  src?: string;\n  showGradient?: boolean;\n  title?: string | React.ReactNode;\n  badge?: React.ReactNode;\n}) => {\n  const ref = useRef<HTMLDivElement>(null);\n  const { scrollYProgress } = useScroll({\n    target: ref,\n    offset: [\"start start\", \"end start\"],\n  });\n\n  const [isMobile, setIsMobile] = useState(false);\n\n  useEffect(() => {\n    if (window && window.innerWidth < 768) {\n      setIsMobile(true);\n    }\n  }, []);\n\n  const scaleX = useTransform(\n    scrollYProgress,\n    [0, 0.3],\n    [1.2, isMobile ? 1 : 1.5]\n  );\n  const scaleY = useTransform(\n    scrollYProgress,\n    [0, 0.3],\n    [0.6, isMobile ? 1 : 1.5]\n  );\n  const translate = useTransform(scrollYProgress, [0, 1], [0, 1500]);\n  const rotate = useTransform(scrollYProgress, [0.1, 0.12, 0.3], [-28, -28, 0]);\n  const textTransform = useTransform(scrollYProgress, [0, 0.3], [0, 100]);\n  const textOpacity = useTransform(scrollYProgress, [0, 0.2], [1, 0]);\n\n  return (\n    <div\n      ref={ref}\n      className=\"min-h-[200vh]  flex flex-col items-center py-0 md:py-80 justify-start flex-shrink-0 [perspective:800px] transform md:scale-100  scale-[0.35] sm:scale-50\"\n    >\n      <motion.h2\n        style={{\n          translateY: textTransform,\n          opacity: textOpacity,\n        }}\n        className=\"dark:text-white text-neutral-800 text-3xl font-bold mb-20 text-center\"\n      >\n        {title || (\n          <span>\n            This Macbook is built with Tailwindcss. <br /> No kidding.\n          </span>\n        )}\n      </motion.h2>\n      {/* Lid */}\n      <Lid\n        src={src}\n        scaleX={scaleX}\n        scaleY={scaleY}\n        rotate={rotate}\n        translate={translate}\n      />\n      {/* Base area */}\n      <div className=\"h-[22rem] w-[32rem] bg-gray-200 dark:bg-[#272729] rounded-2xl overflow-hidden relative -z-10\">\n        {/* above keyboard bar */}\n        <div className=\"h-10 w-full relative\">\n          <div className=\"absolute inset-x-0 mx-auto w-[80%] h-4 bg-[#050505]\" />\n        </div>\n        <div className=\"flex relative\">\n          <div className=\"mx-auto w-[10%] overflow-hidden  h-full\">\n            <SpeakerGrid />\n          </div>\n          <div className=\"mx-auto w-[80%] h-full\">\n            <Keypad />\n          </div>\n          <div className=\"mx-auto w-[10%] overflow-hidden  h-full\">\n            <SpeakerGrid />\n          </div>\n        </div>\n        <Trackpad />\n        <div className=\"h-2 w-20 mx-auto inset-x-0 absolute bottom-0 bg-gradient-to-t from-[#272729] to-[#050505] rounded-tr-3xl rounded-tl-3xl\" />\n        {showGradient && (\n          <div className=\"h-40 w-full absolute bottom-0 inset-x-0 bg-gradient-to-t dark:from-black from-white via-white dark:via-black to-transparent z-50\"></div>\n        )}\n        {badge && <div className=\"absolute bottom-4 left-4\">{badge}</div>}\n      </div>\n    </div>\n  );\n};",
    "importStatements": [],
    "codeNoBody": "const MacbookScroll = ({\n  src,\n  showGradient,\n  title,\n  badge,\n}: {\n  src?: string;\n  showGradient?: boolean;\n  title?: string | React.ReactNode;\n  badge?: React.ReactNode;\n}) => {\n       //...\n       };",
    "originFile": "\\components\\ui\\MacbookScroll.tsx"
  },
  {
    "id": "\\components\\ui\\MacbookScroll",
    "language": "tsx",
    "label": "C:\\Users\\gmasc\\OneDrive\\Documentos\\CodeGPT\\danielavila.me-main\\components\\ui\\MacbookScroll.tsx",
    "type": "file",
    "totalTokens": 5306,
    "inDegree": 0,
    "outDegree": 9,
    "code": "\"use client\";\nimport React, { useEffect, useMemo, useRef, useState } from \"react\";\nimport { MotionValue, motion, useScroll, useTransform } from \"framer-motion\";\nimport { cn } from \"@/utils/cn\";\nimport {\n  IconBrightnessDown,\n  IconBrightnessUp,\n  IconCaretRightFilled,\n  IconCaretUpFilled,\n  IconChevronUp,\n  IconMicrophone,\n  IconMoon,\n  IconPlayerSkipForward,\n  IconPlayerTrackNext,\n  IconPlayerTrackPrev,\n  IconTable,\n  IconVolume,\n  IconVolume2,\n  IconVolume3,\n} from \"@tabler/icons-react\";\nimport { IconSearch } from \"@tabler/icons-react\";\nimport { IconWorld } from \"@tabler/icons-react\";\nimport { IconCommand } from \"@tabler/icons-react\";\nimport { IconCaretLeftFilled } from \"@tabler/icons-react\";\nimport { IconCaretDownFilled } from \"@tabler/icons-react\";\nimport Image from \"next/image\";\n\nexport const MacbookScroll = ({\n  src,\n  showGradient,\n  title,\n  badge,\n}: {\n  src?: string;\n  showGradient?: boolean;\n  title?: string | React.ReactNode;\n  badge?: React.ReactNode;\n}) => {\n  const ref = useRef<HTMLDivElement>(null);\n  const { scrollYProgress } = useScroll({\n    target: ref,\n    offset: [\"start start\", \"end start\"],\n  });\n\n  const [isMobile, setIsMobile] = useState(false);\n\n  useEffect(() => {\n    if (window && window.innerWidth < 768) {\n      setIsMobile(true);\n    }\n  }, []);\n\n  const scaleX = useTransform(\n    scrollYProgress,\n    [0, 0.3],\n    [1.2, isMobile ? 1 : 1.5]\n  );\n  const scaleY = useTransform(\n    scrollYProgress,\n    [0, 0.3],\n    [0.6, isMobile ? 1 : 1.5]\n  );\n  const translate = useTransform(scrollYProgress, [0, 1], [0, 1500]);\n  const rotate = useTransform(scrollYProgress, [0.1, 0.12, 0.3], [-28, -28, 0]);\n  const textTransform = useTransform(scrollYProgress, [0, 0.3], [0, 100]);\n  const textOpacity = useTransform(scrollYProgress, [0, 0.2], [1, 0]);\n\n  return (\n    <div\n      ref={ref}\n      className=\"min-h-[200vh]  flex flex-col items-center py-0 md:py-80 justify-start flex-shrink-0 [perspective:800px] transform md:scale-100  scale-[0.35] sm:scale-50\"\n    >\n      <motion.h2\n        style={{\n          translateY: textTransform,\n          opacity: textOpacity,\n        }}\n        className=\"dark:text-white text-neutral-800 text-3xl font-bold mb-20 text-center\"\n      >\n        {title || (\n          <span>\n            This Macbook is built with Tailwindcss. <br /> No kidding.\n          </span>\n        )}\n      </motion.h2>\n      {/* Lid */}\n      <Lid\n        src={src}\n        scaleX={scaleX}\n        scaleY={scaleY}\n        rotate={rotate}\n        translate={translate}\n      />\n      {/* Base area */}\n      <div className=\"h-[22rem] w-[32rem] bg-gray-200 dark:bg-[#272729] rounded-2xl overflow-hidden relative -z-10\">\n        {/* above keyboard bar */}\n        <div className=\"h-10 w-full relative\">\n          <div className=\"absolute inset-x-0 mx-auto w-[80%] h-4 bg-[#050505]\" />\n        </div>\n        <div className=\"flex relative\">\n          <div className=\"mx-auto w-[10%] overflow-hidden  h-full\">\n            <SpeakerGrid />\n          </div>\n          <div className=\"mx-auto w-[80%] h-full\">\n            <Keypad />\n          </div>\n          <div className=\"mx-auto w-[10%] overflow-hidden  h-full\">\n            <SpeakerGrid />\n          </div>\n        </div>\n        <Trackpad />\n        <div className=\"h-2 w-20 mx-auto inset-x-0 absolute bottom-0 bg-gradient-to-t from-[#272729] to-[#050505] rounded-tr-3xl rounded-tl-3xl\" />\n        {showGradient && (\n          <div className=\"h-40 w-full absolute bottom-0 inset-x-0 bg-gradient-to-t dark:from-black from-white via-white dark:via-black to-transparent z-50\"></div>\n        )}\n        {badge && <div className=\"absolute bottom-4 left-4\">{badge}</div>}\n      </div>\n    </div>\n  );\n};\n\nexport const Lid = ({\n  scaleX,\n  scaleY,\n  rotate,\n  translate,\n  src,\n}: {\n  scaleX: MotionValue<number>;\n  scaleY: MotionValue<number>;\n  rotate: MotionValue<number>;\n  translate: MotionValue<number>;\n  src?: string;\n}) => {\n  return (\n    <div className=\"relative [perspective:800px]\">\n      <div\n        style={{\n          transform: \"perspective(800px) rotateX(-25deg) translateZ(0px)\",\n          transformOrigin: \"bottom\",\n          transformStyle: \"preserve-3d\",\n        }}\n        className=\"h-[12rem] w-[32rem] bg-[#010101] rounded-2xl p-2 relative\"\n      >\n        <div\n          style={{\n            boxShadow: \"0px 2px 0px 2px var(--neutral-900) inset\",\n          }}\n          className=\"absolute inset-0 bg-[#010101] rounded-lg flex items-center justify-center\"\n        >\n          <span className=\"text-white\">\n            <AceternityLogo />\n          </span>\n        </div>\n      </div>\n      <motion.div\n        style={{\n          scaleX: scaleX,\n          scaleY: scaleY,\n          rotateX: rotate,\n          translateY: translate,\n          transformStyle: \"preserve-3d\",\n          transformOrigin: \"top\",\n        }}\n        className=\"h-96 w-[32rem] absolute inset-0 bg-[#010101] rounded-2xl p-2\"\n      >\n        <div className=\"absolute inset-0 bg-[#272729] rounded-lg\" />\n        <Image\n          src={src as string}\n          alt=\"aceternity logo\"\n          fill\n          className=\"object-cover object-left-top absolute rounded-lg inset-0 h-full w-full\"\n        />\n      </motion.div>\n    </div>\n  );\n};\n\nexport const Trackpad = () => {\n  return (\n    <div\n      className=\"w-[40%] mx-auto h-32  rounded-xl my-1\"\n      style={{\n        boxShadow: \"0px 0px 1px 1px #00000020 inset\",\n      }}\n    ></div>\n  );\n};\n\nexport const Keypad = () => {\n  return (\n    <div className=\"h-full rounded-md bg-[#050505] mx-1 p-1\">\n      {/* First Row */}\n      <Row>\n        <KBtn\n          className=\"w-10 items-end justify-start pl-[4px] pb-[2px]\"\n          childrenClassName=\"items-start\"\n        >\n          esc\n        </KBtn>\n        <KBtn>\n          <IconBrightnessDown className=\"h-[6px] w-[6px]\" />\n          <span className=\"inline-block mt-1\">F1</span>\n        </KBtn>\n\n        <KBtn>\n          <IconBrightnessUp className=\"h-[6px] w-[6px]\" />\n          <span className=\"inline-block mt-1\">F2</span>\n        </KBtn>\n        <KBtn>\n          <IconTable className=\"h-[6px] w-[6px]\" />\n          <span className=\"inline-block mt-1\">F3</span>\n        </KBtn>\n        <KBtn>\n          <IconSearch className=\"h-[6px] w-[6px]\" />\n          <span className=\"inline-block mt-1\">F4</span>\n        </KBtn>\n        <KBtn>\n          <IconMicrophone className=\"h-[6px] w-[6px]\" />\n          <span className=\"inline-block mt-1\">F5</span>\n        </KBtn>\n        <KBtn>\n          <IconMoon className=\"h-[6px] w-[6px]\" />\n          <span className=\"inline-block mt-1\">F6</span>\n        </KBtn>\n        <KBtn>\n          <IconPlayerTrackPrev className=\"h-[6px] w-[6px]\" />\n          <span className=\"inline-block mt-1\">F7</span>\n        </KBtn>\n        <KBtn>\n          <IconPlayerSkipForward className=\"h-[6px] w-[6px]\" />\n          <span className=\"inline-block mt-1\">F8</span>\n        </KBtn>\n        <KBtn>\n          <IconPlayerTrackNext className=\"h-[6px] w-[6px]\" />\n          <span className=\"inline-block mt-1\">F8</span>\n        </KBtn>\n        <KBtn>\n          <IconVolume3 className=\"h-[6px] w-[6px]\" />\n          <span className=\"inline-block mt-1\">F10</span>\n        </KBtn>\n        <KBtn>\n          <IconVolume2 className=\"h-[6px] w-[6px]\" />\n          <span className=\"inline-block mt-1\">F11</span>\n        </KBtn>\n        <KBtn>\n          <IconVolume className=\"h-[6px] w-[6px]\" />\n          <span className=\"inline-block mt-1\">F12</span>\n        </KBtn>\n        <KBtn>\n          <div className=\"h-4 w-4 rounded-full  bg-gradient-to-b from-20% from-neutral-900 via-black via-50% to-neutral-900 to-95% p-px\">\n            <div className=\"bg-black h-full w-full rounded-full\" />\n          </div>\n        </KBtn>\n      </Row>\n\n      {/* Second row */}\n      <Row>\n        <KBtn>\n          <span className=\"block\">~</span>\n          <span className=\"block mt-1\">`</span>\n        </KBtn>\n\n        <KBtn>\n          <span className=\"block \">!</span>\n          <span className=\"block\">1</span>\n        </KBtn>\n        <KBtn>\n          <span className=\"block\">@</span>\n          <span className=\"block\">2</span>\n        </KBtn>\n        <KBtn>\n          <span className=\"block\">#</span>\n          <span className=\"block\">3</span>\n        </KBtn>\n        <KBtn>\n          <span className=\"block\">$</span>\n          <span className=\"block\">4</span>\n        </KBtn>\n        <KBtn>\n          <span className=\"block\">%</span>\n          <span className=\"block\">5</span>\n        </KBtn>\n        <KBtn>\n          <span className=\"block\">^</span>\n          <span className=\"block\">6</span>\n        </KBtn>\n        <KBtn>\n          <span className=\"block\">&</span>\n          <span className=\"block\">7</span>\n        </KBtn>\n        <KBtn>\n          <span className=\"block\">*</span>\n          <span className=\"block\">8</span>\n        </KBtn>\n        <KBtn>\n          <span className=\"block\">(</span>\n          <span className=\"block\">9</span>\n        </KBtn>\n        <KBtn>\n          <span className=\"block\">)</span>\n          <span className=\"block\">0</span>\n        </KBtn>\n        <KBtn>\n          <span className=\"block\">&mdash;</span>\n          <span className=\"block\">_</span>\n        </KBtn>\n        <KBtn>\n          <span className=\"block\">+</span>\n          <span className=\"block\"> = </span>\n        </KBtn>\n        <KBtn\n          className=\"w-10 items-end justify-end pr-[4px] pb-[2px]\"\n          childrenClassName=\"items-end\"\n        >\n          delete\n        </KBtn>\n      </Row>\n\n      {/* Third row */}\n      <Row>\n        <KBtn\n          className=\"w-10 items-end justify-start pl-[4px] pb-[2px]\"\n          childrenClassName=\"items-start\"\n        >\n          tab\n        </KBtn>\n        <KBtn>\n          <span className=\"block\">Q</span>\n        </KBtn>\n\n        <KBtn>\n          <span className=\"block\">W</span>\n        </KBtn>\n        <KBtn>\n          <span className=\"block\">E</span>\n        </KBtn>\n        <KBtn>\n          <span className=\"block\">R</span>\n        </KBtn>\n        <KBtn>\n          <span className=\"block\">T</span>\n        </KBtn>\n        <KBtn>\n          <span className=\"block\">Y</span>\n        </KBtn>\n        <KBtn>\n          <span className=\"block\">U</span>\n        </KBtn>\n        <KBtn>\n          <span className=\"block\">I</span>\n        </KBtn>\n        <KBtn>\n          <span className=\"block\">O</span>\n        </KBtn>\n        <KBtn>\n          <span className=\"block\">P</span>\n        </KBtn>\n        <KBtn>\n          <span className=\"block\">{`{`}</span>\n          <span className=\"block\">{`[`}</span>\n        </KBtn>\n        <KBtn>\n          <span className=\"block\">{`}`}</span>\n          <span className=\"block\">{`]`}</span>\n        </KBtn>\n        <KBtn>\n          <span className=\"block\">{`|`}</span>\n          <span className=\"block\">{`\\\\`}</span>\n        </KBtn>\n      </Row>\n\n      {/* Fourth Row */}\n      <Row>\n        <KBtn\n          className=\"w-[2.8rem] items-end justify-start pl-[4px] pb-[2px]\"\n          childrenClassName=\"items-start\"\n        >\n          caps lock\n        </KBtn>\n        <KBtn>\n          <span className=\"block\">A</span>\n        </KBtn>\n\n        <KBtn>\n          <span className=\"block\">S</span>\n        </KBtn>\n        <KBtn>\n          <span className=\"block\">D</span>\n        </KBtn>\n        <KBtn>\n          <span className=\"block\">F</span>\n        </KBtn>\n        <KBtn>\n          <span className=\"block\">G</span>\n        </KBtn>\n        <KBtn>\n          <span className=\"block\">H</span>\n        </KBtn>\n        <KBtn>\n          <span className=\"block\">J</span>\n        </KBtn>\n        <KBtn>\n          <span className=\"block\">K</span>\n        </KBtn>\n        <KBtn>\n          <span className=\"block\">L</span>\n        </KBtn>\n        <KBtn>\n          <span className=\"block\">{`:`}</span>\n          <span className=\"block\">{`;`}</span>\n        </KBtn>\n        <KBtn>\n          <span className=\"block\">{`\"`}</span>\n          <span className=\"block\">{`'`}</span>\n        </KBtn>\n        <KBtn\n          className=\"w-[2.85rem] items-end justify-end pr-[4px] pb-[2px]\"\n          childrenClassName=\"items-end\"\n        >\n          return\n        </KBtn>\n      </Row>\n\n      {/* Fifth Row */}\n      <Row>\n        <KBtn\n          className=\"w-[3.65rem] items-end justify-start pl-[4px] pb-[2px]\"\n          childrenClassName=\"items-start\"\n        >\n          shift\n        </KBtn>\n        <KBtn>\n          <span className=\"block\">Z</span>\n        </KBtn>\n        <KBtn>\n          <span className=\"block\">X</span>\n        </KBtn>\n        <KBtn>\n          <span className=\"block\">C</span>\n        </KBtn>\n        <KBtn>\n          <span className=\"block\">V</span>\n        </KBtn>\n        <KBtn>\n          <span className=\"block\">B</span>\n        </KBtn>\n        <KBtn>\n          <span className=\"block\">N</span>\n        </KBtn>\n        <KBtn>\n          <span className=\"block\">M</span>\n        </KBtn>\n        <KBtn>\n          <span className=\"block\">{`<`}</span>\n          <span className=\"block\">{`,`}</span>\n        </KBtn>\n        <KBtn>\n          <span className=\"block\">{`>`}</span>\n          <span className=\"block\">{`.`}</span>\n        </KBtn>{\" \"}\n        <KBtn>\n          <span className=\"block\">{`?`}</span>\n          <span className=\"block\">{`/`}</span>\n        </KBtn>\n        <KBtn\n          className=\"w-[3.65rem] items-end justify-end pr-[4px] pb-[2px]\"\n          childrenClassName=\"items-end\"\n        >\n          shift\n        </KBtn>\n      </Row>\n\n      {/* sixth Row */}\n      <Row>\n        <KBtn className=\"\" childrenClassName=\"h-full justify-between py-[4px]\">\n          <div className=\"flex justify-end w-full pr-1\">\n            <span className=\"block\">fn</span>\n          </div>\n          <div className=\"flex justify-start w-full pl-1\">\n            <IconWorld className=\"h-[6px] w-[6px]\" />\n          </div>\n        </KBtn>\n        <KBtn className=\"\" childrenClassName=\"h-full justify-between py-[4px]\">\n          <div className=\"flex justify-end w-full pr-1\">\n            <IconChevronUp className=\"h-[6px] w-[6px]\" />\n          </div>\n          <div className=\"flex justify-start w-full pl-1\">\n            <span className=\"block\">control</span>\n          </div>\n        </KBtn>\n        <KBtn className=\"\" childrenClassName=\"h-full justify-between py-[4px]\">\n          <div className=\"flex justify-end w-full pr-1\">\n            <OptionKey className=\"h-[6px] w-[6px]\" />\n          </div>\n          <div className=\"flex justify-start w-full pl-1\">\n            <span className=\"block\">option</span>\n          </div>\n        </KBtn>\n        <KBtn\n          className=\"w-8\"\n          childrenClassName=\"h-full justify-between py-[4px]\"\n        >\n          <div className=\"flex justify-end w-full pr-1\">\n            <IconCommand className=\"h-[6px] w-[6px]\" />\n          </div>\n          <div className=\"flex justify-start w-full pl-1\">\n            <span className=\"block\">command</span>\n          </div>\n        </KBtn>\n        <KBtn className=\"w-[8.2rem]\"></KBtn>\n        <KBtn\n          className=\"w-8\"\n          childrenClassName=\"h-full justify-between py-[4px]\"\n        >\n          <div className=\"flex justify-start w-full pl-1\">\n            <IconCommand className=\"h-[6px] w-[6px]\" />\n          </div>\n          <div className=\"flex justify-start w-full pl-1\">\n            <span className=\"block\">command</span>\n          </div>\n        </KBtn>\n        <KBtn className=\"\" childrenClassName=\"h-full justify-between py-[4px]\">\n          <div className=\"flex justify-start w-full pl-1\">\n            <OptionKey className=\"h-[6px] w-[6px]\" />\n          </div>\n          <div className=\"flex justify-start w-full pl-1\">\n            <span className=\"block\">option</span>\n          </div>\n        </KBtn>\n        <div className=\"w-[4.9rem] mt-[2px] h-6 p-[0.5px] rounded-[4px] flex flex-col justify-end items-center\">\n          <KBtn className=\"w-6 h-3\">\n            <IconCaretUpFilled className=\"h-[6px] w-[6px]\" />\n          </KBtn>\n          <div className=\"flex\">\n            <KBtn className=\"w-6 h-3\">\n              <IconCaretLeftFilled className=\"h-[6px] w-[6px]\" />\n            </KBtn>\n            <KBtn className=\"w-6 h-3\">\n              <IconCaretDownFilled className=\"h-[6px] w-[6px]\" />\n            </KBtn>\n            <KBtn className=\"w-6 h-3\">\n              <IconCaretRightFilled className=\"h-[6px] w-[6px]\" />\n            </KBtn>\n          </div>\n        </div>\n      </Row>\n    </div>\n  );\n};\nexport const KBtn = ({\n  className,\n  children,\n  childrenClassName,\n  backlit = true,\n}: {\n  className?: string;\n  children?: React.ReactNode;\n  childrenClassName?: string;\n  backlit?: boolean;\n}) => {\n  return (\n    <div\n      className={cn(\n        \"p-[0.5px] rounded-[4px]\",\n        backlit && \"bg-white/[0.2] shadow-xl shadow-white\"\n      )}\n    >\n      <div\n        className={cn(\n          \"h-6 w-6 bg-[#0A090D] rounded-[3.5px] flex items-center justify-center\",\n          className\n        )}\n        style={{\n          boxShadow:\n            \"0px -0.5px 2px 0 #0D0D0F inset, -0.5px 0px 2px 0 #0D0D0F inset\",\n        }}\n      >\n        <div\n          className={cn(\n            \"text-neutral-200 text-[5px] w-full flex justify-center items-center flex-col\",\n            childrenClassName,\n            backlit && \"text-white\"\n          )}\n        >\n          {children}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport const Row = ({ children }: { children: React.ReactNode }) => {\n  return (\n    <div className=\"flex gap-[2px] mb-[2px] w-full flex-shrink-0\">\n      {children}\n    </div>\n  );\n};\n\nexport const SpeakerGrid = () => {\n  return (\n    <div\n      className=\"flex px-[0.5px] gap-[2px] mt-2 h-40\"\n      style={{\n        backgroundImage:\n          \"radial-gradient(circle, #08080A 0.5px, transparent 0.5px)\",\n        backgroundSize: \"3px 3px\",\n      }}\n    ></div>\n  );\n};\n\nexport const OptionKey = ({ className }: { className: string }) => {\n  return (\n    <svg\n      fill=\"none\"\n      version=\"1.1\"\n      id=\"icon\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 32 32\"\n      className={className}\n    >\n      <rect\n        stroke=\"currentColor\"\n        strokeWidth={2}\n        x=\"18\"\n        y=\"5\"\n        width=\"10\"\n        height=\"2\"\n      />\n      <polygon\n        stroke=\"currentColor\"\n        strokeWidth={2}\n        points=\"10.6,5 4,5 4,7 9.4,7 18.4,27 28,27 28,25 19.6,25 \"\n      />\n      <rect\n        id=\"_Transparent_Rectangle_\"\n        className=\"st0\"\n        width=\"32\"\n        height=\"32\"\n        stroke=\"none\"\n      />\n    </svg>\n  );\n};\n\nconst AceternityLogo = () => {\n  return (\n    <svg\n      width=\"66\"\n      height=\"65\"\n      viewBox=\"0 0 66 65\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      className=\"h-3 w-3 text-white\"\n    >\n      <path\n        d=\"M8 8.05571C8 8.05571 54.9009 18.1782 57.8687 30.062C60.8365 41.9458 9.05432 57.4696 9.05432 57.4696\"\n        stroke=\"currentColor\"\n        strokeWidth=\"15\"\n        strokeMiterlimit=\"3.86874\"\n        strokeLinecap=\"round\"\n      />\n    </svg>\n  );\n};\n",
    "importStatements": [
      "import React, { useEffect, useMemo, useRef, useState } from \"react\";",
      "import { MotionValue, motion, useScroll, useTransform } from \"framer-motion\";",
      "import { cn } from \"@/utils/cn\";",
      "import {\n  IconBrightnessDown,\n  IconBrightnessUp,\n  IconCaretRightFilled,\n  IconCaretUpFilled,\n  IconChevronUp,\n  IconMicrophone,\n  IconMoon,\n  IconPlayerSkipForward,\n  IconPlayerTrackNext,\n  IconPlayerTrackPrev,\n  IconTable,\n  IconVolume,\n  IconVolume2,\n  IconVolume3,\n} from \"@tabler/icons-react\";",
      "import { IconSearch } from \"@tabler/icons-react\";",
      "import { IconWorld } from \"@tabler/icons-react\";",
      "import { IconCommand } from \"@tabler/icons-react\";",
      "import { IconCaretLeftFilled } from \"@tabler/icons-react\";",
      "import { IconCaretDownFilled } from \"@tabler/icons-react\";",
      "import Image from \"next/image\";"
    ],
    "codeNoBody": "\"use client\";\nimport React, { useEffect, useMemo, useRef, useState } from \"react\";\nimport { MotionValue, motion, useScroll, useTransform } from \"framer-motion\";\nimport { cn } from \"@/utils/cn\";\nimport {\n  IconBrightnessDown,\n  IconBrightnessUp,\n  IconCaretRightFilled,\n  IconCaretUpFilled,\n  IconChevronUp,\n  IconMicrophone,\n  IconMoon,\n  IconPlayerSkipForward,\n  IconPlayerTrackNext,\n  IconPlayerTrackPrev,\n  IconTable,\n  IconVolume,\n  IconVolume2,\n  IconVolume3,\n} from \"@tabler/icons-react\";\nimport { IconSearch } from \"@tabler/icons-react\";\nimport { IconWorld } from \"@tabler/icons-react\";\nimport { IconCommand } from \"@tabler/icons-react\";\nimport { IconCaretLeftFilled } from \"@tabler/icons-react\";\nimport { IconCaretDownFilled } from \"@tabler/icons-react\";\nimport Image from \"next/image\";\nexport const MacbookScroll = ({\n  src,\n  showGradient,\n  title,\n  badge,\n}: {\n  src?: string;\n  showGradient?: boolean;\n  title?: string | React.ReactNode;\n  badge?: React.ReactNode;\n}) => {\n       //...\n       };\n\nexport const Lid = ({\n  scaleX,\n  scaleY,\n  rotate,\n  translate,\n  src,\n}: {\n  scaleX: MotionValue<number>;\n  scaleY: MotionValue<number>;\n  rotate: MotionValue<number>;\n  translate: MotionValue<number>;\n  src?: string;\n}) => {\n       //...\n       };\n\nexport const Trackpad = () => {\n       //...\n       };\n\nexport const Keypad = () => {\n       //...\n       };\nexport const KBtn = ({\n  className,\n  children,\n  childrenClassName,\n  backlit = true,\n}: {\n  className?: string;\n  children?: React.ReactNode;\n  childrenClassName?: string;\n  backlit?: boolean;\n}) => {\n       //...\n       };\n\nexport const Row = ({ children }: { children: React.ReactNode }) => {\n       //...\n       };\n\nexport const SpeakerGrid = () => {\n       //...\n       };\n\nexport const OptionKey = ({ className }: { className: string }) => {\n       //...\n       };\n\nconst AceternityLogo = () => {\n//...\n};",
    "originFile": "\\components\\ui\\MacbookScroll.tsx"
  },
  {
    "id": "\\components\\ui\\MagicButton::MagicButton",
    "language": "tsx",
    "label": "MagicButton",
    "type": "function",
    "parent": "C:\\Users\\gmasc\\OneDrive\\Documentos\\CodeGPT\\danielavila.me-main\\components\\ui\\MagicButton",
    "totalTokens": 375,
    "inDegree": 1,
    "outDegree": 0,
    "code": "const MagicButton = ({\n    title, icon, position, handleClick, otherClasses\n} : {\n    title: string; icon: React.ReactNode, position: string; handleClick?: () => void; otherClasses?: string;\n}) => {\n  return (\n    <button className=\"shadow-[0_0_0_3px_#000000_inset] px-6 py-2 bg-transparent border border-black dark:border-white rounded-lg font-bold transform hover:-translate-y-1 transition duration-400\"\n    onClick={handleClick}>\n        <span className={`inline-flex h-full w-full cursor-pointer items-center justify-center rounded-full  px-7 text-sm font-medium text-white backdrop-blur-3xl gap-2 ${otherClasses}`}>\n            {position === 'left' && icon}\n            {title}\n            {position === 'right' && icon}\n        </span>\n</button>\n    // <button className=\"relative inline-flex h-12 w-full overflow-hidden rounded-full p-[1px] focus:outline-none md:w-60 md:mt-10\">\n    //     <span className=\"absolute inset-[-1000%] animate-[spin_2s_linear_infinite] bg-[conic-gradient(from_90deg_at_50%_50%,#E2CBFF_0%,#393BB2_50%,#E2CBFF_100%)]\" />\n    //     <span className={`inline-flex h-full w-full cursor-pointer items-center justify-center rounded-full bg-slate-950 px-7 text-sm font-medium text-white backdrop-blur-3xl gap-2 ${otherClasses}`}>\n    // {position === 'left' && icon}\n    // {title}\n    // {position === 'right' && icon}\n    //     </span>\n    // </button>\n  )\n}",
    "importStatements": [],
    "codeNoBody": "const MagicButton = ({\n    title, icon, position, handleClick, otherClasses\n} : {\n    title: string; icon: React.ReactNode, position: string; handleClick?: () => void; otherClasses?: string;\n}) => {\n//...\n}",
    "originFile": "\\components\\ui\\MagicButton.tsx"
  },
  {
    "id": "\\components\\ui\\MagicButton",
    "language": "tsx",
    "label": "C:\\Users\\gmasc\\OneDrive\\Documentos\\CodeGPT\\danielavila.me-main\\components\\ui\\MagicButton.tsx",
    "type": "file",
    "totalTokens": 379,
    "inDegree": 0,
    "outDegree": 1,
    "code": "const MagicButton = ({\n    title, icon, position, handleClick, otherClasses\n} : {\n    title: string; icon: React.ReactNode, position: string; handleClick?: () => void; otherClasses?: string;\n}) => {\n  return (\n    <button className=\"shadow-[0_0_0_3px_#000000_inset] px-6 py-2 bg-transparent border border-black dark:border-white rounded-lg font-bold transform hover:-translate-y-1 transition duration-400\"\n    onClick={handleClick}>\n        <span className={`inline-flex h-full w-full cursor-pointer items-center justify-center rounded-full  px-7 text-sm font-medium text-white backdrop-blur-3xl gap-2 ${otherClasses}`}>\n            {position === 'left' && icon}\n            {title}\n            {position === 'right' && icon}\n        </span>\n</button>\n    // <button className=\"relative inline-flex h-12 w-full overflow-hidden rounded-full p-[1px] focus:outline-none md:w-60 md:mt-10\">\n    //     <span className=\"absolute inset-[-1000%] animate-[spin_2s_linear_infinite] bg-[conic-gradient(from_90deg_at_50%_50%,#E2CBFF_0%,#393BB2_50%,#E2CBFF_100%)]\" />\n    //     <span className={`inline-flex h-full w-full cursor-pointer items-center justify-center rounded-full bg-slate-950 px-7 text-sm font-medium text-white backdrop-blur-3xl gap-2 ${otherClasses}`}>\n    // {position === 'left' && icon}\n    // {title}\n    // {position === 'right' && icon}\n    //     </span>\n    // </button>\n  )\n}\n\nexport default MagicButton",
    "importStatements": [],
    "codeNoBody": "const MagicButton = ({\n    title, icon, position, handleClick, otherClasses\n} : {\n    title: string; icon: React.ReactNode, position: string; handleClick?: () => void; otherClasses?: string;\n}) => {\n//...\n}\nexport default MagicButton",
    "originFile": "\\components\\ui\\MagicButton.tsx"
  },
  {
    "id": "\\components\\ui\\Spotlight::Spotlight",
    "language": "tsx",
    "label": "Spotlight",
    "type": "function",
    "parent": "C:\\Users\\gmasc\\OneDrive\\Documentos\\CodeGPT\\danielavila.me-main\\components\\ui\\Spotlight",
    "totalTokens": 369,
    "inDegree": 1,
    "outDegree": 2,
    "code": "const Spotlight = ({ className, fill }: SpotlightProps) => {\n  return (\n    <svg\n      className={cn(\n        \"animate-spotlight pointer-events-none absolute z-[1]  h-[169%] w-[138%] lg:w-[84%] opacity-0\",\n        className\n      )}\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 3787 2842\"\n      fill=\"none\"\n    >\n      <g filter=\"url(#filter)\">\n        <ellipse\n          cx=\"1924.71\"\n          cy=\"273.501\"\n          rx=\"1924.71\"\n          ry=\"273.501\"\n          transform=\"matrix(-0.822377 -0.568943 -0.568943 0.822377 3631.88 2291.09)\"\n          fill={fill || \"white\"}\n          fillOpacity=\"0.21\"\n        ></ellipse>\n      </g>\n      <defs>\n        <filter\n          id=\"filter\"\n          x=\"0.860352\"\n          y=\"0.838989\"\n          width=\"3785.16\"\n          height=\"2840.26\"\n          filterUnits=\"userSpaceOnUse\"\n          colorInterpolationFilters=\"sRGB\"\n        >\n          <feFlood floodOpacity=\"0\" result=\"BackgroundImageFix\"></feFlood>\n          <feBlend\n            mode=\"normal\"\n            in=\"SourceGraphic\"\n            in2=\"BackgroundImageFix\"\n            result=\"shape\"\n          ></feBlend>\n          <feGaussianBlur\n            stdDeviation=\"151\"\n            result=\"effect1_foregroundBlur_1065_8\"\n          ></feGaussianBlur>\n        </filter>\n      </defs>\n    </svg>\n  );\n};",
    "importStatements": [],
    "codeNoBody": "const Spotlight = ({ className, fill }: SpotlightProps) => {\n       //...\n       };",
    "originFile": "\\components\\ui\\Spotlight.tsx"
  },
  {
    "id": "\\components\\ui\\Spotlight::SpotlightProps",
    "language": "tsx",
    "label": "SpotlightProps",
    "type": "type",
    "parent": "C:\\Users\\gmasc\\OneDrive\\Documentos\\CodeGPT\\danielavila.me-main\\components\\ui\\Spotlight",
    "totalTokens": 16,
    "inDegree": 4,
    "outDegree": 1,
    "code": "type SpotlightProps = {\n  className?: string;\n  fill?: string;\n};",
    "importStatements": [],
    "codeNoBody": "type SpotlightProps = {\n  className?: string;\n  fill?: string;\n};",
    "originFile": "\\components\\ui\\Spotlight.tsx"
  },
  {
    "id": "\\components\\ui\\Spotlight",
    "language": "tsx",
    "label": "C:\\Users\\gmasc\\OneDrive\\Documentos\\CodeGPT\\danielavila.me-main\\components\\ui\\Spotlight.tsx",
    "type": "file",
    "totalTokens": 402,
    "inDegree": 0,
    "outDegree": 3,
    "code": "import React from \"react\";\nimport { cn } from \"@/utils/cn\";\n\ntype SpotlightProps = {\n  className?: string;\n  fill?: string;\n};\n\nexport const Spotlight = ({ className, fill }: SpotlightProps) => {\n  return (\n    <svg\n      className={cn(\n        \"animate-spotlight pointer-events-none absolute z-[1]  h-[169%] w-[138%] lg:w-[84%] opacity-0\",\n        className\n      )}\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 3787 2842\"\n      fill=\"none\"\n    >\n      <g filter=\"url(#filter)\">\n        <ellipse\n          cx=\"1924.71\"\n          cy=\"273.501\"\n          rx=\"1924.71\"\n          ry=\"273.501\"\n          transform=\"matrix(-0.822377 -0.568943 -0.568943 0.822377 3631.88 2291.09)\"\n          fill={fill || \"white\"}\n          fillOpacity=\"0.21\"\n        ></ellipse>\n      </g>\n      <defs>\n        <filter\n          id=\"filter\"\n          x=\"0.860352\"\n          y=\"0.838989\"\n          width=\"3785.16\"\n          height=\"2840.26\"\n          filterUnits=\"userSpaceOnUse\"\n          colorInterpolationFilters=\"sRGB\"\n        >\n          <feFlood floodOpacity=\"0\" result=\"BackgroundImageFix\"></feFlood>\n          <feBlend\n            mode=\"normal\"\n            in=\"SourceGraphic\"\n            in2=\"BackgroundImageFix\"\n            result=\"shape\"\n          ></feBlend>\n          <feGaussianBlur\n            stdDeviation=\"151\"\n            result=\"effect1_foregroundBlur_1065_8\"\n          ></feGaussianBlur>\n        </filter>\n      </defs>\n    </svg>\n  );\n};\n",
    "importStatements": [
      "import React from \"react\";",
      "import { cn } from \"@/utils/cn\";"
    ],
    "codeNoBody": "import React from \"react\";\nimport { cn } from \"@/utils/cn\";\ntype SpotlightProps = {\n  className?: string;\n  fill?: string;\n};\n\nexport const Spotlight = ({ className, fill }: SpotlightProps) => {\n       //...\n       };",
    "originFile": "\\components\\ui\\Spotlight.tsx"
  },
  {
    "id": "\\components\\ui\\StickyScrollReveal::StickyScroll",
    "language": "tsx",
    "label": "StickyScroll",
    "type": "function",
    "parent": "C:\\Users\\gmasc\\OneDrive\\Documentos\\CodeGPT\\danielavila.me-main\\components\\ui\\StickyScrollReveal",
    "totalTokens": 758,
    "inDegree": 1,
    "outDegree": 1,
    "code": "const StickyScroll = ({\n  content,\n  contentClassName,\n}: {\n  content: {\n    title: string;\n    description: string;\n    content?: React.ReactNode | any;\n  }[];\n  contentClassName?: string;\n}) => {\n  const [activeCard, setActiveCard] = React.useState(0);\n  const ref = useRef<any>(null);\n  const { scrollYProgress } = useScroll({\n    // uncomment line 22 and comment line 23 if you DONT want the overflow container and want to have it change on the entire page scroll\n    // target: ref\n    container: ref,\n    offset: [\"start start\", \"end start\"],\n  });\n  const cardLength = content.length;\n\n  useMotionValueEvent(scrollYProgress, \"change\", (latest) => {\n    const cardsBreakpoints = content.map((_, index) => index / cardLength);\n    const closestBreakpointIndex = cardsBreakpoints.reduce(\n      (acc, breakpoint, index) => {\n        const distance = Math.abs(latest - breakpoint);\n        if (distance < Math.abs(latest - cardsBreakpoints[acc])) {\n          return index;\n        }\n        return acc;\n      },\n      0\n    );\n    setActiveCard(closestBreakpointIndex);\n  });\n\n  \n  const backgroundColors = [\n    \"var(--slate-900)\",\n    \"var(--black)\",\n    \"rgba(0, 0, 0, 0)\",\n  ];\n  const linearGradients = [\n    \"linear-gradient(to bottom right, var(--cyan-500), var(--emerald-500))\",\n    \"linear-gradient(to bottom right, var(--pink-500), var(--indigo-500))\",\n    \"linear-gradient(to bottom right, var(--orange-500), var(--yellow-500))\",\n  ];\n\n  const [backgroundGradient, setBackgroundGradient] = useState(\n    linearGradients[0]\n  );\n\n  useEffect(() => {\n    setBackgroundGradient(linearGradients[activeCard % linearGradients.length]);\n  }, [activeCard]);\n\n  return (\n    <motion.div\n      animate={{\n        backgroundColor: backgroundColors[activeCard % backgroundColors.length],\n      }}\n      className=\"h-[30rem] overflow-y-auto flex justify-center relative space-x-10 rounded-md p-10\"\n      ref={ref}\n    >\n      <div className=\"div relative flex items-start px-4\">\n        <div className=\"max-w-2xl\">\n          {content.map((item, index) => (\n            <div key={item.title + index} className=\"my-20\">\n              <motion.h2\n                initial={{\n                  opacity: 0,\n                }}\n                animate={{\n                  opacity: activeCard === index ? 1 : 0.3,\n                }}\n                className=\"text-2xl font-bold text-slate-100\"\n              >\n                {item.title}\n              </motion.h2>\n              <motion.p\n                initial={{\n                  opacity: 0,\n                }}\n                animate={{\n                  opacity: activeCard === index ? 1 : 0.3,\n                }}\n                className=\"text-kg text-slate-300 max-w-sm mt-10\"\n              >\n                {item.description}\n              </motion.p>\n            </div>\n          ))}\n          <div className=\"h-40\" />\n        </div>\n      </div>\n      <div\n        style={{ background: backgroundGradient }}\n        className={cn(\n          \"hidden lg:block h-60 w-80 rounded-md bg-white sticky top-10 overflow-hidden\",\n          contentClassName\n        )}\n      >\n        {content[activeCard].content ?? null}\n      </div>\n    </motion.div>\n  );\n};",
    "importStatements": [],
    "codeNoBody": "const StickyScroll = ({\n  content,\n  contentClassName,\n}: {\n  content: {\n    title: string;\n    description: string;\n    content?: React.ReactNode | any;\n  }[];\n  contentClassName?: string;\n}) => {\n       //...\n       };",
    "originFile": "\\components\\ui\\StickyScrollReveal.tsx"
  },
  {
    "id": "\\components\\ui\\StickyScrollReveal",
    "language": "tsx",
    "label": "C:\\Users\\gmasc\\OneDrive\\Documentos\\CodeGPT\\danielavila.me-main\\components\\ui\\StickyScrollReveal.tsx",
    "type": "file",
    "totalTokens": 811,
    "inDegree": 0,
    "outDegree": 1,
    "code": "\"use client\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { useMotionValueEvent, useScroll } from \"framer-motion\";\nimport { motion } from \"framer-motion\";\nimport { cn } from \"@/lib/utils\";\n\nexport const StickyScroll = ({\n  content,\n  contentClassName,\n}: {\n  content: {\n    title: string;\n    description: string;\n    content?: React.ReactNode | any;\n  }[];\n  contentClassName?: string;\n}) => {\n  const [activeCard, setActiveCard] = React.useState(0);\n  const ref = useRef<any>(null);\n  const { scrollYProgress } = useScroll({\n    // uncomment line 22 and comment line 23 if you DONT want the overflow container and want to have it change on the entire page scroll\n    // target: ref\n    container: ref,\n    offset: [\"start start\", \"end start\"],\n  });\n  const cardLength = content.length;\n\n  useMotionValueEvent(scrollYProgress, \"change\", (latest) => {\n    const cardsBreakpoints = content.map((_, index) => index / cardLength);\n    const closestBreakpointIndex = cardsBreakpoints.reduce(\n      (acc, breakpoint, index) => {\n        const distance = Math.abs(latest - breakpoint);\n        if (distance < Math.abs(latest - cardsBreakpoints[acc])) {\n          return index;\n        }\n        return acc;\n      },\n      0\n    );\n    setActiveCard(closestBreakpointIndex);\n  });\n\n  \n  const backgroundColors = [\n    \"var(--slate-900)\",\n    \"var(--black)\",\n    \"rgba(0, 0, 0, 0)\",\n  ];\n  const linearGradients = [\n    \"linear-gradient(to bottom right, var(--cyan-500), var(--emerald-500))\",\n    \"linear-gradient(to bottom right, var(--pink-500), var(--indigo-500))\",\n    \"linear-gradient(to bottom right, var(--orange-500), var(--yellow-500))\",\n  ];\n\n  const [backgroundGradient, setBackgroundGradient] = useState(\n    linearGradients[0]\n  );\n\n  useEffect(() => {\n    setBackgroundGradient(linearGradients[activeCard % linearGradients.length]);\n  }, [activeCard]);\n\n  return (\n    <motion.div\n      animate={{\n        backgroundColor: backgroundColors[activeCard % backgroundColors.length],\n      }}\n      className=\"h-[30rem] overflow-y-auto flex justify-center relative space-x-10 rounded-md p-10\"\n      ref={ref}\n    >\n      <div className=\"div relative flex items-start px-4\">\n        <div className=\"max-w-2xl\">\n          {content.map((item, index) => (\n            <div key={item.title + index} className=\"my-20\">\n              <motion.h2\n                initial={{\n                  opacity: 0,\n                }}\n                animate={{\n                  opacity: activeCard === index ? 1 : 0.3,\n                }}\n                className=\"text-2xl font-bold text-slate-100\"\n              >\n                {item.title}\n              </motion.h2>\n              <motion.p\n                initial={{\n                  opacity: 0,\n                }}\n                animate={{\n                  opacity: activeCard === index ? 1 : 0.3,\n                }}\n                className=\"text-kg text-slate-300 max-w-sm mt-10\"\n              >\n                {item.description}\n              </motion.p>\n            </div>\n          ))}\n          <div className=\"h-40\" />\n        </div>\n      </div>\n      <div\n        style={{ background: backgroundGradient }}\n        className={cn(\n          \"hidden lg:block h-60 w-80 rounded-md bg-white sticky top-10 overflow-hidden\",\n          contentClassName\n        )}\n      >\n        {content[activeCard].content ?? null}\n      </div>\n    </motion.div>\n  );\n};\n",
    "importStatements": [
      "import React, { useEffect, useRef, useState } from \"react\";",
      "import { useMotionValueEvent, useScroll } from \"framer-motion\";",
      "import { motion } from \"framer-motion\";",
      "import { cn } from \"@/lib/utils\";"
    ],
    "codeNoBody": "\"use client\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { useMotionValueEvent, useScroll } from \"framer-motion\";\nimport { motion } from \"framer-motion\";\nimport { cn } from \"@/lib/utils\";\nexport const StickyScroll = ({\n  content,\n  contentClassName,\n}: {\n  content: {\n    title: string;\n    description: string;\n    content?: React.ReactNode | any;\n  }[];\n  contentClassName?: string;\n}) => {\n       //...\n       };",
    "originFile": "\\components\\ui\\StickyScrollReveal.tsx"
  },
  {
    "id": "\\components\\ui\\TextGenerateEffect::renderWords",
    "language": "tsx",
    "label": "renderWords",
    "type": "function",
    "parent": "C:\\Users\\gmasc\\OneDrive\\Documentos\\CodeGPT\\danielavila.me-main\\components\\ui\\TextGenerateEffect::TextGenerateEffect",
    "totalTokens": 98,
    "inDegree": 2,
    "outDegree": 0,
    "code": "const renderWords = () => {\n    return (\n      <motion.div ref={scope}>\n        {wordsArray.map((word, idx) => {\n          return (\n            <motion.span\n              key={word + idx}\n              className={` ${idx > 3 ? 'text-purple' : 'dark:text-white text-black' }  opacity-0`}\n            >\n              {word}{\" \"}\n            </motion.span>\n          );\n        })}\n      </motion.div>\n    );\n  };",
    "importStatements": [],
    "codeNoBody": "const renderWords = () => {\n  //...\n  };",
    "originFile": "\\components\\ui\\TextGenerateEffect.tsx"
  },
  {
    "id": "\\components\\ui\\TextGenerateEffect::TextGenerateEffect",
    "language": "tsx",
    "label": "TextGenerateEffect",
    "type": "function",
    "parent": "C:\\Users\\gmasc\\OneDrive\\Documentos\\CodeGPT\\danielavila.me-main\\components\\ui\\TextGenerateEffect",
    "totalTokens": 255,
    "inDegree": 1,
    "outDegree": 3,
    "code": "const TextGenerateEffect = ({\n  words,\n  className,\n}: {\n  words: string;\n  className?: string;\n}) => {\n  const [scope, animate] = useAnimate();\n  let wordsArray = words.split(\" \");\n  useEffect(() => {\n    animate(\n      \"span\",\n      {\n        opacity: 1,\n      },\n      {\n        duration: 2,\n        delay: stagger(0.2),\n      }\n    );\n  }, [scope.current]);\n\n  const renderWords = () => {\n    return (\n      <motion.div ref={scope}>\n        {wordsArray.map((word, idx) => {\n          return (\n            <motion.span\n              key={word + idx}\n              className={` ${idx > 3 ? 'text-purple' : 'dark:text-white text-black' }  opacity-0`}\n            >\n              {word}{\" \"}\n            </motion.span>\n          );\n        })}\n      </motion.div>\n    );\n  };\n\n  return (\n    <div className={cn(\"font-bold\", className)}>\n      <div className=\"my-4\">\n        <div className=\" dark:text-white text-black leading-snug tracking-wide\">\n          {renderWords()}\n        </div>\n      </div>\n    </div>\n  );\n};",
    "importStatements": [],
    "codeNoBody": "const TextGenerateEffect = ({\n  words,\n  className,\n}: {\n  words: string;\n  className?: string;\n}) => {\n  const [scope, animate] = useAnimate();\n  let wordsArray = words.split(\" \");\n  useEffect(() => {\n    animate(\n      \"span\",\n      {\n        opacity: 1,\n      },\n      {\n        duration: 2,\n        delay: stagger(0.2),\n      }\n    );\n  }, [scope.current]);\n  const renderWords = () => {\n    return (\n      <motion.div ref={scope}>\n        {wordsArray.map((word, idx) => {\n          return (\n            <motion.span\n              key={word + idx}\n              className={` ${idx > 3 ? 'text-purple' : 'dark:text-white text-black' }  opacity-0`}\n            >\n              {word}{\" \"}\n            </motion.span>\n          );\n        })}\n      </motion.div>\n    );\n  };\n\n  return (\n    <div className={cn(\"font-bold\", className)}>\n      <div className=\"my-4\">\n        <div className=\" dark:text-white text-black leading-snug tracking-wide\">\n          {renderWords()}\n        </div>\n      </div>\n    </div>\n  );\n};",
    "originFile": "\\components\\ui\\TextGenerateEffect.tsx"
  },
  {
    "id": "\\components\\ui\\TextGenerateEffect",
    "language": "tsx",
    "label": "C:\\Users\\gmasc\\OneDrive\\Documentos\\CodeGPT\\danielavila.me-main\\components\\ui\\TextGenerateEffect.tsx",
    "type": "file",
    "totalTokens": 292,
    "inDegree": 0,
    "outDegree": 1,
    "code": "\"use client\";\nimport { useEffect } from \"react\";\nimport { motion, stagger, useAnimate } from \"framer-motion\";\nimport { cn } from \"@/utils/cn\";\n\nexport const TextGenerateEffect = ({\n  words,\n  className,\n}: {\n  words: string;\n  className?: string;\n}) => {\n  const [scope, animate] = useAnimate();\n  let wordsArray = words.split(\" \");\n  useEffect(() => {\n    animate(\n      \"span\",\n      {\n        opacity: 1,\n      },\n      {\n        duration: 2,\n        delay: stagger(0.2),\n      }\n    );\n  }, [scope.current]);\n\n  const renderWords = () => {\n    return (\n      <motion.div ref={scope}>\n        {wordsArray.map((word, idx) => {\n          return (\n            <motion.span\n              key={word + idx}\n              className={` ${idx > 3 ? 'text-purple' : 'dark:text-white text-black' }  opacity-0`}\n            >\n              {word}{\" \"}\n            </motion.span>\n          );\n        })}\n      </motion.div>\n    );\n  };\n\n  return (\n    <div className={cn(\"font-bold\", className)}>\n      <div className=\"my-4\">\n        <div className=\" dark:text-white text-black leading-snug tracking-wide\">\n          {renderWords()}\n        </div>\n      </div>\n    </div>\n  );\n};\n",
    "importStatements": [
      "import { useEffect } from \"react\";",
      "import { motion, stagger, useAnimate } from \"framer-motion\";",
      "import { cn } from \"@/utils/cn\";"
    ],
    "codeNoBody": "\"use client\";\nimport { useEffect } from \"react\";\nimport { motion, stagger, useAnimate } from \"framer-motion\";\nimport { cn } from \"@/utils/cn\";\nexport const TextGenerateEffect = ({\n  words,\n  className,\n}: {\n  words: string;\n  className?: string;\n}) => {\n       //...\n       };",
    "originFile": "\\components\\ui\\TextGenerateEffect.tsx"
  },
  {
    "id": "\\components\\ui\\TracingBeam::TracingBeam",
    "language": "tsx",
    "label": "TracingBeam",
    "type": "function",
    "parent": "C:\\Users\\gmasc\\OneDrive\\Documentos\\CodeGPT\\danielavila.me-main\\components\\ui\\TracingBeam",
    "totalTokens": 1048,
    "inDegree": 1,
    "outDegree": 1,
    "code": "const TracingBeam = ({\n  children,\n  className,\n}: {\n  children: React.ReactNode;\n  className?: string;\n}) => {\n  const ref = useRef<HTMLDivElement>(null);\n  const { scrollYProgress } = useScroll({\n    target: ref,\n    offset: [\"start start\", \"end start\"],\n  });\n\n  const contentRef = useRef<HTMLDivElement>(null);\n  const [svgHeight, setSvgHeight] = useState(0);\n\n /**\n * This React component uses the useEffect and useSpring hooks to animate \n * the vertical position of elements based on the scroll progress.\n * The height of the SVG is dynamically set based on the content's height.\n */\n\nuseEffect(() => {\n    // Check if contentRef is currently assigned to a DOM element\n    if (contentRef.current) {\n        // Set the SVG height based on the current height of the content\n        setSvgHeight(contentRef.current.offsetHeight);\n    }\n}, []); // Empty dependency array means this runs once after the initial render\n\n// Create a spring animation for the first vertical position\nconst y1 = useSpring(\n    // Transform scrollYProgress into a range for the animation\n    useTransform(scrollYProgress, [0, 0.8], [50, svgHeight]),\n    {\n        // Spring physics parameters\n        stiffness: 500, // Determines how stiff the spring is\n        damping: 90,    // Determines how much the spring oscillates\n    }\n);\n\n// Create a spring animation for the second vertical position\nconst y2 = useSpring(\n    // Transform scrollYProgress into a range for the animation\n    useTransform(scrollYProgress, [0, 1], [50, svgHeight - 200]),\n    {\n        // Spring physics parameters\n        stiffness: 500, // Determines how stiff the spring is\n        damping: 90,    // Determines how much the spring oscillates\n    }\n);\n\n\n  return (\n    <motion.div\n      ref={ref}\n      className={cn(\"relative w-full max-w-4xl mx-auto h-full\", className)}\n    >\n      <div className=\"absolute -left-4 md:-left-20 top-3\">\n        <motion.div\n          transition={{\n            duration: 0.2,\n            delay: 0.5,\n          }}\n          animate={{\n            boxShadow:\n              scrollYProgress.get() > 0\n                ? \"none\"\n                : \"rgba(0, 0, 0, 0.24) 0px 3px 8px\",\n          }}\n          className=\"ml-[27px] h-4 w-4 rounded-full border border-netural-200 shadow-sm flex items-center justify-center\"\n        >\n          <motion.div\n            transition={{\n              duration: 0.2,\n              delay: 0.5,\n            }}\n            animate={{\n              backgroundColor:\n                scrollYProgress.get() > 0 ? \"white\" : \"var(--emerald-500)\",\n              borderColor:\n                scrollYProgress.get() > 0 ? \"white\" : \"var(--emerald-600)\",\n            }}\n            className=\"h-2 w-2  rounded-full border border-neutral-300 bg-white\"\n          />\n        </motion.div>\n        <svg\n          viewBox={`0 0 20 ${svgHeight}`}\n          width=\"20\"\n          height={svgHeight} // Set the SVG height\n          className=\" ml-4 block\"\n          aria-hidden=\"true\"\n        >\n          <motion.path\n            d={`M 1 0V -36 l 18 24 V ${svgHeight * 0.8} l -18 24V ${svgHeight}`}\n            fill=\"none\"\n            stroke=\"#9091A0\"\n            strokeOpacity=\"0.16\"\n            transition={{\n              duration: 10,\n            }}\n          ></motion.path>\n          <motion.path\n            d={`M 1 0V -36 l 18 24 V ${svgHeight * 0.8} l -18 24V ${svgHeight}`}\n            fill=\"none\"\n            stroke=\"url(#gradient)\"\n            strokeWidth=\"1.25\"\n            className=\"motion-reduce:hidden\"\n            transition={{\n              duration: 10,\n            }}\n          ></motion.path>\n          <defs>\n            <motion.linearGradient\n              id=\"gradient\"\n              gradientUnits=\"userSpaceOnUse\"\n              x1=\"0\"\n              x2=\"0\"\n              y1={y1} // set y1 for gradient\n              y2={y2} // set y2 for gradient\n            >\n              <stop stopColor=\"#18CCFC\" stopOpacity=\"0\"></stop>\n              <stop stopColor=\"#18CCFC\"></stop>\n              <stop offset=\"0.325\" stopColor=\"#6344F5\"></stop>\n              <stop offset=\"1\" stopColor=\"#AE48FF\" stopOpacity=\"0\"></stop>\n            </motion.linearGradient>\n          </defs>\n        </svg>\n      </div>\n      <div ref={contentRef}>{children}</div>\n    </motion.div>\n  );\n};",
    "importStatements": [],
    "codeNoBody": "const TracingBeam = ({\n  children,\n  className,\n}: {\n  children: React.ReactNode;\n  className?: string;\n}) => {\n       //...\n       };",
    "originFile": "\\components\\ui\\TracingBeam.tsx"
  },
  {
    "id": "\\components\\ui\\TracingBeam",
    "language": "tsx",
    "label": "C:\\Users\\gmasc\\OneDrive\\Documentos\\CodeGPT\\danielavila.me-main\\components\\ui\\TracingBeam.tsx",
    "type": "file",
    "totalTokens": 1103,
    "inDegree": 0,
    "outDegree": 1,
    "code": "\"use client\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport {\n  motion,\n  useTransform,\n  useScroll,\n  useVelocity,\n  useSpring,\n} from \"framer-motion\";\nimport { cn } from \"@/lib/utils\";\n\nexport const TracingBeam = ({\n  children,\n  className,\n}: {\n  children: React.ReactNode;\n  className?: string;\n}) => {\n  const ref = useRef<HTMLDivElement>(null);\n  const { scrollYProgress } = useScroll({\n    target: ref,\n    offset: [\"start start\", \"end start\"],\n  });\n\n  const contentRef = useRef<HTMLDivElement>(null);\n  const [svgHeight, setSvgHeight] = useState(0);\n\n /**\n * This React component uses the useEffect and useSpring hooks to animate \n * the vertical position of elements based on the scroll progress.\n * The height of the SVG is dynamically set based on the content's height.\n */\n\nuseEffect(() => {\n    // Check if contentRef is currently assigned to a DOM element\n    if (contentRef.current) {\n        // Set the SVG height based on the current height of the content\n        setSvgHeight(contentRef.current.offsetHeight);\n    }\n}, []); // Empty dependency array means this runs once after the initial render\n\n// Create a spring animation for the first vertical position\nconst y1 = useSpring(\n    // Transform scrollYProgress into a range for the animation\n    useTransform(scrollYProgress, [0, 0.8], [50, svgHeight]),\n    {\n        // Spring physics parameters\n        stiffness: 500, // Determines how stiff the spring is\n        damping: 90,    // Determines how much the spring oscillates\n    }\n);\n\n// Create a spring animation for the second vertical position\nconst y2 = useSpring(\n    // Transform scrollYProgress into a range for the animation\n    useTransform(scrollYProgress, [0, 1], [50, svgHeight - 200]),\n    {\n        // Spring physics parameters\n        stiffness: 500, // Determines how stiff the spring is\n        damping: 90,    // Determines how much the spring oscillates\n    }\n);\n\n\n  return (\n    <motion.div\n      ref={ref}\n      className={cn(\"relative w-full max-w-4xl mx-auto h-full\", className)}\n    >\n      <div className=\"absolute -left-4 md:-left-20 top-3\">\n        <motion.div\n          transition={{\n            duration: 0.2,\n            delay: 0.5,\n          }}\n          animate={{\n            boxShadow:\n              scrollYProgress.get() > 0\n                ? \"none\"\n                : \"rgba(0, 0, 0, 0.24) 0px 3px 8px\",\n          }}\n          className=\"ml-[27px] h-4 w-4 rounded-full border border-netural-200 shadow-sm flex items-center justify-center\"\n        >\n          <motion.div\n            transition={{\n              duration: 0.2,\n              delay: 0.5,\n            }}\n            animate={{\n              backgroundColor:\n                scrollYProgress.get() > 0 ? \"white\" : \"var(--emerald-500)\",\n              borderColor:\n                scrollYProgress.get() > 0 ? \"white\" : \"var(--emerald-600)\",\n            }}\n            className=\"h-2 w-2  rounded-full border border-neutral-300 bg-white\"\n          />\n        </motion.div>\n        <svg\n          viewBox={`0 0 20 ${svgHeight}`}\n          width=\"20\"\n          height={svgHeight} // Set the SVG height\n          className=\" ml-4 block\"\n          aria-hidden=\"true\"\n        >\n          <motion.path\n            d={`M 1 0V -36 l 18 24 V ${svgHeight * 0.8} l -18 24V ${svgHeight}`}\n            fill=\"none\"\n            stroke=\"#9091A0\"\n            strokeOpacity=\"0.16\"\n            transition={{\n              duration: 10,\n            }}\n          ></motion.path>\n          <motion.path\n            d={`M 1 0V -36 l 18 24 V ${svgHeight * 0.8} l -18 24V ${svgHeight}`}\n            fill=\"none\"\n            stroke=\"url(#gradient)\"\n            strokeWidth=\"1.25\"\n            className=\"motion-reduce:hidden\"\n            transition={{\n              duration: 10,\n            }}\n          ></motion.path>\n          <defs>\n            <motion.linearGradient\n              id=\"gradient\"\n              gradientUnits=\"userSpaceOnUse\"\n              x1=\"0\"\n              x2=\"0\"\n              y1={y1} // set y1 for gradient\n              y2={y2} // set y2 for gradient\n            >\n              <stop stopColor=\"#18CCFC\" stopOpacity=\"0\"></stop>\n              <stop stopColor=\"#18CCFC\"></stop>\n              <stop offset=\"0.325\" stopColor=\"#6344F5\"></stop>\n              <stop offset=\"1\" stopColor=\"#AE48FF\" stopOpacity=\"0\"></stop>\n            </motion.linearGradient>\n          </defs>\n        </svg>\n      </div>\n      <div ref={contentRef}>{children}</div>\n    </motion.div>\n  );\n};\n",
    "importStatements": [
      "import React, { useEffect, useRef, useState } from \"react\";",
      "import {\n  motion,\n  useTransform,\n  useScroll,\n  useVelocity,\n  useSpring,\n} from \"framer-motion\";",
      "import { cn } from \"@/lib/utils\";"
    ],
    "codeNoBody": "\"use client\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport {\n  motion,\n  useTransform,\n  useScroll,\n  useVelocity,\n  useSpring,\n} from \"framer-motion\";\nimport { cn } from \"@/lib/utils\";\nexport const TracingBeam = ({\n  children,\n  className,\n}: {\n  children: React.ReactNode;\n  className?: string;\n}) => {\n       //...\n       };",
    "originFile": "\\components\\ui\\TracingBeam.tsx"
  },
  {
    "id": "\\data\\index::socialMedia",
    "language": "typescript",
    "label": "socialMedia",
    "type": "assignment",
    "parent": "C:\\Users\\gmasc\\OneDrive\\Documentos\\CodeGPT\\danielavila.me-main\\data\\index",
    "totalTokens": 105,
    "inDegree": 1,
    "outDegree": 0,
    "code": "export const socialMedia = [\n    {\n      id: 1,\n      img: \"/git.svg\",\n      link: \"https://github.com/davila7\"\n    },\n    {\n      id: 2,\n      img: \"/twit.svg\",\n      link: \"https://x.com/dani_avila7\"\n    },\n    {\n      id: 3,\n      img: \"/link.svg\",\n      link: \"https://www.linkedin.com/in/daniel-avila-arias/\"\n    },\n  ];",
    "importStatements": [],
    "codeNoBody": "export const socialMedia = [\n    {\n      id: 1,\n      img: \"/git.svg\",\n      link: \"https://github.com/davila7\"\n    },\n    {\n      id: 2,\n      img: \"/twit.svg\",\n      link: \"https://x.com/dani_avila7\"\n    },\n    {\n      id: 3,\n      img: \"/link.svg\",\n      link: \"https://www.linkedin.com/in/daniel-avila-arias/\"\n    },\n  ];",
    "originFile": "\\data\\index.ts"
  },
  {
    "id": "\\data\\index::workExperience",
    "language": "typescript",
    "label": "workExperience",
    "type": "assignment",
    "parent": "C:\\Users\\gmasc\\OneDrive\\Documentos\\CodeGPT\\danielavila.me-main\\data\\index",
    "totalTokens": 266,
    "inDegree": 1,
    "outDegree": 0,
    "code": "export const workExperience = [\n    {\n      id: 1,\n      title: \"Frontend Engineer Intern\",\n      desc: \"Assisted in the development of a web-based platform using React.js, enhancing interactivity.\",\n      className: \"md:col-span-2\",\n      thumbnail: \"/exp1.svg\",\n    },\n    {\n      id: 2,\n      title: \"Mobile App Dev - JSM Tech\",\n      desc: \"Designed and developed mobile app for both iOS & Android platforms using React Native.\",\n      className: \"md:col-span-2\", // change to md:col-span-2\n      thumbnail: \"/exp2.svg\",\n    },\n    {\n      id: 3,\n      title: \"Freelance App Dev Project\",\n      desc: \"Led the dev of a mobile app for a client, from initial concept to deployment on app stores.\",\n      className: \"md:col-span-2\", // change to md:col-span-2\n      thumbnail: \"/exp3.svg\",\n    },\n    {\n      id: 4,\n      title: \"Lead Frontend Developer\",\n      desc: \"Developed and maintained user-facing features using modern frontend technologies.\",\n      className: \"md:col-span-2\",\n      thumbnail: \"/exp4.svg\",\n    },\n  ];",
    "importStatements": [],
    "codeNoBody": "export const workExperience = [\n    {\n      id: 1,\n      title: \"Frontend Engineer Intern\",\n      desc: \"Assisted in the development of a web-based platform using React.js, enhancing interactivity.\",\n      className: \"md:col-span-2\",\n      thumbnail: \"/exp1.svg\",\n    },\n    {\n      id: 2,\n      title: \"Mobile App Dev - JSM Tech\",\n      desc: \"Designed and developed mobile app for both iOS & Android platforms using React Native.\",\n      className: \"md:col-span-2\", // change to md:col-span-2\n      thumbnail: \"/exp2.svg\",\n    },\n    {\n      id: 3,\n      title: \"Freelance App Dev Project\",\n      desc: \"Led the dev of a mobile app for a client, from initial concept to deployment on app stores.\",\n      className: \"md:col-span-2\", // change to md:col-span-2\n      thumbnail: \"/exp3.svg\",\n    },\n    {\n      id: 4,\n      title: \"Lead Frontend Developer\",\n      desc: \"Developed and maintained user-facing features using modern frontend technologies.\",\n      className: \"md:col-span-2\",\n      thumbnail: \"/exp4.svg\",\n    },\n  ];",
    "originFile": "\\data\\index.ts"
  },
  {
    "id": "\\data\\index::companies",
    "language": "typescript",
    "label": "companies",
    "type": "assignment",
    "parent": "C:\\Users\\gmasc\\OneDrive\\Documentos\\CodeGPT\\danielavila.me-main\\data\\index",
    "totalTokens": 169,
    "inDegree": 1,
    "outDegree": 0,
    "code": "export const companies = [\n    {\n      id: 1,\n      name: \"cloudinary\",\n      img: \"/cloud.svg\",\n      nameImg: \"/cloudName.svg\",\n    },\n    {\n      id: 2,\n      name: \"appwrite\",\n      img: \"/app.svg\",\n      nameImg: \"/appName.svg\",\n    },\n    {\n      id: 3,\n      name: \"HOSTINGER\",\n      img: \"/host.svg\",\n      nameImg: \"/hostName.svg\",\n    },\n    {\n      id: 4,\n      name: \"stream\",\n      img: \"/s.svg\",\n      nameImg: \"/streamName.svg\",\n    },\n    {\n      id: 5,\n      name: \"docker.\",\n      img: \"/dock.svg\",\n      nameImg: \"/dockerName.svg\",\n    },\n  ];",
    "importStatements": [],
    "codeNoBody": "export const companies = [\n    {\n      id: 1,\n      name: \"cloudinary\",\n      img: \"/cloud.svg\",\n      nameImg: \"/cloudName.svg\",\n    },\n    {\n      id: 2,\n      name: \"appwrite\",\n      img: \"/app.svg\",\n      nameImg: \"/appName.svg\",\n    },\n    {\n      id: 3,\n      name: \"HOSTINGER\",\n      img: \"/host.svg\",\n      nameImg: \"/hostName.svg\",\n    },\n    {\n      id: 4,\n      name: \"stream\",\n      img: \"/s.svg\",\n      nameImg: \"/streamName.svg\",\n    },\n    {\n      id: 5,\n      name: \"docker.\",\n      img: \"/dock.svg\",\n      nameImg: \"/dockerName.svg\",\n    },\n  ];",
    "originFile": "\\data\\index.ts"
  },
  {
    "id": "\\data\\index::testimonials",
    "language": "typescript",
    "label": "testimonials",
    "type": "assignment",
    "parent": "C:\\Users\\gmasc\\OneDrive\\Documentos\\CodeGPT\\danielavila.me-main\\data\\index",
    "totalTokens": 432,
    "inDegree": 1,
    "outDegree": 0,
    "code": "export const testimonials = [\n    {\n      quote:\n        \"Collaborating with Adrian was an absolute pleasure. His professionalism, promptness, and dedication to delivering exceptional results were evident throughout our project. Adrian's enthusiasm for every facet of development truly stands out. If you're seeking to elevate your website and elevate your brand, Adrian is the ideal partner.\",\n      name: \"Michael Johnson\",\n      title: \"Director of AlphaStream Technologies\",\n    },\n    {\n      quote:\n        \"Collaborating with Adrian was an absolute pleasure. His professionalism, promptness, and dedication to delivering exceptional results were evident throughout our project. Adrian's enthusiasm for every facet of development truly stands out. If you're seeking to elevate your website and elevate your brand, Adrian is the ideal partner.\",\n      name: \"Michael Johnson\",\n      title: \"Director of AlphaStream Technologies\",\n    },\n    {\n      quote:\n        \"Collaborating with Adrian was an absolute pleasure. His professionalism, promptness, and dedication to delivering exceptional results were evident throughout our project. Adrian's enthusiasm for every facet of development truly stands out. If you're seeking to elevate your website and elevate your brand, Adrian is the ideal partner.\",\n      name: \"Michael Johnson\",\n      title: \"Director of AlphaStream Technologies\",\n    },\n    {\n      quote:\n        \"Collaborating with Adrian was an absolute pleasure. His professionalism, promptness, and dedication to delivering exceptional results were evident throughout our project. Adrian's enthusiasm for every facet of development truly stands out. If you're seeking to elevate your website and elevate your brand, Adrian is the ideal partner.\",\n      name: \"Michael Johnson\",\n      title: \"Director of AlphaStream Technologies\",\n    },\n    {\n      quote:\n        \"Collaborating with Adrian was an absolute pleasure. His professionalism, promptness, and dedication to delivering exceptional results were evident throughout our project. Adrian's enthusiasm for every facet of development truly stands out. If you're seeking to elevate your website and elevate your brand, Adrian is the ideal partner.\",\n      name: \"Michael Johnson\",\n      title: \"Director of AlphaStream Technologies\",\n    },\n  ];",
    "importStatements": [],
    "codeNoBody": "export const testimonials = [\n    {\n      quote:\n        \"Collaborating with Adrian was an absolute pleasure. His professionalism, promptness, and dedication to delivering exceptional results were evident throughout our project. Adrian's enthusiasm for every facet of development truly stands out. If you're seeking to elevate your website and elevate your brand, Adrian is the ideal partner.\",\n      name: \"Michael Johnson\",\n      title: \"Director of AlphaStream Technologies\",\n    },\n    {\n      quote:\n        \"Collaborating with Adrian was an absolute pleasure. His professionalism, promptness, and dedication to delivering exceptional results were evident throughout our project. Adrian's enthusiasm for every facet of development truly stands out. If you're seeking to elevate your website and elevate your brand, Adrian is the ideal partner.\",\n      name: \"Michael Johnson\",\n      title: \"Director of AlphaStream Technologies\",\n    },\n    {\n      quote:\n        \"Collaborating with Adrian was an absolute pleasure. His professionalism, promptness, and dedication to delivering exceptional results were evident throughout our project. Adrian's enthusiasm for every facet of development truly stands out. If you're seeking to elevate your website and elevate your brand, Adrian is the ideal partner.\",\n      name: \"Michael Johnson\",\n      title: \"Director of AlphaStream Technologies\",\n    },\n    {\n      quote:\n        \"Collaborating with Adrian was an absolute pleasure. His professionalism, promptness, and dedication to delivering exceptional results were evident throughout our project. Adrian's enthusiasm for every facet of development truly stands out. If you're seeking to elevate your website and elevate your brand, Adrian is the ideal partner.\",\n      name: \"Michael Johnson\",\n      title: \"Director of AlphaStream Technologies\",\n    },\n    {\n      quote:\n        \"Collaborating with Adrian was an absolute pleasure. His professionalism, promptness, and dedication to delivering exceptional results were evident throughout our project. Adrian's enthusiasm for every facet of development truly stands out. If you're seeking to elevate your website and elevate your brand, Adrian is the ideal partner.\",\n      name: \"Michael Johnson\",\n      title: \"Director of AlphaStream Technologies\",\n    },\n  ];",
    "originFile": "\\data\\index.ts"
  },
  {
    "id": "\\data\\index::projects",
    "language": "typescript",
    "label": "projects",
    "type": "assignment",
    "parent": "C:\\Users\\gmasc\\OneDrive\\Documentos\\CodeGPT\\danielavila.me-main\\data\\index",
    "totalTokens": 253,
    "inDegree": 1,
    "outDegree": 0,
    "code": "export const projects = [\n    {\n      id: 1,\n      title: \"Medium\",\n      des: \"I write about my experience and what I am learning in my journey.\",\n      img: \"/medium.png\",\n      iconLists: [],\n      link: \"https://medium.com/@dan.avila7\",\n    },\n    {\n      id: 2,\n      title: \"Youtube Channel\",\n      des: \"Videos with tutorials, tips, and tricks for web development and much more.\",\n      img: \"/youtube.png\",\n      iconLists: [],\n      link: \"https://www.youtube.com/@daniiielsan\",\n    },\n    {\n      id: 3,\n      title: \"BoxMagic\",\n      des: \"BoxMagic is a Gym Management Software for the LATAM market\",\n      img: \"/boxmagic.png\",\n      iconLists: [],\n      link: \"https://boxmagicapp.com\",\n    },\n    {\n      id: 4,\n      title: \"CodeGPT\",\n      des: \"CodeGPT is a VSCode extension that seamlessly integrates Gen AI models with your code\",\n      img: \"/codegpt.png\",\n      iconLists: [],\n      link: \"https://codegpt.co\",\n    },\n  ];",
    "importStatements": [],
    "codeNoBody": "export const projects = [\n    {\n      id: 1,\n      title: \"Medium\",\n      des: \"I write about my experience and what I am learning in my journey.\",\n      img: \"/medium.png\",\n      iconLists: [],\n      link: \"https://medium.com/@dan.avila7\",\n    },\n    {\n      id: 2,\n      title: \"Youtube Channel\",\n      des: \"Videos with tutorials, tips, and tricks for web development and much more.\",\n      img: \"/youtube.png\",\n      iconLists: [],\n      link: \"https://www.youtube.com/@daniiielsan\",\n    },\n    {\n      id: 3,\n      title: \"BoxMagic\",\n      des: \"BoxMagic is a Gym Management Software for the LATAM market\",\n      img: \"/boxmagic.png\",\n      iconLists: [],\n      link: \"https://boxmagicapp.com\",\n    },\n    {\n      id: 4,\n      title: \"CodeGPT\",\n      des: \"CodeGPT is a VSCode extension that seamlessly integrates Gen AI models with your code\",\n      img: \"/codegpt.png\",\n      iconLists: [],\n      link: \"https://codegpt.co\",\n    },\n  ];",
    "originFile": "\\data\\index.ts"
  },
  {
    "id": "\\data\\index::gridItems",
    "language": "typescript",
    "label": "gridItems",
    "type": "assignment",
    "parent": "C:\\Users\\gmasc\\OneDrive\\Documentos\\CodeGPT\\danielavila.me-main\\data\\index",
    "totalTokens": 429,
    "inDegree": 1,
    "outDegree": 0,
    "code": "export const gridItems = [\n    {\n      id: 1,\n      title: \"I work on tools that have a global impact\",\n      description: \"\",\n      className: \"lg:col-span-1 md:col-span-2 md:row-span-1\",\n      imgClassName: \"\",\n      titleClassName: \"justify-start\",\n      img: \"\",\n      spareImg: \"\",\n    },\n    {\n      id: 3,\n      title: \"My tech stack\",\n      description: \"I constantly try to improve\",\n      className: \"lg:col-span-2 md:col-span-3 md:row-span-1\",\n      imgClassName: \"\",\n      titleClassName: \"justify-center\",\n      img: \"\",\n      spareImg: \"\",\n    },\n    {\n      id: 4,\n      title: \"I am a software developer passionate about data, cloud infrastructure, and AI tools to optimize programming.\",\n      description: \" AI Developer 🤖\",\n      className: \"lg:col-span-3 md:col-span-3 md:row-span-1\",\n      imgClassName: \"\",\n      titleClassName: \"justify-start\",\n      img: \"/grid.svg\",\n      spareImg: \"/b4.svg\",\n    },\n  \n    {\n      id: 5,\n      title: \"Currently building CodeGPT\",\n      description: \"The Inside Scoop\",\n      className: \"md:col-span-2 md:row-span-1\",\n      imgClassName: \"absolute right-0 bottom-0 md:w-96 w-60\",\n      titleClassName: \"justify-center md:justify-start lg:justify-center\",\n      img: \"/b5.svg\",\n      spareImg: \"/grid.svg\",\n    },\n\n    {\n      id: 6,\n      title: \"Would you like to schedule a meeting?\",\n      description: \"\",\n      className: \"lg:col-span-1 md:col-span-1 md:row-span-1\",\n      imgClassName: \"\",\n      titleClassName: \"justify-center md:max-w-full max-w-60 text-center\",\n      img: \"\",\n      spareImg: \"\",\n    },\n  ];",
    "importStatements": [],
    "codeNoBody": "export const gridItems = [\n    {\n      id: 1,\n      title: \"I work on tools that have a global impact\",\n      description: \"\",\n      className: \"lg:col-span-1 md:col-span-2 md:row-span-1\",\n      imgClassName: \"\",\n      titleClassName: \"justify-start\",\n      img: \"\",\n      spareImg: \"\",\n    },\n    {\n      id: 3,\n      title: \"My tech stack\",\n      description: \"I constantly try to improve\",\n      className: \"lg:col-span-2 md:col-span-3 md:row-span-1\",\n      imgClassName: \"\",\n      titleClassName: \"justify-center\",\n      img: \"\",\n      spareImg: \"\",\n    },\n    {\n      id: 4,\n      title: \"I am a software developer passionate about data, cloud infrastructure, and AI tools to optimize programming.\",\n      description: \" AI Developer 🤖\",\n      className: \"lg:col-span-3 md:col-span-3 md:row-span-1\",\n      imgClassName: \"\",\n      titleClassName: \"justify-start\",\n      img: \"/grid.svg\",\n      spareImg: \"/b4.svg\",\n    },\n    {\n      id: 5,\n      title: \"Currently building CodeGPT\",\n      description: \"The Inside Scoop\",\n      className: \"md:col-span-2 md:row-span-1\",\n      imgClassName: \"absolute right-0 bottom-0 md:w-96 w-60\",\n      titleClassName: \"justify-center md:justify-start lg:justify-center\",\n      img: \"/b5.svg\",\n      spareImg: \"/grid.svg\",\n    },\n\n    {\n      id: 6,\n      title: \"Would you like to schedule a meeting?\",\n      description: \"\",\n      className: \"lg:col-span-1 md:col-span-1 md:row-span-1\",\n      imgClassName: \"\",\n      titleClassName: \"justify-center md:max-w-full max-w-60 text-center\",\n      img: \"\",\n      spareImg: \"\",\n    },\n  ];",
    "originFile": "\\data\\index.ts"
  },
  {
    "id": "\\data\\index::navItems",
    "language": "typescript",
    "label": "navItems",
    "type": "assignment",
    "parent": "C:\\Users\\gmasc\\OneDrive\\Documentos\\CodeGPT\\danielavila.me-main\\data\\index",
    "totalTokens": 48,
    "inDegree": 1,
    "outDegree": 0,
    "code": "export const navItems = [\n    { name: \"About\", link: \"#about\" },\n    // { name: \"Projects\", link: \"#projects\" },\n    { name: \"Contact\", link: \"#contact\" },\n  ];",
    "importStatements": [],
    "codeNoBody": "export const navItems = [\n    { name: \"About\", link: \"#about\" },\n    // { name: \"Projects\", link: \"#projects\" },\n    { name: \"Contact\", link: \"#contact\" },\n  ];",
    "originFile": "\\data\\index.ts"
  },
  {
    "id": "\\data\\index",
    "language": "typescript",
    "label": "C:\\Users\\gmasc\\OneDrive\\Documentos\\CodeGPT\\danielavila.me-main\\data\\index.ts",
    "type": "file",
    "totalTokens": 1715,
    "inDegree": 0,
    "outDegree": 7,
    "code": "export const navItems = [\n    { name: \"About\", link: \"#about\" },\n    // { name: \"Projects\", link: \"#projects\" },\n    { name: \"Contact\", link: \"#contact\" },\n  ];\n  \n  export const gridItems = [\n    {\n      id: 1,\n      title: \"I work on tools that have a global impact\",\n      description: \"\",\n      className: \"lg:col-span-1 md:col-span-2 md:row-span-1\",\n      imgClassName: \"\",\n      titleClassName: \"justify-start\",\n      img: \"\",\n      spareImg: \"\",\n    },\n    {\n      id: 3,\n      title: \"My tech stack\",\n      description: \"I constantly try to improve\",\n      className: \"lg:col-span-2 md:col-span-3 md:row-span-1\",\n      imgClassName: \"\",\n      titleClassName: \"justify-center\",\n      img: \"\",\n      spareImg: \"\",\n    },\n    {\n      id: 4,\n      title: \"I am a software developer passionate about data, cloud infrastructure, and AI tools to optimize programming.\",\n      description: \" AI Developer 🤖\",\n      className: \"lg:col-span-3 md:col-span-3 md:row-span-1\",\n      imgClassName: \"\",\n      titleClassName: \"justify-start\",\n      img: \"/grid.svg\",\n      spareImg: \"/b4.svg\",\n    },\n  \n    {\n      id: 5,\n      title: \"Currently building CodeGPT\",\n      description: \"The Inside Scoop\",\n      className: \"md:col-span-2 md:row-span-1\",\n      imgClassName: \"absolute right-0 bottom-0 md:w-96 w-60\",\n      titleClassName: \"justify-center md:justify-start lg:justify-center\",\n      img: \"/b5.svg\",\n      spareImg: \"/grid.svg\",\n    },\n\n    {\n      id: 6,\n      title: \"Would you like to schedule a meeting?\",\n      description: \"\",\n      className: \"lg:col-span-1 md:col-span-1 md:row-span-1\",\n      imgClassName: \"\",\n      titleClassName: \"justify-center md:max-w-full max-w-60 text-center\",\n      img: \"\",\n      spareImg: \"\",\n    },\n  ];\n  \n  export const projects = [\n    {\n      id: 1,\n      title: \"Medium\",\n      des: \"I write about my experience and what I am learning in my journey.\",\n      img: \"/medium.png\",\n      iconLists: [],\n      link: \"https://medium.com/@dan.avila7\",\n    },\n    {\n      id: 2,\n      title: \"Youtube Channel\",\n      des: \"Videos with tutorials, tips, and tricks for web development and much more.\",\n      img: \"/youtube.png\",\n      iconLists: [],\n      link: \"https://www.youtube.com/@daniiielsan\",\n    },\n    {\n      id: 3,\n      title: \"BoxMagic\",\n      des: \"BoxMagic is a Gym Management Software for the LATAM market\",\n      img: \"/boxmagic.png\",\n      iconLists: [],\n      link: \"https://boxmagicapp.com\",\n    },\n    {\n      id: 4,\n      title: \"CodeGPT\",\n      des: \"CodeGPT is a VSCode extension that seamlessly integrates Gen AI models with your code\",\n      img: \"/codegpt.png\",\n      iconLists: [],\n      link: \"https://codegpt.co\",\n    },\n  ];\n  \n  export const testimonials = [\n    {\n      quote:\n        \"Collaborating with Adrian was an absolute pleasure. His professionalism, promptness, and dedication to delivering exceptional results were evident throughout our project. Adrian's enthusiasm for every facet of development truly stands out. If you're seeking to elevate your website and elevate your brand, Adrian is the ideal partner.\",\n      name: \"Michael Johnson\",\n      title: \"Director of AlphaStream Technologies\",\n    },\n    {\n      quote:\n        \"Collaborating with Adrian was an absolute pleasure. His professionalism, promptness, and dedication to delivering exceptional results were evident throughout our project. Adrian's enthusiasm for every facet of development truly stands out. If you're seeking to elevate your website and elevate your brand, Adrian is the ideal partner.\",\n      name: \"Michael Johnson\",\n      title: \"Director of AlphaStream Technologies\",\n    },\n    {\n      quote:\n        \"Collaborating with Adrian was an absolute pleasure. His professionalism, promptness, and dedication to delivering exceptional results were evident throughout our project. Adrian's enthusiasm for every facet of development truly stands out. If you're seeking to elevate your website and elevate your brand, Adrian is the ideal partner.\",\n      name: \"Michael Johnson\",\n      title: \"Director of AlphaStream Technologies\",\n    },\n    {\n      quote:\n        \"Collaborating with Adrian was an absolute pleasure. His professionalism, promptness, and dedication to delivering exceptional results were evident throughout our project. Adrian's enthusiasm for every facet of development truly stands out. If you're seeking to elevate your website and elevate your brand, Adrian is the ideal partner.\",\n      name: \"Michael Johnson\",\n      title: \"Director of AlphaStream Technologies\",\n    },\n    {\n      quote:\n        \"Collaborating with Adrian was an absolute pleasure. His professionalism, promptness, and dedication to delivering exceptional results were evident throughout our project. Adrian's enthusiasm for every facet of development truly stands out. If you're seeking to elevate your website and elevate your brand, Adrian is the ideal partner.\",\n      name: \"Michael Johnson\",\n      title: \"Director of AlphaStream Technologies\",\n    },\n  ];\n  \n  export const companies = [\n    {\n      id: 1,\n      name: \"cloudinary\",\n      img: \"/cloud.svg\",\n      nameImg: \"/cloudName.svg\",\n    },\n    {\n      id: 2,\n      name: \"appwrite\",\n      img: \"/app.svg\",\n      nameImg: \"/appName.svg\",\n    },\n    {\n      id: 3,\n      name: \"HOSTINGER\",\n      img: \"/host.svg\",\n      nameImg: \"/hostName.svg\",\n    },\n    {\n      id: 4,\n      name: \"stream\",\n      img: \"/s.svg\",\n      nameImg: \"/streamName.svg\",\n    },\n    {\n      id: 5,\n      name: \"docker.\",\n      img: \"/dock.svg\",\n      nameImg: \"/dockerName.svg\",\n    },\n  ];\n  \n  export const workExperience = [\n    {\n      id: 1,\n      title: \"Frontend Engineer Intern\",\n      desc: \"Assisted in the development of a web-based platform using React.js, enhancing interactivity.\",\n      className: \"md:col-span-2\",\n      thumbnail: \"/exp1.svg\",\n    },\n    {\n      id: 2,\n      title: \"Mobile App Dev - JSM Tech\",\n      desc: \"Designed and developed mobile app for both iOS & Android platforms using React Native.\",\n      className: \"md:col-span-2\", // change to md:col-span-2\n      thumbnail: \"/exp2.svg\",\n    },\n    {\n      id: 3,\n      title: \"Freelance App Dev Project\",\n      desc: \"Led the dev of a mobile app for a client, from initial concept to deployment on app stores.\",\n      className: \"md:col-span-2\", // change to md:col-span-2\n      thumbnail: \"/exp3.svg\",\n    },\n    {\n      id: 4,\n      title: \"Lead Frontend Developer\",\n      desc: \"Developed and maintained user-facing features using modern frontend technologies.\",\n      className: \"md:col-span-2\",\n      thumbnail: \"/exp4.svg\",\n    },\n  ];\n  \n  export const socialMedia = [\n    {\n      id: 1,\n      img: \"/git.svg\",\n      link: \"https://github.com/davila7\"\n    },\n    {\n      id: 2,\n      img: \"/twit.svg\",\n      link: \"https://x.com/dani_avila7\"\n    },\n    {\n      id: 3,\n      img: \"/link.svg\",\n      link: \"https://www.linkedin.com/in/daniel-avila-arias/\"\n    },\n  ];\n  ",
    "importStatements": [],
    "codeNoBody": "export const navItems = [\n    { name: \"About\", link: \"#about\" },\n    // { name: \"Projects\", link: \"#projects\" },\n    { name: \"Contact\", link: \"#contact\" },\n  ];\n  export const gridItems = [\n    {\n      id: 1,\n      title: \"I work on tools that have a global impact\",\n      description: \"\",\n      className: \"lg:col-span-1 md:col-span-2 md:row-span-1\",\n      imgClassName: \"\",\n      titleClassName: \"justify-start\",\n      img: \"\",\n      spareImg: \"\",\n    },\n    {\n      id: 3,\n      title: \"My tech stack\",\n      description: \"I constantly try to improve\",\n      className: \"lg:col-span-2 md:col-span-3 md:row-span-1\",\n      imgClassName: \"\",\n      titleClassName: \"justify-center\",\n      img: \"\",\n      spareImg: \"\",\n    },\n    {\n      id: 4,\n      title: \"I am a software developer passionate about data, cloud infrastructure, and AI tools to optimize programming.\",\n      description: \" AI Developer 🤖\",\n      className: \"lg:col-span-3 md:col-span-3 md:row-span-1\",\n      imgClassName: \"\",\n      titleClassName: \"justify-start\",\n      img: \"/grid.svg\",\n      spareImg: \"/b4.svg\",\n    },\n  \n    {\n      id: 5,\n      title: \"Currently building CodeGPT\",\n      description: \"The Inside Scoop\",\n      className: \"md:col-span-2 md:row-span-1\",\n      imgClassName: \"absolute right-0 bottom-0 md:w-96 w-60\",\n      titleClassName: \"justify-center md:justify-start lg:justify-center\",\n      img: \"/b5.svg\",\n      spareImg: \"/grid.svg\",\n    },\n\n    {\n      id: 6,\n      title: \"Would you like to schedule a meeting?\",\n      description: \"\",\n      className: \"lg:col-span-1 md:col-span-1 md:row-span-1\",\n      imgClassName: \"\",\n      titleClassName: \"justify-center md:max-w-full max-w-60 text-center\",\n      img: \"\",\n      spareImg: \"\",\n    },\n  ];\n  \n  export const projects = [\n    {\n      id: 1,\n      title: \"Medium\",\n      des: \"I write about my experience and what I am learning in my journey.\",\n      img: \"/medium.png\",\n      iconLists: [],\n      link: \"https://medium.com/@dan.avila7\",\n    },\n    {\n      id: 2,\n      title: \"Youtube Channel\",\n      des: \"Videos with tutorials, tips, and tricks for web development and much more.\",\n      img: \"/youtube.png\",\n      iconLists: [],\n      link: \"https://www.youtube.com/@daniiielsan\",\n    },\n    {\n      id: 3,\n      title: \"BoxMagic\",\n      des: \"BoxMagic is a Gym Management Software for the LATAM market\",\n      img: \"/boxmagic.png\",\n      iconLists: [],\n      link: \"https://boxmagicapp.com\",\n    },\n    {\n      id: 4,\n      title: \"CodeGPT\",\n      des: \"CodeGPT is a VSCode extension that seamlessly integrates Gen AI models with your code\",\n      img: \"/codegpt.png\",\n      iconLists: [],\n      link: \"https://codegpt.co\",\n    },\n  ];\n  \n  export const testimonials = [\n    {\n      quote:\n        \"Collaborating with Adrian was an absolute pleasure. His professionalism, promptness, and dedication to delivering exceptional results were evident throughout our project. Adrian's enthusiasm for every facet of development truly stands out. If you're seeking to elevate your website and elevate your brand, Adrian is the ideal partner.\",\n      name: \"Michael Johnson\",\n      title: \"Director of AlphaStream Technologies\",\n    },\n    {\n      quote:\n        \"Collaborating with Adrian was an absolute pleasure. His professionalism, promptness, and dedication to delivering exceptional results were evident throughout our project. Adrian's enthusiasm for every facet of development truly stands out. If you're seeking to elevate your website and elevate your brand, Adrian is the ideal partner.\",\n      name: \"Michael Johnson\",\n      title: \"Director of AlphaStream Technologies\",\n    },\n    {\n      quote:\n        \"Collaborating with Adrian was an absolute pleasure. His professionalism, promptness, and dedication to delivering exceptional results were evident throughout our project. Adrian's enthusiasm for every facet of development truly stands out. If you're seeking to elevate your website and elevate your brand, Adrian is the ideal partner.\",\n      name: \"Michael Johnson\",\n      title: \"Director of AlphaStream Technologies\",\n    },\n    {\n      quote:\n        \"Collaborating with Adrian was an absolute pleasure. His professionalism, promptness, and dedication to delivering exceptional results were evident throughout our project. Adrian's enthusiasm for every facet of development truly stands out. If you're seeking to elevate your website and elevate your brand, Adrian is the ideal partner.\",\n      name: \"Michael Johnson\",\n      title: \"Director of AlphaStream Technologies\",\n    },\n    {\n      quote:\n        \"Collaborating with Adrian was an absolute pleasure. His professionalism, promptness, and dedication to delivering exceptional results were evident throughout our project. Adrian's enthusiasm for every facet of development truly stands out. If you're seeking to elevate your website and elevate your brand, Adrian is the ideal partner.\",\n      name: \"Michael Johnson\",\n      title: \"Director of AlphaStream Technologies\",\n    },\n  ];\n  \n  export const companies = [\n    {\n      id: 1,\n      name: \"cloudinary\",\n      img: \"/cloud.svg\",\n      nameImg: \"/cloudName.svg\",\n    },\n    {\n      id: 2,\n      name: \"appwrite\",\n      img: \"/app.svg\",\n      nameImg: \"/appName.svg\",\n    },\n    {\n      id: 3,\n      name: \"HOSTINGER\",\n      img: \"/host.svg\",\n      nameImg: \"/hostName.svg\",\n    },\n    {\n      id: 4,\n      name: \"stream\",\n      img: \"/s.svg\",\n      nameImg: \"/streamName.svg\",\n    },\n    {\n      id: 5,\n      name: \"docker.\",\n      img: \"/dock.svg\",\n      nameImg: \"/dockerName.svg\",\n    },\n  ];\n  \n  export const workExperience = [\n    {\n      id: 1,\n      title: \"Frontend Engineer Intern\",\n      desc: \"Assisted in the development of a web-based platform using React.js, enhancing interactivity.\",\n      className: \"md:col-span-2\",\n      thumbnail: \"/exp1.svg\",\n    },\n    {\n      id: 2,\n      title: \"Mobile App Dev - JSM Tech\",\n      desc: \"Designed and developed mobile app for both iOS & Android platforms using React Native.\",\n      className: \"md:col-span-2\", // change to md:col-span-2\n      thumbnail: \"/exp2.svg\",\n    },\n    {\n      id: 3,\n      title: \"Freelance App Dev Project\",\n      desc: \"Led the dev of a mobile app for a client, from initial concept to deployment on app stores.\",\n      className: \"md:col-span-2\", // change to md:col-span-2\n      thumbnail: \"/exp3.svg\",\n    },\n    {\n      id: 4,\n      title: \"Lead Frontend Developer\",\n      desc: \"Developed and maintained user-facing features using modern frontend technologies.\",\n      className: \"md:col-span-2\",\n      thumbnail: \"/exp4.svg\",\n    },\n  ];\n  \n  export const socialMedia = [\n    {\n      id: 1,\n      img: \"/git.svg\",\n      link: \"https://github.com/davila7\"\n    },\n    {\n      id: 2,\n      img: \"/twit.svg\",\n      link: \"https://x.com/dani_avila7\"\n    },\n    {\n      id: 3,\n      img: \"/link.svg\",\n      link: \"https://www.linkedin.com/in/daniel-avila-arias/\"\n    },\n  ];",
    "originFile": "\\data\\index.ts"
  },
  {
    "id": "\\instrumentation::register",
    "language": "typescript",
    "label": "register",
    "type": "function",
    "parent": "C:\\Users\\gmasc\\OneDrive\\Documentos\\CodeGPT\\danielavila.me-main\\instrumentation",
    "totalTokens": 55,
    "inDegree": 1,
    "outDegree": 0,
    "code": "async function register() {\n  if (process.env.NEXT_RUNTIME === 'nodejs') {\n    await import('./sentry.server.config');\n  }\n\n  if (process.env.NEXT_RUNTIME === 'edge') {\n    await import('./sentry.edge.config');\n  }\n}",
    "importStatements": [],
    "codeNoBody": "async function register() {\n       //...\n       }",
    "originFile": "\\instrumentation.ts"
  },
  {
    "id": "\\instrumentation",
    "language": "typescript",
    "label": "C:\\Users\\gmasc\\OneDrive\\Documentos\\CodeGPT\\danielavila.me-main\\instrumentation.ts",
    "type": "file",
    "totalTokens": 56,
    "inDegree": 0,
    "outDegree": 1,
    "code": "export async function register() {\n  if (process.env.NEXT_RUNTIME === 'nodejs') {\n    await import('./sentry.server.config');\n  }\n\n  if (process.env.NEXT_RUNTIME === 'edge') {\n    await import('./sentry.edge.config');\n  }\n}\n",
    "importStatements": [],
    "codeNoBody": "export async function register() {\n       //...\n       }",
    "originFile": "\\instrumentation.ts"
  },
  {
    "id": "\\lib\\utils::cn",
    "language": "typescript",
    "label": "cn",
    "type": "function",
    "parent": "C:\\Users\\gmasc\\OneDrive\\Documentos\\CodeGPT\\danielavila.me-main\\lib\\utils",
    "totalTokens": 18,
    "inDegree": 3,
    "outDegree": 0,
    "code": "function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs));\n}",
    "importStatements": [],
    "codeNoBody": "function cn(...inputs: ClassValue[]) {\n       //...\n       }",
    "originFile": "\\lib\\utils.ts"
  },
  {
    "id": "\\lib\\utils",
    "language": "typescript",
    "label": "C:\\Users\\gmasc\\OneDrive\\Documentos\\CodeGPT\\danielavila.me-main\\lib\\utils.ts",
    "type": "file",
    "totalTokens": 45,
    "inDegree": 0,
    "outDegree": 1,
    "code": "import { type ClassValue, clsx } from \"clsx\";\nimport { twMerge } from \"tailwind-merge\";\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs));\n}",
    "importStatements": [
      "import { type ClassValue, clsx } from \"clsx\";",
      "import { twMerge } from \"tailwind-merge\";"
    ],
    "codeNoBody": "import { type ClassValue, clsx } from \"clsx\";\nimport { twMerge } from \"tailwind-merge\";\nexport function cn(...inputs: ClassValue[]) {\n       //...\n       }",
    "originFile": "\\lib\\utils.ts"
  },
  {
    "id": "\\next.config::nextConfig",
    "language": "typescript",
    "label": "nextConfig",
    "type": "assignment",
    "parent": "C:\\Users\\gmasc\\OneDrive\\Documentos\\CodeGPT\\danielavila.me-main\\next.config",
    "totalTokens": 5,
    "inDegree": 2,
    "outDegree": 0,
    "code": "const nextConfig = {};",
    "importStatements": [],
    "codeNoBody": "const nextConfig = {};",
    "originFile": "\\next.config.mjs"
  },
  {
    "id": "\\next.config",
    "language": "typescript",
    "label": "C:\\Users\\gmasc\\OneDrive\\Documentos\\CodeGPT\\danielavila.me-main\\next.config.mjs",
    "type": "file",
    "totalTokens": 322,
    "inDegree": 0,
    "outDegree": 2,
    "code": "import {withSentryConfig} from '@sentry/nextjs';\n/** @type {import('next').NextConfig} */\nconst nextConfig = {};\n\nexport default withSentryConfig(nextConfig, {\n// For all available options, see:\n// https://github.com/getsentry/sentry-webpack-plugin#options\n\norg: \"daniel-avila\",\nproject: \"javascript-nextjs\",\n\n// Only print logs for uploading source maps in CI\nsilent: !process.env.CI,\n\n// For all available options, see:\n// https://docs.sentry.io/platforms/javascript/guides/nextjs/manual-setup/\n\n// Upload a larger set of source maps for prettier stack traces (increases build time)\nwidenClientFileUpload: true,\n\n// Uncomment to route browser requests to Sentry through a Next.js rewrite to circumvent ad-blockers.\n// This can increase your server load as well as your hosting bill.\n// Note: Check that the configured route will not match with your Next.js middleware, otherwise reporting of client-\n// side errors will fail.\n// tunnelRoute: \"/monitoring\",\n\n// Hides source maps from generated client bundles\nhideSourceMaps: true,\n\n// Automatically tree-shake Sentry logger statements to reduce bundle size\ndisableLogger: true,\n\n// Enables automatic instrumentation of Vercel Cron Monitors. (Does not yet work with App Router route handlers.)\n// See the following for more information:\n// https://docs.sentry.io/product/crons/\n// https://vercel.com/docs/cron-jobs\nautomaticVercelMonitors: true,\n});",
    "importStatements": [
      "import {withSentryConfig} from '@sentry/nextjs';"
    ],
    "codeNoBody": "import {withSentryConfig} from '@sentry/nextjs';\n/** @type {import('next').NextConfig} */\nconst nextConfig = {};\nexport default withSentryConfig(nextConfig, {\n// For all available options, see:\n// https://github.com/getsentry/sentry-webpack-plugin#options\n\norg: \"daniel-avila\",\nproject: \"javascript-nextjs\",\n\n// Only print logs for uploading source maps in CI\nsilent: !process.env.CI,\n\n// For all available options, see:\n// https://docs.sentry.io/platforms/javascript/guides/nextjs/manual-setup/\n\n// Upload a larger set of source maps for prettier stack traces (increases build time)\nwidenClientFileUpload: true,\n\n// Uncomment to route browser requests to Sentry through a Next.js rewrite to circumvent ad-blockers.\n// This can increase your server load as well as your hosting bill.\n// Note: Check that the configured route will not match with your Next.js middleware, otherwise reporting of client-\n// side errors will fail.\n// tunnelRoute: \"/monitoring\",\n\n// Hides source maps from generated client bundles\nhideSourceMaps: true,\n\n// Automatically tree-shake Sentry logger statements to reduce bundle size\ndisableLogger: true,\n\n// Enables automatic instrumentation of Vercel Cron Monitors. (Does not yet work with App Router route handlers.)\n// See the following for more information:\n// https://docs.sentry.io/product/crons/\n// https://vercel.com/docs/cron-jobs\nautomaticVercelMonitors: true,\n});",
    "originFile": "\\next.config.mjs"
  },
  {
    "id": "\\postcss.config::config",
    "language": "typescript",
    "label": "config",
    "type": "assignment",
    "parent": "C:\\Users\\gmasc\\OneDrive\\Documentos\\CodeGPT\\danielavila.me-main\\postcss.config",
    "totalTokens": 17,
    "inDegree": 1,
    "outDegree": 0,
    "code": "const config = {\n  plugins: {\n    tailwindcss: {},\n  },\n};",
    "importStatements": [],
    "codeNoBody": "const config = {\n  plugins: {\n    tailwindcss: {},\n  },\n};",
    "originFile": "\\postcss.config.mjs"
  },
  {
    "id": "\\postcss.config",
    "language": "typescript",
    "label": "C:\\Users\\gmasc\\OneDrive\\Documentos\\CodeGPT\\danielavila.me-main\\postcss.config.mjs",
    "type": "file",
    "totalTokens": 35,
    "inDegree": 0,
    "outDegree": 1,
    "code": "/** @type {import('postcss-load-config').Config} */\nconst config = {\n  plugins: {\n    tailwindcss: {},\n  },\n};\n\nexport default config;\n",
    "importStatements": [],
    "codeNoBody": "/** @type {import('postcss-load-config').Config} */\nconst config = {\n  plugins: {\n    tailwindcss: {},\n  },\n};\nexport default config;",
    "originFile": "\\postcss.config.mjs"
  },
  {
    "id": "\\sentry.client.config",
    "language": "typescript",
    "label": "C:\\Users\\gmasc\\OneDrive\\Documentos\\CodeGPT\\danielavila.me-main\\sentry.client.config.ts",
    "type": "file",
    "totalTokens": 280,
    "inDegree": 0,
    "outDegree": 0,
    "code": "// This file configures the initialization of Sentry on the client.\n// The config you add here will be used whenever a users loads a page in their browser.\n// https://docs.sentry.io/platforms/javascript/guides/nextjs/\n\nimport * as Sentry from \"@sentry/nextjs\";\n\nSentry.init({\n  dsn: \"https://04370b06baa50b148ba13cbba39282a6@o42738.ingest.us.sentry.io/4507580984721408\",\n\n  // Adjust this value in production, or use tracesSampler for greater control\n  tracesSampleRate: 1,\n\n  // Setting this option to true will print useful information to the console while you're setting up Sentry.\n  debug: false,\n\n  replaysOnErrorSampleRate: 1.0,\n\n  // This sets the sample rate to be 10%. You may want this to be 100% while\n  // in development and sample at a lower rate in production\n  replaysSessionSampleRate: 0.1,\n\n  // You can remove this option if you're not planning to use the Sentry Session Replay feature:\n  integrations: [\n    Sentry.replayIntegration({\n      // Additional Replay configuration goes in here, for example:\n      maskAllText: true,\n      blockAllMedia: true,\n    }),\n  ],\n});\n",
    "importStatements": [
      "import * as Sentry from \"@sentry/nextjs\";"
    ],
    "codeNoBody": "// This file configures the initialization of Sentry on the client.\n// The config you add here will be used whenever a users loads a page in their browser.\n// https://docs.sentry.io/platforms/javascript/guides/nextjs/\nimport * as Sentry from \"@sentry/nextjs\";\n\nSentry.init({\n  dsn: \"https://04370b06baa50b148ba13cbba39282a6@o42738.ingest.us.sentry.io/4507580984721408\",\n\n  // Adjust this value in production, or use tracesSampler for greater control\n  tracesSampleRate: 1,\n\n  // Setting this option to true will print useful information to the console while you're setting up Sentry.\n  debug: false,\n\n  replaysOnErrorSampleRate: 1.0,\n\n  // This sets the sample rate to be 10%. You may want this to be 100% while\n  // in development and sample at a lower rate in production\n  replaysSessionSampleRate: 0.1,\n\n  // You can remove this option if you're not planning to use the Sentry Session Replay feature:\n  integrations: [\n    Sentry.replayIntegration({\n      // Additional Replay configuration goes in here, for example:\n      maskAllText: true,\n      blockAllMedia: true,\n    }),\n  ],\n});",
    "originFile": "\\sentry.client.config.ts"
  },
  {
    "id": "\\sentry.edge.config",
    "language": "typescript",
    "label": "C:\\Users\\gmasc\\OneDrive\\Documentos\\CodeGPT\\danielavila.me-main\\sentry.edge.config.ts",
    "type": "file",
    "totalTokens": 189,
    "inDegree": 0,
    "outDegree": 0,
    "code": "// This file configures the initialization of Sentry for edge features (middleware, edge routes, and so on).\n// The config you add here will be used whenever one of the edge features is loaded.\n// Note that this config is unrelated to the Vercel Edge Runtime and is also required when running locally.\n// https://docs.sentry.io/platforms/javascript/guides/nextjs/\n\nimport * as Sentry from \"@sentry/nextjs\";\n\nSentry.init({\n  dsn: \"https://04370b06baa50b148ba13cbba39282a6@o42738.ingest.us.sentry.io/4507580984721408\",\n\n  // Adjust this value in production, or use tracesSampler for greater control\n  tracesSampleRate: 1,\n\n  // Setting this option to true will print useful information to the console while you're setting up Sentry.\n  debug: false,\n});\n",
    "importStatements": [
      "import * as Sentry from \"@sentry/nextjs\";"
    ],
    "codeNoBody": "// This file configures the initialization of Sentry for edge features (middleware, edge routes, and so on).\n// The config you add here will be used whenever one of the edge features is loaded.\n// Note that this config is unrelated to the Vercel Edge Runtime and is also required when running locally.\n// https://docs.sentry.io/platforms/javascript/guides/nextjs/\nimport * as Sentry from \"@sentry/nextjs\";\n\nSentry.init({\n  dsn: \"https://04370b06baa50b148ba13cbba39282a6@o42738.ingest.us.sentry.io/4507580984721408\",\n\n  // Adjust this value in production, or use tracesSampler for greater control\n  tracesSampleRate: 1,\n\n  // Setting this option to true will print useful information to the console while you're setting up Sentry.\n  debug: false,\n});",
    "originFile": "\\sentry.edge.config.ts"
  },
  {
    "id": "\\sentry.server.config",
    "language": "typescript",
    "label": "C:\\Users\\gmasc\\OneDrive\\Documentos\\CodeGPT\\danielavila.me-main\\sentry.server.config.ts",
    "type": "file",
    "totalTokens": 186,
    "inDegree": 0,
    "outDegree": 0,
    "code": "// This file configures the initialization of Sentry on the server.\n// The config you add here will be used whenever the server handles a request.\n// https://docs.sentry.io/platforms/javascript/guides/nextjs/\n\nimport * as Sentry from \"@sentry/nextjs\";\n\nSentry.init({\n  dsn: \"https://04370b06baa50b148ba13cbba39282a6@o42738.ingest.us.sentry.io/4507580984721408\",\n\n  // Adjust this value in production, or use tracesSampler for greater control\n  tracesSampleRate: 1,\n\n  // Setting this option to true will print useful information to the console while you're setting up Sentry.\n  debug: false,\n\n  // Uncomment the line below to enable Spotlight (https://spotlightjs.com)\n  // spotlight: process.env.NODE_ENV === 'development',\n  \n});\n",
    "importStatements": [
      "import * as Sentry from \"@sentry/nextjs\";"
    ],
    "codeNoBody": "// This file configures the initialization of Sentry on the server.\n// The config you add here will be used whenever the server handles a request.\n// https://docs.sentry.io/platforms/javascript/guides/nextjs/\nimport * as Sentry from \"@sentry/nextjs\";\n\nSentry.init({\n  dsn: \"https://04370b06baa50b148ba13cbba39282a6@o42738.ingest.us.sentry.io/4507580984721408\",\n\n  // Adjust this value in production, or use tracesSampler for greater control\n  tracesSampleRate: 1,\n\n  // Setting this option to true will print useful information to the console while you're setting up Sentry.\n  debug: false,\n\n  // Uncomment the line below to enable Spotlight (https://spotlightjs.com)\n  // spotlight: process.env.NODE_ENV === 'development',\n  \n});",
    "originFile": "\\sentry.server.config.ts"
  },
  {
    "id": "\\tailwind.config::addVariablesForColors",
    "language": "typescript",
    "label": "addVariablesForColors",
    "type": "function",
    "parent": "C:\\Users\\gmasc\\OneDrive\\Documentos\\CodeGPT\\danielavila.me-main\\tailwind.config",
    "totalTokens": 71,
    "inDegree": 2,
    "outDegree": 0,
    "code": "function addVariablesForColors({ addBase, theme }: any) {\n  let allColors = flattenColorPalette(theme(\"colors\"));\n  let newVars = Object.fromEntries(\n    Object.entries(allColors).map(([key, val]) => [`--${key}`, val])\n  );\n\n  addBase({\n    \":root\": newVars,\n  });\n}",
    "importStatements": [],
    "codeNoBody": "function addVariablesForColors({ addBase, theme }: any) {\n//...\n}",
    "originFile": "\\tailwind.config.ts"
  },
  {
    "id": "\\tailwind.config",
    "language": "typescript",
    "label": "C:\\Users\\gmasc\\OneDrive\\Documentos\\CodeGPT\\danielavila.me-main\\tailwind.config.ts",
    "type": "file",
    "totalTokens": 1583,
    "inDegree": 0,
    "outDegree": 2,
    "code": "import type { Config } from \"tailwindcss\";\n\nconst svgToDataUri = require(\"mini-svg-data-uri\");\n\nconst colors = require(\"tailwindcss/colors\");\nconst {\n  default: flattenColorPalette,\n} = require(\"tailwindcss/lib/util/flattenColorPalette\");\n\nconst config = {\n  darkMode: [\"class\"],\n  content: [\n    \"./pages/**/*.{ts,tsx}\",\n    \"./components/**/*.{ts,tsx}\",\n    \"./app/**/*.{ts,tsx}\",\n    \"./src/**/*.{ts,tsx}\",\n    \"./data/**/*.{ts,tsx}\",\n  ],\n  prefix: \"\",\n  theme: {\n    container: {\n      center: true,\n      padding: \"2rem\",\n      screens: {\n        \"2xl\": \"1400px\",\n      },\n    },\n    extend: {\n      colors: {\n        black: {\n          DEFAULT: \"#000\",\n          100: \"#000319\",\n          200: \"rgba(17, 25, 40, 0.75)\",\n          300: \"rgba(255, 255, 255, 0.125)\",\n        },\n        white: {\n          DEFAULT: \"#FFF\",\n          100: \"#BEC1DD\",\n          200: \"#C1C2D3\",\n        },\n        blue: {\n          \"100\": \"#E4ECFF\",\n        },\n        purple: \"#CBACF9\",\n        border: \"hsl(var(--border))\",\n        input: \"hsl(var(--input))\",\n        ring: \"hsl(var(--ring))\",\n        background: \"hsl(var(--background))\",\n        foreground: \"hsl(var(--foreground))\",\n        primary: {\n          DEFAULT: \"hsl(var(--primary))\",\n          foreground: \"hsl(var(--primary-foreground))\",\n        },\n        secondary: {\n          DEFAULT: \"hsl(var(--secondary))\",\n          foreground: \"hsl(var(--secondary-foreground))\",\n        },\n        destructive: {\n          DEFAULT: \"hsl(var(--destructive))\",\n          foreground: \"hsl(var(--destructive-foreground))\",\n        },\n        muted: {\n          DEFAULT: \"hsl(var(--muted))\",\n          foreground: \"hsl(var(--muted-foreground))\",\n        },\n        accent: {\n          DEFAULT: \"hsl(var(--accent))\",\n          foreground: \"hsl(var(--accent-foreground))\",\n        },\n        popover: {\n          DEFAULT: \"hsl(var(--popover))\",\n          foreground: \"hsl(var(--popover-foreground))\",\n        },\n        card: {\n          DEFAULT: \"hsl(var(--card))\",\n          foreground: \"hsl(var(--card-foreground))\",\n        },\n      },\n      borderRadius: {\n        lg: \"var(--radius)\",\n        md: \"calc(var(--radius) - 2px)\",\n        sm: \"calc(var(--radius) - 4px)\",\n      },\n      keyframes: {\n        \"accordion-down\": {\n          from: { height: \"0\" },\n          to: { height: \"var(--radix-accordion-content-height)\" },\n        },\n        \"accordion-up\": {\n          from: { height: \"var(--radix-accordion-content-height)\" },\n          to: { height: \"0\" },\n        },\n        spotlight: {\n          \"0%\": {\n            opacity: \"0\",\n            transform: \"translate(-72%, -62%) scale(0.5)\",\n          },\n          \"100%\": {\n            opacity: \"1\",\n            transform: \"translate(-50%,-40%) scale(1)\",\n          },\n        },\n        shimmer: {\n          from: {\n            backgroundPosition: \"0 0\",\n          },\n          to: {\n            backgroundPosition: \"-200% 0\",\n          },\n        },\n        moveHorizontal: {\n          \"0%\": {\n            transform: \"translateX(-50%) translateY(-10%)\",\n          },\n          \"50%\": {\n            transform: \"translateX(50%) translateY(10%)\",\n          },\n          \"100%\": {\n            transform: \"translateX(-50%) translateY(-10%)\",\n          },\n        },\n        moveInCircle: {\n          \"0%\": {\n            transform: \"rotate(0deg)\",\n          },\n          \"50%\": {\n            transform: \"rotate(180deg)\",\n          },\n          \"100%\": {\n            transform: \"rotate(360deg)\",\n          },\n        },\n        moveVertical: {\n          \"0%\": {\n            transform: \"translateY(-50%)\",\n          },\n          \"50%\": {\n            transform: \"translateY(50%)\",\n          },\n          \"100%\": {\n            transform: \"translateY(-50%)\",\n          },\n        },\n        scroll: {\n          to: {\n            transform: \"translate(calc(-50% - 0.5rem))\",\n          },\n        },\n      },\n      animation: {\n        \"accordion-down\": \"accordion-down 0.2s ease-out\",\n        \"accordion-up\": \"accordion-up 0.2s ease-out\",\n        spotlight: \"spotlight 2s ease .75s 1 forwards\",\n        shimmer: \"shimmer 2s linear infinite\",\n        first: \"moveVertical 30s ease infinite\",\n        second: \"moveInCircle 20s reverse infinite\",\n        third: \"moveInCircle 40s linear infinite\",\n        fourth: \"moveHorizontal 40s ease infinite\",\n        fifth: \"moveInCircle 20s ease infinite\",\n        scroll:\n          \"scroll var(--animation-duration, 40s) var(--animation-direction, forwards) linear infinite\",\n      },\n    },\n  },\n  plugins: [\n    require(\"tailwindcss-animate\"),\n    addVariablesForColors,\n    function ({ matchUtilities, theme }: any) {\n      matchUtilities(\n        {\n          \"bg-grid\": (value: any) => ({\n            backgroundImage: `url(\"${svgToDataUri(\n              `<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 32 32\" width=\"100\" height=\"100\" fill=\"none\" stroke=\"${value}\"><path d=\"M0 .5H31.5V32\"/></svg>`\n            )}\")`,\n          }),\n          \"bg-grid-small\": (value: any) => ({\n            backgroundImage: `url(\"${svgToDataUri(\n              `<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 32 32\" width=\"8\" height=\"8\" fill=\"none\" stroke=\"${value}\"><path d=\"M0 .5H31.5V32\"/></svg>`\n            )}\")`,\n          }),\n          \"bg-dot\": (value: any) => ({\n            backgroundImage: `url(\"${svgToDataUri(\n              `<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 32 32\" width=\"16\" height=\"16\" fill=\"none\"><circle fill=\"${value}\" id=\"pattern-circle\" cx=\"10\" cy=\"10\" r=\"1.6257413380501518\"></circle></svg>`\n            )}\")`,\n          }),\n        },\n        { values: flattenColorPalette(theme(\"backgroundColor\")), type: \"color\" }\n      );\n    },\n  ],\n} satisfies Config;\n\nfunction addVariablesForColors({ addBase, theme }: any) {\n  let allColors = flattenColorPalette(theme(\"colors\"));\n  let newVars = Object.fromEntries(\n    Object.entries(allColors).map(([key, val]) => [`--${key}`, val])\n  );\n\n  addBase({\n    \":root\": newVars,\n  });\n}\n\nexport default config;",
    "importStatements": [
      "import type { Config } from \"tailwindcss\";",
      "const svgToDataUri = require(\"mini-svg-data-uri\");",
      "const colors = require(\"tailwindcss/colors\");",
      "const {\n  default: flattenColorPalette,\n} = require(\"tailwindcss/lib/util/flattenColorPalette\");"
    ],
    "codeNoBody": "import type { Config } from \"tailwindcss\";\nconst svgToDataUri = require(\"mini-svg-data-uri\");\n\nconst colors = require(\"tailwindcss/colors\");\nconst {\n  default: flattenColorPalette,\n} = require(\"tailwindcss/lib/util/flattenColorPalette\");\n\nconst config = {\n  darkMode: [\"class\"],\n  content: [\n    \"./pages/**/*.{ts,tsx}\",\n    \"./components/**/*.{ts,tsx}\",\n    \"./app/**/*.{ts,tsx}\",\n    \"./src/**/*.{ts,tsx}\",\n    \"./data/**/*.{ts,tsx}\",\n  ],\n  prefix: \"\",\n  theme: {\n    container: {\n      center: true,\n      padding: \"2rem\",\n      screens: {\n        \"2xl\": \"1400px\",\n      },\n    },\n    extend: {\n      colors: {\n        black: {\n          DEFAULT: \"#000\",\n          100: \"#000319\",\n          200: \"rgba(17, 25, 40, 0.75)\",\n          300: \"rgba(255, 255, 255, 0.125)\",\n        },\n        white: {\n          DEFAULT: \"#FFF\",\n          100: \"#BEC1DD\",\n          200: \"#C1C2D3\",\n        },\n        blue: {\n          \"100\": \"#E4ECFF\",\n        },\n        purple: \"#CBACF9\",\n        border: \"hsl(var(--border))\",\n        input: \"hsl(var(--input))\",\n        ring: \"hsl(var(--ring))\",\n        background: \"hsl(var(--background))\",\n        foreground: \"hsl(var(--foreground))\",\n        primary: {\n          DEFAULT: \"hsl(var(--primary))\",\n          foreground: \"hsl(var(--primary-foreground))\",\n        },\n        secondary: {\n          DEFAULT: \"hsl(var(--secondary))\",\n          foreground: \"hsl(var(--secondary-foreground))\",\n        },\n        destructive: {\n          DEFAULT: \"hsl(var(--destructive))\",\n          foreground: \"hsl(var(--destructive-foreground))\",\n        },\n        muted: {\n          DEFAULT: \"hsl(var(--muted))\",\n          foreground: \"hsl(var(--muted-foreground))\",\n        },\n        accent: {\n          DEFAULT: \"hsl(var(--accent))\",\n          foreground: \"hsl(var(--accent-foreground))\",\n        },\n        popover: {\n          DEFAULT: \"hsl(var(--popover))\",\n          foreground: \"hsl(var(--popover-foreground))\",\n        },\n        card: {\n          DEFAULT: \"hsl(var(--card))\",\n          foreground: \"hsl(var(--card-foreground))\",\n        },\n      },\n      borderRadius: {\n        lg: \"var(--radius)\",\n        md: \"calc(var(--radius) - 2px)\",\n        sm: \"calc(var(--radius) - 4px)\",\n      },\n      keyframes: {\n        \"accordion-down\": {\n          from: { height: \"0\" },\n          to: { height: \"var(--radix-accordion-content-height)\" },\n        },\n        \"accordion-up\": {\n          from: { height: \"var(--radix-accordion-content-height)\" },\n          to: { height: \"0\" },\n        },\n        spotlight: {\n          \"0%\": {\n            opacity: \"0\",\n            transform: \"translate(-72%, -62%) scale(0.5)\",\n          },\n          \"100%\": {\n            opacity: \"1\",\n            transform: \"translate(-50%,-40%) scale(1)\",\n          },\n        },\n        shimmer: {\n          from: {\n            backgroundPosition: \"0 0\",\n          },\n          to: {\n            backgroundPosition: \"-200% 0\",\n          },\n        },\n        moveHorizontal: {\n          \"0%\": {\n            transform: \"translateX(-50%) translateY(-10%)\",\n          },\n          \"50%\": {\n            transform: \"translateX(50%) translateY(10%)\",\n          },\n          \"100%\": {\n            transform: \"translateX(-50%) translateY(-10%)\",\n          },\n        },\n        moveInCircle: {\n          \"0%\": {\n            transform: \"rotate(0deg)\",\n          },\n          \"50%\": {\n            transform: \"rotate(180deg)\",\n          },\n          \"100%\": {\n            transform: \"rotate(360deg)\",\n          },\n        },\n        moveVertical: {\n          \"0%\": {\n            transform: \"translateY(-50%)\",\n          },\n          \"50%\": {\n            transform: \"translateY(50%)\",\n          },\n          \"100%\": {\n            transform: \"translateY(-50%)\",\n          },\n        },\n        scroll: {\n          to: {\n            transform: \"translate(calc(-50% - 0.5rem))\",\n          },\n        },\n      },\n      animation: {\n        \"accordion-down\": \"accordion-down 0.2s ease-out\",\n        \"accordion-up\": \"accordion-up 0.2s ease-out\",\n        spotlight: \"spotlight 2s ease .75s 1 forwards\",\n        shimmer: \"shimmer 2s linear infinite\",\n        first: \"moveVertical 30s ease infinite\",\n        second: \"moveInCircle 20s reverse infinite\",\n        third: \"moveInCircle 40s linear infinite\",\n        fourth: \"moveHorizontal 40s ease infinite\",\n        fifth: \"moveInCircle 20s ease infinite\",\n        scroll:\n          \"scroll var(--animation-duration, 40s) var(--animation-direction, forwards) linear infinite\",\n      },\n    },\n  },\n  plugins: [\n    require(\"tailwindcss-animate\"),\n    addVariablesForColors,\n    function ({ matchUtilities, theme }: any) {\n      matchUtilities(\n        {\n          \"bg-grid\": (value: any) => ({\n            backgroundImage: `url(\"${svgToDataUri(\n              `<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 32 32\" width=\"100\" height=\"100\" fill=\"none\" stroke=\"${value}\"><path d=\"M0 .5H31.5V32\"/></svg>`\n            )}\")`,\n          }),\n          \"bg-grid-small\": (value: any) => ({\n            backgroundImage: `url(\"${svgToDataUri(\n              `<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 32 32\" width=\"8\" height=\"8\" fill=\"none\" stroke=\"${value}\"><path d=\"M0 .5H31.5V32\"/></svg>`\n            )}\")`,\n          }),\n          \"bg-dot\": (value: any) => ({\n            backgroundImage: `url(\"${svgToDataUri(\n              `<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 32 32\" width=\"16\" height=\"16\" fill=\"none\"><circle fill=\"${value}\" id=\"pattern-circle\" cx=\"10\" cy=\"10\" r=\"1.6257413380501518\"></circle></svg>`\n            )}\")`,\n          }),\n        },\n        { values: flattenColorPalette(theme(\"backgroundColor\")), type: \"color\" }\n      );\n    },\n  ],\n} satisfies Config;\n\nfunction addVariablesForColors({ addBase, theme }: any) {\n//...\n}\n\nexport default config;",
    "originFile": "\\tailwind.config.ts"
  },
  {
    "id": "\\utils\\cn::cn",
    "language": "typescript",
    "label": "cn",
    "type": "function",
    "parent": "C:\\Users\\gmasc\\OneDrive\\Documentos\\CodeGPT\\danielavila.me-main\\utils\\cn",
    "totalTokens": 18,
    "inDegree": 10,
    "outDegree": 0,
    "code": "function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs));\n}",
    "importStatements": [],
    "codeNoBody": "function cn(...inputs: ClassValue[]) {\n       //...\n       }",
    "originFile": "\\utils\\cn.ts"
  },
  {
    "id": "\\utils\\cn",
    "language": "typescript",
    "label": "C:\\Users\\gmasc\\OneDrive\\Documentos\\CodeGPT\\danielavila.me-main\\utils\\cn.ts",
    "type": "file",
    "totalTokens": 44,
    "inDegree": 0,
    "outDegree": 1,
    "code": "import { ClassValue, clsx } from \"clsx\";\nimport { twMerge } from \"tailwind-merge\";\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs));\n}\n",
    "importStatements": [
      "import { ClassValue, clsx } from \"clsx\";",
      "import { twMerge } from \"tailwind-merge\";"
    ],
    "codeNoBody": "import { ClassValue, clsx } from \"clsx\";\nimport { twMerge } from \"tailwind-merge\";\nexport function cn(...inputs: ClassValue[]) {\n       //...\n       }",
    "originFile": "\\utils\\cn.ts"
  }
]