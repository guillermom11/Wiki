{
  "C:\\Users\\gmasc\\OneDrive\\Documentos\\CodeGPT\\Graphs\\codebase-index-ts": "The folder \"C:\\Users\\gmasc\\OneDrive\\Documentos\\CodeGPT\\Graphs\\codebase-index-ts\" includes files configuring Jest for TypeScript in Node.js, defining server settings, Hono application routes, and codebase parsing. It contains classes, queries, and utilities for processing codebases in JavaScript, TypeScript, Python, Java, and C, schema validation, JWT handling, Git interactions, and SQL database connections, with tests covering import statements, assignments, function definitions, and calls in various languages. Additionally, it provides functions for graph creation, updating, and access token management for Git services, along with wiki structure processing and documentation functionalities.",
  "C:\\Users\\gmasc\\OneDrive\\Documentos\\CodeGPT\\Graphs\\codebase-index-ts\\src": "The folder contains files that set server configurations, define routes for graph creation and data fetching, implement codebase parsing and simplification, provide tree-sitter queries for various programming languages, handle schema validation, JWT authorization, graph creation, and updating, interact with Git services, refresh access tokens, connect to a PostgreSQL database, process wiki structures, and document nodes and files, utilizing functions for file operations, path handling, and external library imports.",
  "C:\\Users\\gmasc\\OneDrive\\Documentos\\CodeGPT\\Graphs\\codebase-index-ts\\src\\model": "The folder contains files with functions for cleaning and splitting content, capturing queries, assigning variables, calling identifiers, and capturing calls, along with classes ImportName, ImportStatement, Node, Codebase, and interface Link. \"consts.ts\" defines constants, mappings for programming languages and file extensions, and imports tree-sitter parsers for JavaScript, Python, TypeScript, TSX, Java, and C. \"utils.ts\" includes functions for file retrieval, size calculation, parser and query retrieval, query capture, cleaning, and renaming, as well as content processing, node identification, and handling consecutive dots in strings.",
  "C:\\Users\\gmasc\\OneDrive\\Documentos\\CodeGPT\\Graphs\\codebase-index-ts\\src\\queries": "The \"queries\" folder contains tree-sitter queries for Java, JavaScript, and TypeScript, defining import statements, class definitions, assignments, constructor methods, calls, and exports, with placeholders for modifiers, return types, names, parameters, and bodies. The \"index.ts\" file exports `languageQueries` for multiple languages and `treeSitterQueries` interface, while \"javascript.ts\" and \"typescript.ts\" provide specific queries for JavaScript and TypeScript, respectively, including import statements, assignments, function, class, interface, and enum definitions, and export clauses, with rules for calls, assignments, and extra assignment codes.",
  "C:\\Users\\gmasc\\OneDrive\\Documentos\\CodeGPT\\Graphs\\codebase-index-ts\\src\\routes": "Uses zod for schema validation, `repoRequestValidator` validates JSON objects with specific properties, assigns 'SUPABASE_JWT' environment variable to 'secret', creates a POST route for graph creation handling authorization, organization ID retrieval, git access token fetching, repository download, codebase parsing, and JSON response generation. `processGraphCreation` manages graph creation by processing files, generating IDs, and updating the database. The file includes a route handler for graph updating with JWT authentication, SQL database interaction, and graph status updates based on repository changes, along with an interface `UpdateGraph` and `updateGraph` function for the update process.",
  "C:\\Users\\gmasc\\OneDrive\\Documentos\\CodeGPT\\Graphs\\codebase-index-ts\\src\\utils\\bitbucket": "Folder \"bitbucket\" contains a file that imports `getEnv` from \"../utils\" and includes a function `refreshAccessToken(refreshToken: string)` that sends a POST request to Bitbucket's OAuth2 endpoint to refresh the access token using the provided parameters, returning a new access token and refresh token if successful, or logging an error message and returning null otherwise.",
  "C:\\Users\\gmasc\\OneDrive\\Documentos\\CodeGPT\\Graphs\\codebase-index-ts\\src\\utils": "The folder \"utils\" contains files for handling access token refreshment with Bitbucket OAuth2, PostgreSQL database connection, Git service interactions, and environment variable retrieval using `getEnv` function, including functions for refreshing access tokens with GitLab API and managing environment variables for database, Supabase, GitLab, and Bitbucket integrations.",
  "C:\\Users\\gmasc\\OneDrive\\Documentos\\CodeGPT\\Graphs\\codebase-index-ts\\src\\utils\\gitlab": "The \"refreshAccessToken\" async function in the \"gitlab\" folder sends a POST request to GitLab API to refresh the access token with the provided refresh token, using \"getEnv\" to get GitLab app ID and secret ID, returning a promise with new access token and refresh token if successful, or logging an error message and returning null.",
  "C:\\Users\\gmasc\\OneDrive\\Documentos\\CodeGPT\\Graphs\\codebase-index-ts\\src\\wiki": "Folder \"wiki\" contains the file \"wiki2.ts\" with functions and constants for processing and documenting nodes and files in a wiki structure, including generating documentation, building call graphs, and finding start nodes. Constants are defined for API keys, file paths, and model settings, with imports for file system operations, path handling, and external libraries like OpenAI.",
  "C:\\Users\\gmasc\\OneDrive\\Documentos\\CodeGPT\\Graphs\\codebase-index-ts\\tests": "The folder \"C:\\Users\\gmasc\\OneDrive\\Documentos\\CodeGPT\\Graphs\\codebase-index-ts\\tests\" contains test files for C, Java, TypeScript, and Python code. The tests cover import statements, assignments, function and class definitions, calls, and code structure, utilizing classes like `Node`, `ImportStatement`, `Codebase`, `ImportName`, and `ImportStatement`. The tests focus on scenarios such as generating imports, resolving paths, parsing exports, simplifying attributes, and extracting calls within the codebase, as well as testing functionalities related to renaming source modules, capturing specific elements, and testing utilities in TypeScript, Python, and JavaScript files."
}