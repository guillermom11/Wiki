{
  "C:\\Users\\gmasc\\OneDrive\\Documentos\\CodeGPT\\Graphs\\codebase-index-ts\\jest.config.js": "This file configures Jest to use TypeScript for testing in a Node.js environment, matching test files with a specific pattern.",
  "C:\\Users\\gmasc\\OneDrive\\Documentos\\CodeGPT\\Graphs\\codebase-index-ts\\src\\index.ts": "The file initializes a Hono server, sets the server port to 8001, applies middleware for JSON formatting and CORS, defines routes for handling codebase, repository, and graph requests, parses a codebase, extracts information, simplifies data, generates links, and writes results to JSON files.",
  "C:\\Users\\gmasc\\OneDrive\\Documentos\\CodeGPT\\Graphs\\codebase-index-ts\\src\\model\\calls.ts": "This file includes functions for cleaning and splitting content, capturing queries, and defining nodes and import statements. It also contains a class for variable assignment, a class for call identification, and a class for capturing calls.",
  "C:\\Users\\gmasc\\OneDrive\\Documentos\\CodeGPT\\Graphs\\codebase-index-ts\\src\\model\\codebase.ts": "This file includes classes ImportName, ImportStatement, Link, Node, and Codebase, along with types NodeCallTuple. It imports functions for capturing queries, handling files, renaming sources, getting called nodes, and cleaning definitions from \"utils\" and constants from \"consts\". Additionally, it imports CallsCapturer class from \"calls\" and encoding_for_model function from \"tiktoken\" to assign the result to the variable enc.",
  "C:\\Users\\gmasc\\OneDrive\\Documentos\\CodeGPT\\Graphs\\codebase-index-ts\\src\\model\\consts.ts": "Defines various constants and mappings for handling programming languages and file processing, including arrays like `excludedFolders` and `excludedExtensions`, objects like `languageExtensionMap`, `newClassMethodsMap`, `itselfClassMap`, and `indexSuffixesMap`, and the `languages` object referencing tree-sitter language parsers. Additionally, includes the `treeSitterCommentTypes` array for comment types and imports tree-sitter parsers for JavaScript, Python, TypeScript, TSX, Java, C, and PHP.",
  "C:\\Users\\gmasc\\OneDrive\\Documentos\\CodeGPT\\Graphs\\codebase-index-ts\\src\\model\\utils.ts": "The file \"utils.ts\" includes functions to retrieve a list of files in a folder based on specified extensions, calculate the total size of matching files, obtain Tree-Sitter parser and queries for a language, capture queries from Tree-Sitter, clean captures up to a keyword, and rename source names. Additionally, it provides functions to clean and split content, get called nodes from imported files, and determine the length of the first consecutive sequence of dots in a string.",
  "C:\\Users\\gmasc\\OneDrive\\Documentos\\CodeGPT\\Graphs\\codebase-index-ts\\src\\queries\\c.ts": "This file contains tree-sitter queries for Java code, including import statements, class definitions, assignments, definitions templates, constructor methods, calls, and special cases. It defines various regex patterns and templates for parsing and processing Java code using tree-sitter queries, with functionalities imported from the 'index' file.",
  "C:\\Users\\gmasc\\OneDrive\\Documentos\\CodeGPT\\Graphs\\codebase-index-ts\\src\\queries\\index.ts": "Defines an object \"languageQueries\" containing queries for various programming languages imported from separate files. Also includes an interface \"treeSitterQueries\".",
  "C:\\Users\\gmasc\\OneDrive\\Documentos\\CodeGPT\\Graphs\\codebase-index-ts\\src\\queries\\java.ts": "The file \"java.ts\" contains queries for Java code using Tree-sitter, including import statements, class definitions, method invocations, and package declarations. It defines templates for import statements, assignments, constructor/method/class declarations, function definitions, and space declarations, utilizing the `treeSitterQueries` import. The `extraAssignmentCode` function takes a string parameter and returns an empty string.",
  "C:\\Users\\gmasc\\OneDrive\\Documentos\\CodeGPT\\Graphs\\codebase-index-ts\\src\\queries\\javascript.ts": "Defines patterns for import statements, global assignments, function and class definitions, export clauses, calls to class, method, and function calls, member expressions, and arguments. Includes specific patterns for import statements, assignments, definitions, export clauses, extra assignment code generation, calls, and space declaration.",
  "C:\\Users\\gmasc\\OneDrive\\Documentos\\CodeGPT\\Graphs\\codebase-index-ts\\src\\queries\\php.ts": "The file \"C:\\Users\\gmasc\\OneDrive\\Documentos\\CodeGPT\\Graphs\\codebase-index-ts\\src\\queries\\php.ts\" includes queries for import statements, global assignments, function, class, and method definitions, export clauses, calls, and space declarations in PHP code using tree-sitter syntax, with specific attention to identifying components like member expressions, arguments, and namespaces.",
  "C:\\Users\\gmasc\\OneDrive\\Documentos\\CodeGPT\\Graphs\\codebase-index-ts\\src\\queries\\python.ts": "The file \"python.ts\" contains tree-sitter queries for Python code, including import statements, global assignments, function and class definitions, class and function calls, method and self.parameter calls, class extensions, Pydantic-like parameters, and typed parameters and return types. It also includes specific assignments, definitions, and templates for capturing various nodes and structures within Python code, utilizing the `treeSitterQueries` import from the `index` file for parsing and analysis.",
  "C:\\Users\\gmasc\\OneDrive\\Documentos\\CodeGPT\\Graphs\\codebase-index-ts\\src\\queries\\typescript.ts": "This file contains Tree-sitter definition queries for Typescript, including import statements, global assignments, function, class, interface, and enum definitions, and export clauses. It extends and combines queries from the 'javascript' module, defining rules for interfaces, enums, and type aliases, and includes a template for method and arrow function signatures. The file also handles calls, assignments, and special cases related to assignments, ensuring correct call identification.",
  "C:\\Users\\gmasc\\OneDrive\\Documentos\\CodeGPT\\Graphs\\codebase-index-ts\\src\\routes\\create_graph-test.ts": "Uses zod for validation, imports z and zValidator from '@hono/zod-validator', and defines a repoRequestValidator function that validates a JSON object with properties git_provider, repo_org, repo_name, branch, and connection_id. Assigns the value of the environment variable 'SUPABASE_JWT' to the variable 'secret' using the 'getEnv' function imported from '../utils/utils'. The createGraphTest instance handles a POST request, validates the request, retrieves user information, fetches necessary access tokens, downloads and extracts a repository, parses the codebase, simplifies the codebase structure, and returns a JSON response containing the graph nodes and links.",
  "C:\\Users\\gmasc\\OneDrive\\Documentos\\CodeGPT\\Graphs\\codebase-index-ts\\src\\routes\\create_graph.ts": "The file \"create_graph.ts\" contains an async function `processGraphCreation` that handles graph creation in a database, utilizing SQL queries and the `Codebase` class. It also includes a validator for repository requests and assigns the environment variable 'SUPABASE_JWT' to 'secret'.",
  "C:\\Users\\gmasc\\OneDrive\\Documentos\\CodeGPT\\Graphs\\codebase-index-ts\\src\\routes\\graphs.ts": "This file contains a route handler for updating a graph, which requires authentication via JWT. It retrieves graph information from a SQL database, checks for updates in the repository, and updates the graph status accordingly. If the graph is already up to date, it returns a success message; otherwise, it updates the graph and returns a message indicating the update process. Additionally, it defines an interface `UpdateGraph` and an `updateGraph` function to handle the graph update process.",
  "C:\\Users\\gmasc\\OneDrive\\Documentos\\CodeGPT\\Graphs\\codebase-index-ts\\src\\utils\\bitbucket\\refresh-token.ts": "Imports `getEnv` from \"../utils\". The function `refreshAccessToken` takes a `refreshToken` string as a parameter and sends a POST request to Bitbucket's OAuth2 endpoint to refresh the access token using the provided `refreshToken`, `client_id`, and `client_secret`. If successful, it returns an object with the new access token and refresh token; otherwise, it logs an error message and returns null.",
  "C:\\Users\\gmasc\\OneDrive\\Documentos\\CodeGPT\\Graphs\\codebase-index-ts\\src\\utils\\db.ts": "The \"db.ts\" file exports a configuration object named \"sql\" for connecting to a PostgreSQL database using the \"postgres\" library, specifying host, database name, port, username, password, connection settings, and SSL configuration utilizing the \"getEnv\" function from the 'utils' file.",
  "C:\\Users\\gmasc\\OneDrive\\Documentos\\CodeGPT\\Graphs\\codebase-index-ts\\src\\utils\\git.ts": "This file in \"git.ts\" contains functions for downloading and extracting repositories, getting commit information, retrieving access tokens, and determining commit hashes based on the provider (GitHub, GitLab, or Bitbucket). It also defines the constant \"MAXSIZE\" as 2 MB.",
  "C:\\Users\\gmasc\\OneDrive\\Documentos\\CodeGPT\\Graphs\\codebase-index-ts\\src\\utils\\gitlab\\refresh-token.ts": "This async function \"refreshAccessToken\" takes a string parameter \"refreshToken\" and sends a POST request to the GitLab API to refresh the access token using the provided refresh token. It utilizes the \"getEnv\" function to retrieve the GitLab app ID and secret ID, then returns a Promise that resolves to an object containing the new access token and refresh token if the request is successful; otherwise, it logs an error message and returns null.",
  "C:\\Users\\gmasc\\OneDrive\\Documentos\\CodeGPT\\Graphs\\codebase-index-ts\\src\\utils\\utils.ts": "Defines an object containing various environment variables related to database connection details, Supabase configuration, GitLab, and Bitbucket authentication credentials, sourced from the process environment variables. The \"getEnv\" function retrieves a specific environment variable based on the provided key from the ENV_VARS object.",
  "C:\\Users\\gmasc\\OneDrive\\Documentos\\CodeGPT\\Graphs\\codebase-index-ts\\src\\wiki\\wiki2.ts": "The file \"wiki2.ts\" contains functions and constants for processing and documenting nodes and files in a wiki structure. It includes functions for finding start nodes in a call graph, reading JSON files asynchronously, tokenizing content using Tiktoken, and generating documentation for nodes and files. The file also initializes variables for settings, paths, and API keys.",
  "C:\\Users\\gmasc\\OneDrive\\Documentos\\CodeGPT\\Graphs\\codebase-index-ts\\tests\\c.test.ts": "The file contains tests for import statements, assignments, function definition, struct definition, union definition, header file, and calls in a C codebase. It utilizes classes like `Codebase`, `Node`, `ImportStatement`, and `ImportName` from the '../src/model/codebase' module, with `nodeAttributes` storing various attributes. The `rootFolderPath` variable holds the path '/my/path'.",
  "C:\\Users\\gmasc\\OneDrive\\Documentos\\CodeGPT\\Graphs\\codebase-index-ts\\tests\\java.test.ts": "The file \"java.test.ts\" contains tests for import statements, class definition, code without body, and calls in Java code. It imports classes like `Codebase`, `Node`, `ImportStatement`, and `ImportName` from \"../src/model/codebase\" and defines a variable `rootFolderPath` as '/my/path'.",
  "C:\\Users\\gmasc\\OneDrive\\Documentos\\CodeGPT\\Graphs\\codebase-index-ts\\tests\\javascript.test.ts": "This file contains tests for import statements, assignments, function definitions, class definitions, and calls in TypeScript and JavaScript files. It utilizes classes like `Codebase`, `Node`, `ImportStatement`, and `ImportName` from the '../src/model/codebase' module, and defines variables like `rootFolderPath` and `nodeAttributes`.",
  "C:\\Users\\gmasc\\OneDrive\\Documentos\\CodeGPT\\Graphs\\codebase-index-ts\\tests\\php.test.ts": "The file \"php.test.ts\" includes tests for import statements, global variable assignments, function definitions, class definitions, namespaces, and calls in PHP files. It imports components from \"../src/model/codebase\" and defines the `nodeAttributes` array and `rootFolderPath` variable.",
  "C:\\Users\\gmasc\\OneDrive\\Documentos\\CodeGPT\\Graphs\\codebase-index-ts\\tests\\python.test.ts": "The file at \"C:\\Users\\gmasc\\OneDrive\\Documentos\\CodeGPT\\Graphs\\codebase-index-ts\\tests\\python.test.ts\" contains tests for import statements, assignments, function definitions, class definitions, code without body, and calls. It utilizes attributes like id, type, name, label, language, exportable, documentation, code, parent, inDegree, and outDegree, along with entities imported from \"../src/model/codebase\" and a rootFolderPath variable storing '/my/path'.",
  "C:\\Users\\gmasc\\OneDrive\\Documentos\\CodeGPT\\Graphs\\codebase-index-ts\\tests\\utils.test.ts": "The file \"utils.test.ts\" contains tests for the functions in the \"utils\" module. The tests cover the \"cleanAndSplitContent\" function for splitting content elements, and the \"renameSource\" function for renaming source modules in JavaScript/TypeScript and Python. Additionally, there are tests for capturing different elements like import statements and constructor definitions in JavaScript/TypeScript and Python.",
  "C:\\Users\\gmasc\\OneDrive\\Documentos\\CodeGPT\\Graphs\\codebase-index-ts\\wiki.ts": "The file \"wiki.ts\" contains functions and variables for processing codebase information and generating summaries. It utilizes the 'fs' and 'path' modules for file operations, interacts with the OpenAI API, and defines a 'wikiNode' type. The script reads nodes from a JSON file, processes files and folders, and generates summaries for repositories and folders."
}