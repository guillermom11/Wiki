{
  "judini-python-main\\judini-python-main\\examples\\chat_completion.py": "This file contains a function called \"chat_example\" that demonstrates a chat interaction with a CodeGPT agent by taking a list of messages as input, retrieving necessary credentials from environment variables, creating an instance of CodeGPTPlus class, interacting with the agent to obtain responses, and printing the responses. The function requires imports from \"os\", \"judini\", and \"dotenv\".",
  "judini-python-main\\judini-python-main\\setup.py": "This file sets up the Judini Python package, version 0.1.12, developed by Judini Inc. It includes a description, long description from a README file, author information, package details, dependencies, and classifiers for Python 3 compatibility and licensing.",
  "judini-python-main\\judini-python-main\\src\\judini\\__init__.py": "This file contains the import statement for the `CodeGPTPlus` class from the `codegpt` module.",
  "judini-python-main\\judini-python-main\\src\\judini\\codegpt.py": "The file \"codegpt.py\" in the \"judini-python-main\\judini-python-main\\src\\judini\" directory contains a class called CodeGPTPlus with a base URL 'https://api-beta.codegpt.co/api/v1' for API requests, and a constant PLAYGROUND_KEYS_URL storing 'https://app.codegpt.co/en/apikeys'.",
  "judini-python-main\\judini-python-main\\src\\judini\\types.py": "The file \"types.py\" contains classes for representing an Agent, DocumentMetadata, and Document, each with specific attributes and functionalities such as handling JSON deserialization, metadata storage, and document representation. The classes utilize imports from pydantic, typing, and json for data validation and manipulation.",
  "judini-python-main\\judini-python-main\\src\\judini\\utils.py": "This file \"utils.py\" contains two functions: \"handle_stream\" which uses the `requests` library to handle a streaming response by yielding chunks of data iteratively, and \"handle_non_stream\" which extracts and returns JSON content from a `requests.Response` object, handling exceptions and closing the response object.",
  "judini-python-main\\judini-python-main\\streamlit.py": "The file \"streamlit.py\" utilizes Streamlit for creating a CodeGPT chat interface, allowing users to interact with an AI assistant powered by the CodeGPT model. It includes functionalities for setting up the chat interface, inputting API keys, managing messages, enabling streaming responses, and displaying chat messages between the user and the assistant."
}